# Docker Compose configuration for full-stack application
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: sugarcane_db
      POSTGRES_USER: sugarcane_user
      POSTGRES_PASSWORD: sugarcane_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sugarcane_user -d sugarcane_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://sugarcane_user:sugarcane_password@db:5432/sugarcane_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-production-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python ../scripts/setup_database.py &&
             gunicorn --bind 0.0.0.0:8000 sugarcane_backend.wsgi:application"

  # Celery Worker
  celery:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://sugarcane_user:sugarcane_password@db:5432/sugarcane_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-production-secret-key-here
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - backend
    command: celery -A sugarcane_backend worker -l info

  # Celery Beat (Scheduler)
  celery-beat:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://sugarcane_user:sugarcane_password@db:5432/sugarcane_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-production-secret-key-here
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
      - backend
    command: celery -A sugarcane_backend beat -l info

  # Next.js Frontend
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume:
