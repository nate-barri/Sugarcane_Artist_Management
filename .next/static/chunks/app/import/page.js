/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/import/page"],{

/***/ "(app-pages-browser)/./app/import/page.tsx":
/*!*****************************!*\
  !*** ./app/import/page.tsx ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ImportDashboard)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_sidebar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/sidebar */ \"(app-pages-browser)/./components/sidebar.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction ImportDashboard() {\n    _s();\n    const [isUploading, setIsUploading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [uploadStatus, setUploadStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [recentImports, setRecentImports] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const handleFileUpload = async (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        if (!file) return;\n        setIsUploading(true);\n        setUploadStatus(\"Uploading and processing...\");\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", file);\n            const response = await fetch(\"/api/upload\", {\n                method: \"POST\",\n                body: formData\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setUploadStatus(\"Success! Processed \".concat(data.records, \" records from \").concat(data.dataType, \" data.\"));\n                const newImport = {\n                    fileName: data.fileName,\n                    type: file.name.endsWith(\".csv\") ? \"CSV\" : \"Excel\",\n                    date: new Date().toISOString().split(\"T\")[0],\n                    status: \"Success\",\n                    records: data.records,\n                    dataType: data.dataType\n                };\n                setRecentImports([\n                    newImport,\n                    ...recentImports\n                ]);\n            } else {\n                setUploadStatus(\"Error: \".concat(data.error));\n            }\n        } catch (error) {\n            setUploadStatus(\"Error: \".concat(error instanceof Error ? error.message : \"Upload failed\"));\n        } finally{\n            setIsUploading(false);\n            // Reset file input\n            event.target.value = \"\";\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex min-h-screen bg-[#123458] text-[#123458]\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_sidebar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                lineNumber: 68,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"flex-1 p-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                        className: \"flex justify-between items-center mb-8\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"text-3xl font-bold text-[#FFFFFF]\",\n                            children: \"Import Data\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                            lineNumber: 73,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                        lineNumber: 72,\n                        columnNumber: 9\n                    }, this),\n                    uploadStatus && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-6 p-4 rounded-lg \".concat(uploadStatus.startsWith(\"Success\") ? \"bg-green-100 text-green-800\" : uploadStatus.startsWith(\"Error\") ? \"bg-red-100 text-red-800\" : \"bg-blue-100 text-blue-800\"),\n                        children: uploadStatus\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                        lineNumber: 77,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-white p-6 rounded-lg shadow-md flex flex-col justify-between\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex items-center mb-4\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"bg-[#E6F4FA] p-2 rounded-full\",\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                            className: \"w-6 h-6 text-[#008000]\",\n                                                            fill: \"currentColor\",\n                                                            viewBox: \"0 0 20 20\",\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                                lineNumber: 98,\n                                                                columnNumber: 21\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                            lineNumber: 97,\n                                                            columnNumber: 19\n                                                        }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 96,\n                                                        columnNumber: 17\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                                        className: \"ml-3 text-xl font-semibold text-gray-900\",\n                                                        children: \"CSV Import\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 101,\n                                                        columnNumber: 17\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                lineNumber: 95,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-gray-600 mb-6\",\n                                                children: \"Upload your analytics data using CSV format.\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                lineNumber: 103,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 94,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: \"w-full bg-[#3396D3] hover:bg-[#2A75A4] text-white font-semibold py-2 px-4 rounded-lg transition duration-200 text-center cursor-pointer\",\n                                        children: [\n                                            isUploading ? \"Processing...\" : \"Choose CSV File\",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"file\",\n                                                accept: \".csv\",\n                                                onChange: handleFileUpload,\n                                                disabled: isUploading,\n                                                className: \"hidden\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                lineNumber: 107,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 105,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                lineNumber: 93,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-white p-6 rounded-lg shadow-md flex flex-col justify-between\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"flex items-center mb-4\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        className: \"bg-[#E6F4FA] p-2 rounded-full\",\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                            className: \"w-6 h-6 text-[#008000]\",\n                                                            fill: \"currentColor\",\n                                                            viewBox: \"0 0 20 20\",\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                                lineNumber: 117,\n                                                                columnNumber: 21\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                            lineNumber: 116,\n                                                            columnNumber: 19\n                                                        }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 115,\n                                                        columnNumber: 17\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                                        className: \"ml-3 text-xl font-semibold text-gray-900\",\n                                                        children: \"Excel Import\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 120,\n                                                        columnNumber: 17\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                lineNumber: 114,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                className: \"text-gray-600 mb-6\",\n                                                children: \"Upload your data using Excel spreadsheets (.xlsx).\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                lineNumber: 122,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 113,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                        className: \"w-full bg-[#3396D3] hover:bg-[#2A75A4] text-white font-semibold py-2 px-4 rounded-lg transition duration-200 text-center cursor-pointer\",\n                                        children: [\n                                            isUploading ? \"Processing...\" : \"Choose Excel File\",\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"file\",\n                                                accept: \".xlsx\",\n                                                onChange: handleFileUpload,\n                                                disabled: isUploading,\n                                                className: \"hidden\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                lineNumber: 126,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 124,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                lineNumber: 112,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                        lineNumber: 91,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        className: \"bg-white p-6 rounded-lg shadow-md mb-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-xl font-semibold mb-4\",\n                                children: \"Recent Imports\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                lineNumber: 133,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"overflow-x-auto\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                                    className: \"w-full text-left\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                                className: \"border-b border-gray-200\",\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"pb-3 text-gray-600 font-medium\",\n                                                        children: \"File Name\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 138,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"pb-3 text-gray-600 font-medium\",\n                                                        children: \"Type\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 139,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"pb-3 text-gray-600 font-medium\",\n                                                        children: \"Date\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 140,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"pb-3 text-gray-600 font-medium\",\n                                                        children: \"Status\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 141,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"pb-3 text-gray-600 font-medium\",\n                                                        children: \"Records\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 142,\n                                                        columnNumber: 19\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"pb-3 text-gray-600 font-medium\",\n                                                        children: \"Data Type\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                        lineNumber: 143,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                lineNumber: 137,\n                                                columnNumber: 17\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                            lineNumber: 136,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                            children: recentImports.map((record, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                                    className: \"border-b border-gray-100\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"py-3 text-gray-900\",\n                                                            children: record.fileName\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                            lineNumber: 149,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"py-3 text-gray-600\",\n                                                            children: record.type\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                            lineNumber: 150,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"py-3 text-gray-600\",\n                                                            children: record.date\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                            lineNumber: 151,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"py-3\",\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                                className: \"px-2 py-1 rounded-full text-sm \".concat(record.status === \"Success\" ? \"bg-green-100 text-green-800\" : record.status === \"Processing\" ? \"bg-yellow-100 text-yellow-800\" : \"bg-red-100 text-red-800\"),\n                                                                children: record.status\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                                lineNumber: 153,\n                                                                columnNumber: 23\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                            lineNumber: 152,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"py-3 text-gray-600\",\n                                                            children: record.records.toLocaleString()\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                            lineNumber: 165,\n                                                            columnNumber: 21\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"py-3 text-gray-600\",\n                                                            children: record.dataType || \"-\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                            lineNumber: 166,\n                                                            columnNumber: 21\n                                                        }, this)\n                                                    ]\n                                                }, index, true, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                                    lineNumber: 148,\n                                                    columnNumber: 19\n                                                }, this))\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                            lineNumber: 146,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                    lineNumber: 135,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                lineNumber: 134,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                        lineNumber: 132,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n                        className: \"bg-white p-6 rounded-lg shadow-md mb-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-xl font-semibold mb-4\",\n                                children: \"Import Guidelines\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                lineNumber: 176,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-3 text-gray-600\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"• Ensure your data files are properly formatted with headers\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 178,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"• Maximum file size: 50MB per upload\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 179,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"• Supported formats: CSV and XLSX files\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 180,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"• System automatically detects META (Facebook) or YOUTUBE data\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 181,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"• META data requires: post_id, page_name, publish_time columns\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 182,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"• YOUTUBE data requires: Video title, Video ID, Video publish time columns\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 183,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        children: \"• Data will be processed and loaded into the database immediately\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                        lineNumber: 184,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                                lineNumber: 177,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                        lineNumber: 175,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n                lineNumber: 71,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\app\\\\import\\\\page.tsx\",\n        lineNumber: 67,\n        columnNumber: 5\n    }, this);\n}\n_s(ImportDashboard, \"AyvHTlQJBCSWxoy/047pJ4eVZSc=\");\n_c = ImportDashboard;\nvar _c;\n$RefreshReg$(_c, \"ImportDashboard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/import/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/auth-provider.tsx":
/*!**************************************!*\
  !*** ./components/auth-provider.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _stackframe_stack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js\");\n/* __next_internal_client_entry_do_not_use__ AuthProvider,useAuth auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const user = (0,_stackframe_stack__WEBPACK_IMPORTED_MODULE_2__.useUser)();\n    const signOut = async ()=>{\n        // Stack Auth handles sign out through its own methods\n        if (user) {\n            await user.signOut();\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user: user || null,\n            isLoading: false,\n            signOut\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\auth-provider.tsx\",\n        lineNumber: 25,\n        columnNumber: 5\n    }, this);\n}\n_s(AuthProvider, \"MVCm96lIxHTLiwQrKqirz54tL7M=\", false, function() {\n    return [\n        _stackframe_stack__WEBPACK_IMPORTED_MODULE_2__.useUser\n    ];\n});\n_c = AuthProvider;\nfunction useAuth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n}\n_s1(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvYXV0aC1wcm92aWRlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFaUU7QUFDTjtBQVEzRCxNQUFNSSw0QkFBY0osb0RBQWFBLENBQThCSztBQUV4RCxTQUFTQyxhQUFhLEtBQXFDO1FBQXJDLEVBQUVDLFFBQVEsRUFBMkIsR0FBckM7O0lBQzNCLE1BQU1DLE9BQU9MLDBEQUFZQTtJQUV6QixNQUFNTSxVQUFVO1FBQ2Qsc0RBQXNEO1FBQ3RELElBQUlELE1BQU07WUFDUixNQUFNQSxLQUFLQyxPQUFPO1FBQ3BCO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ0wsWUFBWU0sUUFBUTtRQUNuQkMsT0FBTztZQUNMSCxNQUFNQSxRQUFRO1lBQ2RJLFdBQVc7WUFDWEg7UUFDRjtrQkFFQ0Y7Ozs7OztBQUdQO0dBckJnQkQ7O1FBQ0RILHNEQUFZQTs7O0tBRFhHO0FBdUJULFNBQVNPOztJQUNkLE1BQU1DLFVBQVViLGlEQUFVQSxDQUFDRztJQUMzQixJQUFJVSxZQUFZVCxXQUFXO1FBQ3pCLE1BQU0sSUFBSVUsTUFBTTtJQUNsQjtJQUNBLE9BQU9EO0FBQ1Q7SUFOZ0JEIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXGNvbXBvbmVudHNcXGF1dGgtcHJvdmlkZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXHJcblxyXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB0eXBlIFJlYWN0Tm9kZSB9IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCB7IHVzZVVzZXIgYXMgdXNlU3RhY2tVc2VyIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrXCJcclxuXHJcbmludGVyZmFjZSBBdXRoQ29udGV4dFR5cGUge1xyXG4gIHVzZXI6IGFueSB8IG51bGxcclxuICBpc0xvYWRpbmc6IGJvb2xlYW5cclxuICBzaWduT3V0OiAoKSA9PiBQcm9taXNlPHZvaWQ+XHJcbn1cclxuXHJcbmNvbnN0IEF1dGhDb250ZXh0ID0gY3JlYXRlQ29udGV4dDxBdXRoQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZClcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBBdXRoUHJvdmlkZXIoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdE5vZGUgfSkge1xyXG4gIGNvbnN0IHVzZXIgPSB1c2VTdGFja1VzZXIoKVxyXG5cclxuICBjb25zdCBzaWduT3V0ID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgLy8gU3RhY2sgQXV0aCBoYW5kbGVzIHNpZ24gb3V0IHRocm91Z2ggaXRzIG93biBtZXRob2RzXHJcbiAgICBpZiAodXNlcikge1xyXG4gICAgICBhd2FpdCB1c2VyLnNpZ25PdXQoKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxBdXRoQ29udGV4dC5Qcm92aWRlclxyXG4gICAgICB2YWx1ZT17e1xyXG4gICAgICAgIHVzZXI6IHVzZXIgfHwgbnVsbCxcclxuICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLFxyXG4gICAgICAgIHNpZ25PdXQsXHJcbiAgICAgIH19XHJcbiAgICA+XHJcbiAgICAgIHtjaGlsZHJlbn1cclxuICAgIDwvQXV0aENvbnRleHQuUHJvdmlkZXI+XHJcbiAgKVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXNlQXV0aCgpIHtcclxuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChBdXRoQ29udGV4dClcclxuICBpZiAoY29udGV4dCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1c2VBdXRoIG11c3QgYmUgdXNlZCB3aXRoaW4gYW4gQXV0aFByb3ZpZGVyXCIpXHJcbiAgfVxyXG4gIHJldHVybiBjb250ZXh0XHJcbn1cclxuIl0sIm5hbWVzIjpbImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlVXNlciIsInVzZVN0YWNrVXNlciIsIkF1dGhDb250ZXh0IiwidW5kZWZpbmVkIiwiQXV0aFByb3ZpZGVyIiwiY2hpbGRyZW4iLCJ1c2VyIiwic2lnbk91dCIsIlByb3ZpZGVyIiwidmFsdWUiLCJpc0xvYWRpbmciLCJ1c2VBdXRoIiwiY29udGV4dCIsIkVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/auth-provider.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/sidebar.tsx":
/*!********************************!*\
  !*** ./components/sidebar.tsx ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Sidebar)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _components_auth_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/auth-provider */ \"(app-pages-browser)/./components/auth-provider.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nfunction Sidebar() {\n    _s();\n    const [isCollapsed, setIsCollapsed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isDashboardOpen, setIsDashboardOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.usePathname)();\n    const { user, logout } = (0,_components_auth_provider__WEBPACK_IMPORTED_MODULE_4__.useAuth)();\n    // Load sidebar state from localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Sidebar.useEffect\": ()=>{\n            const storedState = localStorage.getItem(\"sidebarCollapsedState\");\n            if (storedState === \"true\") {\n                setIsCollapsed(true);\n                setIsDashboardOpen(false);\n            }\n        }\n    }[\"Sidebar.useEffect\"], []);\n    // Save sidebar state to localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Sidebar.useEffect\": ()=>{\n            localStorage.setItem(\"sidebarCollapsedState\", isCollapsed.toString());\n            if (isCollapsed) {\n                setIsDashboardOpen(false);\n            }\n        }\n    }[\"Sidebar.useEffect\"], [\n        isCollapsed\n    ]);\n    const toggleSidebar = ()=>{\n        setIsCollapsed(!isCollapsed);\n    };\n    const toggleDashboard = (e)=>{\n        if (e.target.closest(\"#dashboard-arrow\")) {\n            e.preventDefault();\n            if (!isCollapsed) {\n                setIsDashboardOpen(!isDashboardOpen);\n            }\n        }\n    };\n    const isActiveLink = (href)=>{\n        if (href === \"/\" && pathname === \"/\") return true;\n        if (href !== \"/\" && pathname.includes(href.replace(\".html\", \"\"))) return true;\n        return false;\n    };\n    const dashboardPages = [\n        {\n            href: \"/youtube\",\n            label: \"YouTube\"\n        },\n        {\n            href: \"/facebook\",\n            label: \"Meta Facebook\"\n        },\n        {\n            href: \"/spotify\",\n            label: \"Spotify\"\n        },\n        {\n            href: \"/instagram\",\n            label: \"Instagram\"\n        },\n        {\n            href: \"/tiktok\",\n            label: \"TikTok\"\n        }\n    ];\n    const isDashboardActive = pathname === \"/\" || dashboardPages.some((page)=>pathname.includes(page.href));\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"aside\", {\n        className: \"sidebar bg-[#0f2946] shadow-lg px-6 pt-6 flex flex-col rounded-r-lg transition-all duration-300 ease-in-out h-screen justify-between \".concat(isCollapsed ? \"w-20\" : \"w-64\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-8 flex items-center justify-between logo-container\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: toggleSidebar,\n                                className: \"text-white focus:outline-none p-2 rounded-lg hover:bg-gray-700\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    className: \"w-6 h-6\",\n                                    fill: \"currentColor\",\n                                    viewBox: \"0 0 20 20\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        fillRule: \"evenodd\",\n                                        d: \"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\",\n                                        clipRule: \"evenodd\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                        lineNumber: 78,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                    lineNumber: 77,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                lineNumber: 73,\n                                columnNumber: 11\n                            }, this),\n                            !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                src: \"/SUGARCANE-LOGO.png\",\n                                alt: \"Sugarcane Logo\",\n                                className: \"h-8 w-auto rounded logo-text\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                lineNumber: 88,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                        lineNumber: 71,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                        className: \"flex-1\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"mb-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                            href: \"/\",\n                                            onClick: toggleDashboard,\n                                            className: \"flex items-center justify-between p-2 rounded-lg font-semibold shadow-sm cursor-pointer nav-item transition-colors duration-200 \".concat(isDashboardActive ? \"bg-[#123458] text-white\" : \"text-white hover:bg-gray-700\"),\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex items-center\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                            className: \"w-5 h-5 \".concat(!isCollapsed ? \"mr-3\" : \"mx-auto\"),\n                                                            fill: \"currentColor\",\n                                                            viewBox: \"0 0 24 24\",\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                                d: \"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                                lineNumber: 116,\n                                                                columnNumber: 21\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                            lineNumber: 111,\n                                                            columnNumber: 19\n                                                        }, this),\n                                                        !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"nav-text\",\n                                                            children: \"Dashboard\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                            lineNumber: 118,\n                                                            columnNumber: 36\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 110,\n                                                    columnNumber: 17\n                                                }, this),\n                                                !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    id: \"dashboard-arrow\",\n                                                    className: \"w-4 h-4 ml-2 transition-transform duration-200 \".concat(isDashboardOpen ? \"rotate-90\" : \"\"),\n                                                    fill: \"none\",\n                                                    stroke: \"currentColor\",\n                                                    strokeWidth: \"2\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        strokeLinecap: \"round\",\n                                                        strokeLinejoin: \"round\",\n                                                        d: \"M9 5l7 7-7 7\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                        lineNumber: 133,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 123,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                            lineNumber: 101,\n                                            columnNumber: 15\n                                        }, this),\n                                        !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                            className: \"submenu pl-8 pt-2 transition-all duration-200 \".concat(isDashboardOpen ? \"active\" : \"hidden\"),\n                                            children: dashboardPages.map((page)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    className: \"mb-2\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                        href: page.href,\n                                                        className: \"flex items-center p-2 rounded-lg transition-colors duration-200 nav-item \".concat(isActiveLink(page.href) ? \"bg-gray-600 text-white font-semibold\" : \"text-gray-300 hover:bg-gray-700 hover:text-white\"),\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"nav-text\",\n                                                            children: page.label\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                            lineNumber: 154,\n                                                            columnNumber: 25\n                                                        }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                        lineNumber: 146,\n                                                        columnNumber: 23\n                                                    }, this)\n                                                }, page.href, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 145,\n                                                    columnNumber: 21\n                                                }, this))\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                            lineNumber: 139,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                    lineNumber: 100,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"mb-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        href: \"/predictive-analytics\",\n                                        className: \"flex items-center p-2 rounded-lg transition-colors duration-200 nav-item \".concat(isActiveLink(\"/predictive-analytics\") ? \"bg-[#123458] text-white font-semibold\" : \"text-white hover:bg-gray-700\"),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    className: \"w-5 h-5 \".concat(!isCollapsed ? \"mr-3\" : \"mx-auto\"),\n                                                    fill: \"currentColor\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                        lineNumber: 178,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 173,\n                                                    columnNumber: 17\n                                                }, this),\n                                                !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"nav-text\",\n                                                    children: \"Predictive Analytics\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 180,\n                                                    columnNumber: 34\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                            lineNumber: 172,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                        lineNumber: 164,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                    lineNumber: 163,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"mb-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        href: \"/notifications\",\n                                        className: \"flex items-center p-2 rounded-lg transition-colors duration-200 nav-item \".concat(isActiveLink(\"/notifications\") ? \"bg-[#123458] text-white font-semibold\" : \"text-white hover:bg-gray-700\"),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    className: \"w-5 h-5 \".concat(!isCollapsed ? \"mr-3\" : \"mx-auto\"),\n                                                    fill: \"currentColor\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        d: \"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                        lineNumber: 200,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 195,\n                                                    columnNumber: 17\n                                                }, this),\n                                                !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"nav-text\",\n                                                    children: \"Notifications\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 202,\n                                                    columnNumber: 34\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                            lineNumber: 194,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                        lineNumber: 186,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                    lineNumber: 185,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"mb-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        href: \"/faq\",\n                                        className: \"flex items-center p-2 rounded-lg transition-colors duration-200 nav-item \".concat(isActiveLink(\"/faq\") ? \"bg-[#123458] text-white font-semibold\" : \"text-white hover:bg-gray-700\"),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    className: \"w-5 h-5 \".concat(!isCollapsed ? \"mr-3\" : \"mx-auto\"),\n                                                    fill: \"currentColor\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        fillRule: \"evenodd\",\n                                                        d: \"M12 2C6.477 2 2 6.477 2 12c0 1.93.53 3.727 1.447 5.243L3 22l4.928-1.387A9.953 9.953 0 0 0 12 22c5.523 0 10-4.477 10-10S17.523 2 12 2z\",\n                                                        clipRule: \"evenodd\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                        lineNumber: 222,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 217,\n                                                    columnNumber: 17\n                                                }, this),\n                                                !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"nav-text\",\n                                                    children: \"FAQ\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 228,\n                                                    columnNumber: 34\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                            lineNumber: 216,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                        lineNumber: 208,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                    lineNumber: 207,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"mb-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        href: \"/cross-platform\",\n                                        className: \"flex items-center p-2 rounded-lg transition-colors duration-200 nav-item \".concat(isActiveLink(\"/cross-platform\") ? \"bg-[#123458] text-white font-semibold\" : \"text-white hover:bg-gray-700\"),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    className: \"w-5 h-5 \".concat(!isCollapsed ? \"mr-3\" : \"mx-auto\"),\n                                                    fill: \"currentColor\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                            d: \"M9 2a1 1 0 000 2h2a1 1 0 100-2H9z\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                            lineNumber: 248,\n                                                            columnNumber: 19\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                            fillRule: \"evenodd\",\n                                                            d: \"M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 0a1 1 0 00-1 1v5a1 1 0 102 0V6a1 1 0 00-1-1zm3 0a1 1 0 00-1 1v5a1 1 0 102 0V6a1 1 0 00-1-1zm3 0a1 1 0 00-1 1v5a1 1 0 102 0V6a1 1 0 00-1-1z\",\n                                                            clipRule: \"evenodd\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                            lineNumber: 249,\n                                                            columnNumber: 19\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 243,\n                                                    columnNumber: 17\n                                                }, this),\n                                                !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"nav-text\",\n                                                    children: \"Cross-Platform\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 255,\n                                                    columnNumber: 34\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                            lineNumber: 242,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                        lineNumber: 234,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                    lineNumber: 233,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                    className: \"mb-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                        href: \"/import\",\n                                        className: \"flex items-center p-2 rounded-lg transition-colors duration-200 nav-item \".concat(isActiveLink(\"/import\") ? \"bg-[#123458] text-white font-semibold\" : \"text-white hover:bg-gray-700\"),\n                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                                    className: \"w-5 h-5 \".concat(!isCollapsed ? \"mr-3\" : \"mx-auto\"),\n                                                    fill: \"currentColor\",\n                                                    viewBox: \"0 0 24 24\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                                        d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                        lineNumber: 275,\n                                                        columnNumber: 19\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 270,\n                                                    columnNumber: 17\n                                                }, this),\n                                                !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    className: \"nav-text\",\n                                                    children: \"Import\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                                    lineNumber: 277,\n                                                    columnNumber: 34\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                            lineNumber: 269,\n                                            columnNumber: 17\n                                        }, this)\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                        lineNumber: 261,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                    lineNumber: 260,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                            lineNumber: 98,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                        lineNumber: 97,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                lineNumber: 70,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: logout,\n                    className: \"flex items-center w-full p-2 rounded-lg text-white hover:bg-gray-700 transition-colors duration-200\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            className: \"w-5 h-5\",\n                            fill: \"currentColor\",\n                            viewBox: \"0 0 24 24\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                fillRule: \"evenodd\",\n                                d: \"M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z\",\n                                clipRule: \"evenodd\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                                lineNumber: 296,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                            lineNumber: 291,\n                            columnNumber: 11\n                        }, this),\n                        !isCollapsed && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"ml-2\",\n                            children: \"Log out\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                            lineNumber: 302,\n                            columnNumber: 28\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                    lineNumber: 287,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n                lineNumber: 286,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Luis\\\\Desktop\\\\COLLEGE\\\\CAPSTONE\\\\Sugarcane_Artist_Management\\\\components\\\\sidebar.tsx\",\n        lineNumber: 64,\n        columnNumber: 5\n    }, this);\n}\n_s(Sidebar, \"L4t3oW2TbrCYYT66Akv9GQfOSbw=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_3__.usePathname,\n        _components_auth_provider__WEBPACK_IMPORTED_MODULE_4__.useAuth\n    ];\n});\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/sidebar.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@simplewebauthn/browser/dist/bundle/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/browser/dist/bundle/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebAuthnAbortService: () => (/* binding */ WebAuthnAbortService),\n/* harmony export */   WebAuthnError: () => (/* binding */ WebAuthnError),\n/* harmony export */   base64URLStringToBuffer: () => (/* binding */ base64URLStringToBuffer),\n/* harmony export */   browserSupportsWebAuthn: () => (/* binding */ browserSupportsWebAuthn),\n/* harmony export */   browserSupportsWebAuthnAutofill: () => (/* binding */ browserSupportsWebAuthnAutofill),\n/* harmony export */   bufferToBase64URLString: () => (/* binding */ bufferToBase64URLString),\n/* harmony export */   platformAuthenticatorIsAvailable: () => (/* binding */ platformAuthenticatorIsAvailable),\n/* harmony export */   startAuthentication: () => (/* binding */ startAuthentication),\n/* harmony export */   startRegistration: () => (/* binding */ startRegistration)\n/* harmony export */ });\n/* [@simplewebauthn/browser@11.0.0] */\nfunction bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction base64URLStringToBuffer(base64URLString) {\n    const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n    const padLength = (4 - (base64.length % 4)) % 4;\n    const padded = base64.padEnd(base64.length + padLength, '=');\n    const binary = atob(padded);\n    const buffer = new ArrayBuffer(binary.length);\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n}\n\nfunction browserSupportsWebAuthn() {\n    return (window?.PublicKeyCredential !== undefined &&\n        typeof window.PublicKeyCredential === 'function');\n}\n\nfunction toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        transports: descriptor.transports,\n    };\n}\n\nfunction isValidDomain(hostname) {\n    return (hostname === 'localhost' ||\n        /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname));\n}\n\nclass WebAuthnError extends Error {\n    constructor({ message, code, cause, name, }) {\n        super(message, { cause });\n        this.name = name ?? cause.name;\n        this.code = code;\n    }\n}\n\nfunction identifyRegistrationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Registration ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'ConstraintError') {\n        if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n            return new WebAuthnError({\n                message: 'Discoverable credentials were required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n                cause: error,\n            });\n        }\n        else if (options.mediation === 'conditional' &&\n            publicKey.authenticatorSelection?.userVerification === 'required') {\n            return new WebAuthnError({\n                message: 'User verification was required during automatic registration but it could not be performed',\n                code: 'ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE',\n                cause: error,\n            });\n        }\n        else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n            return new WebAuthnError({\n                message: 'User verification was required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'InvalidStateError') {\n        return new WebAuthnError({\n            message: 'The authenticator was previously registered',\n            code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotSupportedError') {\n        const validPubKeyCredParams = publicKey.pubKeyCredParams.filter((param) => param.type === 'public-key');\n        if (validPubKeyCredParams.length === 0) {\n            return new WebAuthnError({\n                message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n                code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n                cause: error,\n            });\n        }\n        return new WebAuthnError({\n            message: 'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n            code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rp.id !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'TypeError') {\n        if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n            return new WebAuthnError({\n                message: 'User ID was not between 1 and 64 characters',\n                code: 'ERROR_INVALID_USER_ID_LENGTH',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new credential',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nclass BaseWebAuthnAbortService {\n    createNewAbortSignal() {\n        if (this.controller) {\n            const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n        }\n        const newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n    }\n    cancelCeremony() {\n        if (this.controller) {\n            const abortError = new Error('Manually cancelling existing WebAuthn API call');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n            this.controller = undefined;\n        }\n    }\n}\nconst WebAuthnAbortService = new BaseWebAuthnAbortService();\n\nconst attachments = ['cross-platform', 'platform'];\nfunction toAuthenticatorAttachment(attachment) {\n    if (!attachment) {\n        return;\n    }\n    if (attachments.indexOf(attachment) < 0) {\n        return;\n    }\n    return attachment;\n}\n\nasync function startRegistration(options) {\n    const { optionsJSON, useAutoRegister = false } = options;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        user: {\n            ...optionsJSON.user,\n            id: base64URLStringToBuffer(optionsJSON.user.id),\n        },\n        excludeCredentials: optionsJSON.excludeCredentials?.map(toPublicKeyCredentialDescriptor),\n    };\n    const createOptions = {};\n    if (useAutoRegister) {\n        createOptions.mediation = 'conditional';\n    }\n    createOptions.publicKey = publicKey;\n    createOptions.signal = WebAuthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.create(createOptions));\n    }\n    catch (err) {\n        throw identifyRegistrationError({ error: err, options: createOptions });\n    }\n    if (!credential) {\n        throw new Error('Registration was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let transports = undefined;\n    if (typeof response.getTransports === 'function') {\n        transports = response.getTransports();\n    }\n    let responsePublicKeyAlgorithm = undefined;\n    if (typeof response.getPublicKeyAlgorithm === 'function') {\n        try {\n            responsePublicKeyAlgorithm = response.getPublicKeyAlgorithm();\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKeyAlgorithm()', error);\n        }\n    }\n    let responsePublicKey = undefined;\n    if (typeof response.getPublicKey === 'function') {\n        try {\n            const _publicKey = response.getPublicKey();\n            if (_publicKey !== null) {\n                responsePublicKey = bufferToBase64URLString(_publicKey);\n            }\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKey()', error);\n        }\n    }\n    let responseAuthenticatorData;\n    if (typeof response.getAuthenticatorData === 'function') {\n        try {\n            responseAuthenticatorData = bufferToBase64URLString(response.getAuthenticatorData());\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getAuthenticatorData()', error);\n        }\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            attestationObject: bufferToBase64URLString(response.attestationObject),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            transports,\n            publicKeyAlgorithm: responsePublicKeyAlgorithm,\n            publicKey: responsePublicKey,\n            authenticatorData: responseAuthenticatorData,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\nfunction warnOnBrokenImplementation(methodName, cause) {\n    console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${methodName}. You should report this error to them.\\n`, cause);\n}\n\nfunction browserSupportsWebAuthnAutofill() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    const globalPublicKeyCredential = window\n        .PublicKeyCredential;\n    if (globalPublicKeyCredential.isConditionalMediationAvailable === undefined) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return globalPublicKeyCredential.isConditionalMediationAvailable();\n}\n\nfunction identifyAuthenticationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Authentication ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rpId !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nasync function startAuthentication(options) {\n    const { optionsJSON, useBrowserAutofill = false, verifyBrowserAutofillInput = true, } = options;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    let allowCredentials;\n    if (optionsJSON.allowCredentials?.length !== 0) {\n        allowCredentials = optionsJSON.allowCredentials?.map(toPublicKeyCredentialDescriptor);\n    }\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        allowCredentials,\n    };\n    const getOptions = {};\n    if (useBrowserAutofill) {\n        if (!(await browserSupportsWebAuthnAutofill())) {\n            throw Error('Browser does not support WebAuthn autofill');\n        }\n        const eligibleInputs = document.querySelectorAll(\"input[autocomplete$='webauthn']\");\n        if (eligibleInputs.length < 1 && verifyBrowserAutofillInput) {\n            throw Error('No <input> with \"webauthn\" as the only or last value in its `autocomplete` attribute was detected');\n        }\n        getOptions.mediation = 'conditional';\n        publicKey.allowCredentials = [];\n    }\n    getOptions.publicKey = publicKey;\n    getOptions.signal = WebAuthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.get(getOptions));\n    }\n    catch (err) {\n        throw identifyAuthenticationError({ error: err, options: getOptions });\n    }\n    if (!credential) {\n        throw new Error('Authentication was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let userHandle = undefined;\n    if (response.userHandle) {\n        userHandle = bufferToBase64URLString(response.userHandle);\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            authenticatorData: bufferToBase64URLString(response.authenticatorData),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            signature: bufferToBase64URLString(response.signature),\n            userHandle,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nfunction platformAuthenticatorIsAvailable() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@simplewebauthn/browser/dist/bundle/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.default.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stackframe/stack-sc/dist/index.default.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   headers: () => (/* binding */ headers),\n/* harmony export */   isReactServer: () => (/* binding */ isReactServer)\n/* harmony export */ });\nconst cookies = undefined;\nconst headers = undefined;\nconst isReactServer = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zYy9kaXN0L2luZGV4LmRlZmF1bHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU87QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNjXFxkaXN0XFxpbmRleC5kZWZhdWx0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBjb29raWVzID0gdW5kZWZpbmVkO1xuZXhwb3J0IGNvbnN0IGhlYWRlcnMgPSB1bmRlZmluZWQ7XG5leHBvcnQgY29uc3QgaXNSZWFjdFNlcnZlciA9IGZhbHNlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.default.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-sc/dist/index.react-server.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   headers: () => (/* binding */ headers),\n/* harmony export */   isReactServer: () => (/* binding */ isReactServer)\n/* harmony export */ });\n/* harmony import */ var _next_static_analysis_workaround__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./next-static-analysis-workaround */ \"(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/next-static-analysis-workaround.js\");\nconst isReactServer = true;\n// In Next.js 15, the `next/headers` module returns async functions.\n// Since we support both Next.js 14 and 15, we return a union of the two.\n// TODO: Remove this once we drop support for Next.js 14, and replace it with `export { cookies, headers } from 'next/headers';`\n// https://nextjs.org/blog/next-15#async-request-apis-breaking-change\n\nconst cookies = _next_static_analysis_workaround__WEBPACK_IMPORTED_MODULE_0__.cookies;\nconst headers = _next_static_analysis_workaround__WEBPACK_IMPORTED_MODULE_0__.headers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zYy9kaXN0L2luZGV4LnJlYWN0LXNlcnZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0Esd0ZBQXdGLG1CQUFtQixvQkFBb0I7QUFDL0g7QUFDbUc7QUFDNUYsZ0JBQWdCLHFFQUFXO0FBQzNCLGdCQUFnQixxRUFBVyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zY1xcZGlzdFxcaW5kZXgucmVhY3Qtc2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc1JlYWN0U2VydmVyID0gdHJ1ZTtcbi8vIEluIE5leHQuanMgMTUsIHRoZSBgbmV4dC9oZWFkZXJzYCBtb2R1bGUgcmV0dXJucyBhc3luYyBmdW5jdGlvbnMuXG4vLyBTaW5jZSB3ZSBzdXBwb3J0IGJvdGggTmV4dC5qcyAxNCBhbmQgMTUsIHdlIHJldHVybiBhIHVuaW9uIG9mIHRoZSB0d28uXG4vLyBUT0RPOiBSZW1vdmUgdGhpcyBvbmNlIHdlIGRyb3Agc3VwcG9ydCBmb3IgTmV4dC5qcyAxNCwgYW5kIHJlcGxhY2UgaXQgd2l0aCBgZXhwb3J0IHsgY29va2llcywgaGVhZGVycyB9IGZyb20gJ25leHQvaGVhZGVycyc7YFxuLy8gaHR0cHM6Ly9uZXh0anMub3JnL2Jsb2cvbmV4dC0xNSNhc3luYy1yZXF1ZXN0LWFwaXMtYnJlYWtpbmctY2hhbmdlXG5pbXBvcnQgeyBjb29raWVzIGFzIG5leHRDb29raWVzLCBoZWFkZXJzIGFzIG5leHRIZWFkZXJzIH0gZnJvbSAnLi9uZXh0LXN0YXRpYy1hbmFseXNpcy13b3JrYXJvdW5kJztcbmV4cG9ydCBjb25zdCBjb29raWVzID0gbmV4dENvb2tpZXM7XG5leHBvcnQgY29uc3QgaGVhZGVycyA9IG5leHRIZWFkZXJzO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/next-static-analysis-workaround.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-sc/dist/next-static-analysis-workaround.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __esModule: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.__esModule),\n/* harmony export */   cookies: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies),\n/* harmony export */   draftMode: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.draftMode),\n/* harmony export */   headers: () => (/* reexport safe */ next_headers__WEBPACK_IMPORTED_MODULE_0__.headers)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(app-pages-browser)/./node_modules/next/dist/api/headers.js\");\n// Next statically analyzes the imports and ensures that the `next/headers` module is never imported on a client bundle.\n//\n// We know what we're doing though. We ensure at runtime that we never use the module unless we're on the server, so the\n// static analysis is wrong.\n//\n// Fortunately, as a hack, we can get around it by importing them using the `export from` syntax, which the static\n// analyzer does not detect, but Webpack is fine with it.\n//\n// So, we can use the export syntax here, and then import them normally in the main file.\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zYy9kaXN0L25leHQtc3RhdGljLWFuYWx5c2lzLXdvcmthcm91bmQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNkIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2NcXGRpc3RcXG5leHQtc3RhdGljLWFuYWx5c2lzLXdvcmthcm91bmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTmV4dCBzdGF0aWNhbGx5IGFuYWx5emVzIHRoZSBpbXBvcnRzIGFuZCBlbnN1cmVzIHRoYXQgdGhlIGBuZXh0L2hlYWRlcnNgIG1vZHVsZSBpcyBuZXZlciBpbXBvcnRlZCBvbiBhIGNsaWVudCBidW5kbGUuXG4vL1xuLy8gV2Uga25vdyB3aGF0IHdlJ3JlIGRvaW5nIHRob3VnaC4gV2UgZW5zdXJlIGF0IHJ1bnRpbWUgdGhhdCB3ZSBuZXZlciB1c2UgdGhlIG1vZHVsZSB1bmxlc3Mgd2UncmUgb24gdGhlIHNlcnZlciwgc28gdGhlXG4vLyBzdGF0aWMgYW5hbHlzaXMgaXMgd3JvbmcuXG4vL1xuLy8gRm9ydHVuYXRlbHksIGFzIGEgaGFjaywgd2UgY2FuIGdldCBhcm91bmQgaXQgYnkgaW1wb3J0aW5nIHRoZW0gdXNpbmcgdGhlIGBleHBvcnQgZnJvbWAgc3ludGF4LCB3aGljaCB0aGUgc3RhdGljXG4vLyBhbmFseXplciBkb2VzIG5vdCBkZXRlY3QsIGJ1dCBXZWJwYWNrIGlzIGZpbmUgd2l0aCBpdC5cbi8vXG4vLyBTbywgd2UgY2FuIHVzZSB0aGUgZXhwb3J0IHN5bnRheCBoZXJlLCBhbmQgdGhlbiBpbXBvcnQgdGhlbSBub3JtYWxseSBpbiB0aGUgbWFpbiBmaWxlLlxuZXhwb3J0ICogZnJvbSAnbmV4dC9oZWFkZXJzJztcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/next-static-analysis-workaround.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/helpers/production-mode.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/helpers/production-mode.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getProductionModeErrors: () => (/* binding */ getProductionModeErrors)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _utils_urls_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/urls.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js\");\n// src/helpers/production-mode.ts\n\n\nfunction getProductionModeErrors(project) {\n  const errors = [];\n  const domainsFixUrl = `/projects/${project.id}/domains`;\n  if (project.config.allow_localhost) {\n    errors.push({\n      message: \"Localhost is not allowed in production mode, turn off 'Allow localhost' in project settings\",\n      relativeFixUrl: domainsFixUrl\n    });\n  }\n  for (const { domain } of project.config.domains) {\n    let url;\n    try {\n      const normalizedDomain = domain.replace(/\\*+/g, \"wildcard-placeholder\");\n      url = new URL(normalizedDomain);\n    } catch (e) {\n      (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.captureError)(\"production-mode-domain-not-valid\", new _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Domain was somehow not a valid URL; we should've caught this when setting the domain in the first place\", {\n        domain,\n        projectId: project\n      }));\n      errors.push({\n        message: \"Trusted domain is not a valid URL: \" + domain,\n        relativeFixUrl: domainsFixUrl\n      });\n      continue;\n    }\n    if ((0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_1__.isLocalhost)(url)) {\n      errors.push({\n        message: \"Localhost domains are not allowed to be trusted in production mode: \" + domain,\n        relativeFixUrl: domainsFixUrl\n      });\n    } else if (url.hostname.match(/^\\d+(\\.\\d+)*$/)) {\n      errors.push({\n        message: \"Direct IPs are not valid for trusted domains in production mode: \" + domain,\n        relativeFixUrl: domainsFixUrl\n      });\n    } else if (url.protocol !== \"https:\") {\n      errors.push({\n        message: \"Trusted domains should be HTTPS: \" + domain,\n        relativeFixUrl: domainsFixUrl\n      });\n    }\n  }\n  return errors;\n}\n\n//# sourceMappingURL=production-mode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vaGVscGVycy9wcm9kdWN0aW9uLW1vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDdUU7QUFDeEI7QUFDL0M7QUFDQTtBQUNBLHFDQUFxQyxXQUFXO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLE1BQU0sOERBQVkseUNBQXlDLGlFQUFtQixzQ0FBc0M7QUFDcEg7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFFBQVEsMkRBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxlc21cXGhlbHBlcnNcXHByb2R1Y3Rpb24tbW9kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaGVscGVycy9wcm9kdWN0aW9uLW1vZGUudHNcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IsIGNhcHR1cmVFcnJvciB9IGZyb20gXCIuLi91dGlscy9lcnJvcnMuanNcIjtcbmltcG9ydCB7IGlzTG9jYWxob3N0IH0gZnJvbSBcIi4uL3V0aWxzL3VybHMuanNcIjtcbmZ1bmN0aW9uIGdldFByb2R1Y3Rpb25Nb2RlRXJyb3JzKHByb2plY3QpIHtcbiAgY29uc3QgZXJyb3JzID0gW107XG4gIGNvbnN0IGRvbWFpbnNGaXhVcmwgPSBgL3Byb2plY3RzLyR7cHJvamVjdC5pZH0vZG9tYWluc2A7XG4gIGlmIChwcm9qZWN0LmNvbmZpZy5hbGxvd19sb2NhbGhvc3QpIHtcbiAgICBlcnJvcnMucHVzaCh7XG4gICAgICBtZXNzYWdlOiBcIkxvY2FsaG9zdCBpcyBub3QgYWxsb3dlZCBpbiBwcm9kdWN0aW9uIG1vZGUsIHR1cm4gb2ZmICdBbGxvdyBsb2NhbGhvc3QnIGluIHByb2plY3Qgc2V0dGluZ3NcIixcbiAgICAgIHJlbGF0aXZlRml4VXJsOiBkb21haW5zRml4VXJsXG4gICAgfSk7XG4gIH1cbiAgZm9yIChjb25zdCB7IGRvbWFpbiB9IG9mIHByb2plY3QuY29uZmlnLmRvbWFpbnMpIHtcbiAgICBsZXQgdXJsO1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBub3JtYWxpemVkRG9tYWluID0gZG9tYWluLnJlcGxhY2UoL1xcKisvZywgXCJ3aWxkY2FyZC1wbGFjZWhvbGRlclwiKTtcbiAgICAgIHVybCA9IG5ldyBVUkwobm9ybWFsaXplZERvbWFpbik7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY2FwdHVyZUVycm9yKFwicHJvZHVjdGlvbi1tb2RlLWRvbWFpbi1ub3QtdmFsaWRcIiwgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJEb21haW4gd2FzIHNvbWVob3cgbm90IGEgdmFsaWQgVVJMOyB3ZSBzaG91bGQndmUgY2F1Z2h0IHRoaXMgd2hlbiBzZXR0aW5nIHRoZSBkb21haW4gaW4gdGhlIGZpcnN0IHBsYWNlXCIsIHtcbiAgICAgICAgZG9tYWluLFxuICAgICAgICBwcm9qZWN0SWQ6IHByb2plY3RcbiAgICAgIH0pKTtcbiAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgbWVzc2FnZTogXCJUcnVzdGVkIGRvbWFpbiBpcyBub3QgYSB2YWxpZCBVUkw6IFwiICsgZG9tYWluLFxuICAgICAgICByZWxhdGl2ZUZpeFVybDogZG9tYWluc0ZpeFVybFxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKGlzTG9jYWxob3N0KHVybCkpIHtcbiAgICAgIGVycm9ycy5wdXNoKHtcbiAgICAgICAgbWVzc2FnZTogXCJMb2NhbGhvc3QgZG9tYWlucyBhcmUgbm90IGFsbG93ZWQgdG8gYmUgdHJ1c3RlZCBpbiBwcm9kdWN0aW9uIG1vZGU6IFwiICsgZG9tYWluLFxuICAgICAgICByZWxhdGl2ZUZpeFVybDogZG9tYWluc0ZpeFVybFxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh1cmwuaG9zdG5hbWUubWF0Y2goL15cXGQrKFxcLlxcZCspKiQvKSkge1xuICAgICAgZXJyb3JzLnB1c2goe1xuICAgICAgICBtZXNzYWdlOiBcIkRpcmVjdCBJUHMgYXJlIG5vdCB2YWxpZCBmb3IgdHJ1c3RlZCBkb21haW5zIGluIHByb2R1Y3Rpb24gbW9kZTogXCIgKyBkb21haW4sXG4gICAgICAgIHJlbGF0aXZlRml4VXJsOiBkb21haW5zRml4VXJsXG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHVybC5wcm90b2NvbCAhPT0gXCJodHRwczpcIikge1xuICAgICAgZXJyb3JzLnB1c2goe1xuICAgICAgICBtZXNzYWdlOiBcIlRydXN0ZWQgZG9tYWlucyBzaG91bGQgYmUgSFRUUFM6IFwiICsgZG9tYWluLFxuICAgICAgICByZWxhdGl2ZUZpeFVybDogZG9tYWluc0ZpeFVybFxuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBlcnJvcnM7XG59XG5leHBvcnQge1xuICBnZXRQcm9kdWN0aW9uTW9kZUVycm9yc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb2R1Y3Rpb24tbW9kZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/helpers/production-mode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/helpers/vault/client-side.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/helpers/vault/client-side.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decryptValue: () => (/* binding */ decryptValue),\n/* harmony export */   encryptValue: () => (/* binding */ encryptValue),\n/* harmony export */   hashKey: () => (/* binding */ hashKey)\n/* harmony export */ });\n/* harmony import */ var _utils_bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/bytes.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js\");\n/* harmony import */ var _utils_crypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/crypto.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js\");\n// src/helpers/vault/client-side.ts\n\n\nvar hashPurpose = \"stack-data-vault-client-side-encryption-key-hash\";\nvar encryptionSecretPurpose = \"stack-data-vault-client-side-encryption-value-encryption-key-hash\";\nvar encryptionValuePurpose = \"stack-data-vault-client-side-encryption-value-encryption-value-encryption\";\nasync function getDerivedKey(secret, key) {\n  return await (0,_utils_crypto_js__WEBPACK_IMPORTED_MODULE_1__.iteratedHash)({\n    purpose: encryptionSecretPurpose,\n    extra: secret,\n    value: key,\n    iterations: 1e5\n  });\n}\nasync function hashKey(secret, key) {\n  return (0,_utils_bytes_js__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(await (0,_utils_crypto_js__WEBPACK_IMPORTED_MODULE_1__.hash)({\n    purpose: hashPurpose,\n    extra: secret,\n    value: await getDerivedKey(secret, key)\n  }));\n}\nasync function encryptValue(secret, key, value) {\n  const valueEncryptionDerivedKey = await getDerivedKey(secret, key);\n  const bytes = await (0,_utils_crypto_js__WEBPACK_IMPORTED_MODULE_1__.encrypt)({\n    purpose: encryptionValuePurpose,\n    secret: valueEncryptionDerivedKey,\n    value: new TextEncoder().encode(value)\n  });\n  return (0,_utils_bytes_js__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(bytes);\n}\nasync function decryptValue(secret, key, encryptedValue) {\n  const valueEncryptionDerivedKey = await getDerivedKey(secret, key);\n  const bytesResult = await (0,_utils_crypto_js__WEBPACK_IMPORTED_MODULE_1__.decrypt)({\n    purpose: encryptionValuePurpose,\n    secret: valueEncryptionDerivedKey,\n    cipher: (0,_utils_bytes_js__WEBPACK_IMPORTED_MODULE_0__.decodeBase64)(encryptedValue)\n  });\n  if (bytesResult.status === \"error\") throw new Error(\"Data vault client-side decryption failed. Are you sure you're using the correct secret?\", { cause: bytesResult.error });\n  return new TextDecoder().decode(bytesResult.data);\n}\n\n//# sourceMappingURL=client-side.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vaGVscGVycy92YXVsdC9jbGllbnQtc2lkZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2tFO0FBQ1c7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxTQUFTLDZEQUFZLE9BQU8sc0RBQUk7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBTztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsU0FBUyw2REFBWTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIseURBQU87QUFDbkM7QUFDQTtBQUNBLFlBQVksNkRBQVk7QUFDeEIsR0FBRztBQUNILG1KQUFtSiwwQkFBMEI7QUFDN0s7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxlc21cXGhlbHBlcnNcXHZhdWx0XFxjbGllbnQtc2lkZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaGVscGVycy92YXVsdC9jbGllbnQtc2lkZS50c1xuaW1wb3J0IHsgZGVjb2RlQmFzZTY0LCBlbmNvZGVCYXNlNjQgfSBmcm9tIFwiLi4vLi4vdXRpbHMvYnl0ZXMuanNcIjtcbmltcG9ydCB7IGRlY3J5cHQsIGVuY3J5cHQsIGhhc2gsIGl0ZXJhdGVkSGFzaCB9IGZyb20gXCIuLi8uLi91dGlscy9jcnlwdG8uanNcIjtcbnZhciBoYXNoUHVycG9zZSA9IFwic3RhY2stZGF0YS12YXVsdC1jbGllbnQtc2lkZS1lbmNyeXB0aW9uLWtleS1oYXNoXCI7XG52YXIgZW5jcnlwdGlvblNlY3JldFB1cnBvc2UgPSBcInN0YWNrLWRhdGEtdmF1bHQtY2xpZW50LXNpZGUtZW5jcnlwdGlvbi12YWx1ZS1lbmNyeXB0aW9uLWtleS1oYXNoXCI7XG52YXIgZW5jcnlwdGlvblZhbHVlUHVycG9zZSA9IFwic3RhY2stZGF0YS12YXVsdC1jbGllbnQtc2lkZS1lbmNyeXB0aW9uLXZhbHVlLWVuY3J5cHRpb24tdmFsdWUtZW5jcnlwdGlvblwiO1xuYXN5bmMgZnVuY3Rpb24gZ2V0RGVyaXZlZEtleShzZWNyZXQsIGtleSkge1xuICByZXR1cm4gYXdhaXQgaXRlcmF0ZWRIYXNoKHtcbiAgICBwdXJwb3NlOiBlbmNyeXB0aW9uU2VjcmV0UHVycG9zZSxcbiAgICBleHRyYTogc2VjcmV0LFxuICAgIHZhbHVlOiBrZXksXG4gICAgaXRlcmF0aW9uczogMWU1XG4gIH0pO1xufVxuYXN5bmMgZnVuY3Rpb24gaGFzaEtleShzZWNyZXQsIGtleSkge1xuICByZXR1cm4gZW5jb2RlQmFzZTY0KGF3YWl0IGhhc2goe1xuICAgIHB1cnBvc2U6IGhhc2hQdXJwb3NlLFxuICAgIGV4dHJhOiBzZWNyZXQsXG4gICAgdmFsdWU6IGF3YWl0IGdldERlcml2ZWRLZXkoc2VjcmV0LCBrZXkpXG4gIH0pKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGVuY3J5cHRWYWx1ZShzZWNyZXQsIGtleSwgdmFsdWUpIHtcbiAgY29uc3QgdmFsdWVFbmNyeXB0aW9uRGVyaXZlZEtleSA9IGF3YWl0IGdldERlcml2ZWRLZXkoc2VjcmV0LCBrZXkpO1xuICBjb25zdCBieXRlcyA9IGF3YWl0IGVuY3J5cHQoe1xuICAgIHB1cnBvc2U6IGVuY3J5cHRpb25WYWx1ZVB1cnBvc2UsXG4gICAgc2VjcmV0OiB2YWx1ZUVuY3J5cHRpb25EZXJpdmVkS2V5LFxuICAgIHZhbHVlOiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodmFsdWUpXG4gIH0pO1xuICByZXR1cm4gZW5jb2RlQmFzZTY0KGJ5dGVzKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGRlY3J5cHRWYWx1ZShzZWNyZXQsIGtleSwgZW5jcnlwdGVkVmFsdWUpIHtcbiAgY29uc3QgdmFsdWVFbmNyeXB0aW9uRGVyaXZlZEtleSA9IGF3YWl0IGdldERlcml2ZWRLZXkoc2VjcmV0LCBrZXkpO1xuICBjb25zdCBieXRlc1Jlc3VsdCA9IGF3YWl0IGRlY3J5cHQoe1xuICAgIHB1cnBvc2U6IGVuY3J5cHRpb25WYWx1ZVB1cnBvc2UsXG4gICAgc2VjcmV0OiB2YWx1ZUVuY3J5cHRpb25EZXJpdmVkS2V5LFxuICAgIGNpcGhlcjogZGVjb2RlQmFzZTY0KGVuY3J5cHRlZFZhbHVlKVxuICB9KTtcbiAgaWYgKGJ5dGVzUmVzdWx0LnN0YXR1cyA9PT0gXCJlcnJvclwiKSB0aHJvdyBuZXcgRXJyb3IoXCJEYXRhIHZhdWx0IGNsaWVudC1zaWRlIGRlY3J5cHRpb24gZmFpbGVkLiBBcmUgeW91IHN1cmUgeW91J3JlIHVzaW5nIHRoZSBjb3JyZWN0IHNlY3JldD9cIiwgeyBjYXVzZTogYnl0ZXNSZXN1bHQuZXJyb3IgfSk7XG4gIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYnl0ZXNSZXN1bHQuZGF0YSk7XG59XG5leHBvcnQge1xuICBkZWNyeXB0VmFsdWUsXG4gIGVuY3J5cHRWYWx1ZSxcbiAgaGFzaEtleVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsaWVudC1zaWRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/helpers/vault/client-side.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownError: () => (/* reexport safe */ _known_errors_js__WEBPACK_IMPORTED_MODULE_3__.KnownError),\n/* harmony export */   KnownErrors: () => (/* reexport safe */ _known_errors_js__WEBPACK_IMPORTED_MODULE_3__.KnownErrors),\n/* harmony export */   StackAdminInterface: () => (/* reexport safe */ _interface_admin_interface_js__WEBPACK_IMPORTED_MODULE_0__.StackAdminInterface),\n/* harmony export */   StackClientInterface: () => (/* reexport safe */ _interface_client_interface_js__WEBPACK_IMPORTED_MODULE_1__.StackClientInterface),\n/* harmony export */   StackServerInterface: () => (/* reexport safe */ _interface_server_interface_js__WEBPACK_IMPORTED_MODULE_2__.StackServerInterface)\n/* harmony export */ });\n/* harmony import */ var _interface_admin_interface_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./interface/admin-interface.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/admin-interface.js\");\n/* harmony import */ var _interface_client_interface_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interface/client-interface.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js\");\n/* harmony import */ var _interface_server_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interface/server-interface.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js\");\n/* harmony import */ var _known_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./known-errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/known-errors.js\");\n// src/index.ts\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFHd0M7QUFHQztBQUdBO0FBSWQ7QUFPekI7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXGVzbVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2luZGV4LnRzXG5pbXBvcnQge1xuICBTdGFja0FkbWluSW50ZXJmYWNlXG59IGZyb20gXCIuL2ludGVyZmFjZS9hZG1pbi1pbnRlcmZhY2UuanNcIjtcbmltcG9ydCB7XG4gIFN0YWNrQ2xpZW50SW50ZXJmYWNlXG59IGZyb20gXCIuL2ludGVyZmFjZS9jbGllbnQtaW50ZXJmYWNlLmpzXCI7XG5pbXBvcnQge1xuICBTdGFja1NlcnZlckludGVyZmFjZVxufSBmcm9tIFwiLi9pbnRlcmZhY2Uvc2VydmVyLWludGVyZmFjZS5qc1wiO1xuaW1wb3J0IHtcbiAgS25vd25FcnJvcixcbiAgS25vd25FcnJvcnNcbn0gZnJvbSBcIi4va25vd24tZXJyb3JzLmpzXCI7XG5leHBvcnQge1xuICBLbm93bkVycm9yLFxuICBLbm93bkVycm9ycyxcbiAgU3RhY2tBZG1pbkludGVyZmFjZSxcbiAgU3RhY2tDbGllbnRJbnRlcmZhY2UsXG4gIFN0YWNrU2VydmVySW50ZXJmYWNlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/admin-interface.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/interface/admin-interface.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackAdminInterface: () => (/* binding */ StackAdminInterface)\n/* harmony export */ });\n/* harmony import */ var _known_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../known-errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/known-errors.js\");\n/* harmony import */ var _utils_results_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/results.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var _server_interface_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./server-interface.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js\");\n// src/interface/admin-interface.ts\n\n\n\nvar StackAdminInterface = class extends _server_interface_js__WEBPACK_IMPORTED_MODULE_2__.StackServerInterface {\n  constructor(options) {\n    super(options);\n    this.options = options;\n  }\n  async sendAdminRequest(path, options, session, requestType = \"admin\") {\n    return await this.sendServerRequest(\n      path,\n      {\n        ...options,\n        headers: {\n          \"x-stack-super-secret-admin-key\": \"superSecretAdminKey\" in this.options ? this.options.superSecretAdminKey : \"\",\n          ...options.headers\n        }\n      },\n      session,\n      requestType\n    );\n  }\n  async sendAdminRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {\n    try {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_1__.Result.ok(await this.sendAdminRequest(path, requestOptions, tokenStoreOrNull));\n    } catch (e) {\n      for (const errorType of errorsToCatch) {\n        if (errorType.isInstance(e)) {\n          return _utils_results_js__WEBPACK_IMPORTED_MODULE_1__.Result.error(e);\n        }\n      }\n      throw e;\n    }\n  }\n  async getProject() {\n    const response = await this.sendAdminRequest(\n      \"/internal/projects/current\",\n      {\n        method: \"GET\"\n      },\n      null\n    );\n    return await response.json();\n  }\n  async updateProject(update) {\n    const response = await this.sendAdminRequest(\n      \"/internal/projects/current\",\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(update)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async createInternalApiKey(options) {\n    const response = await this.sendAdminRequest(\n      \"/internal/api-keys\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(options)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async listInternalApiKeys() {\n    const response = await this.sendAdminRequest(\"/internal/api-keys\", {}, null);\n    const result = await response.json();\n    return result.items;\n  }\n  async revokeInternalApiKeyById(id) {\n    await this.sendAdminRequest(\n      `/internal/api-keys/${id}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          revoked: true\n        })\n      },\n      null\n    );\n  }\n  async getInternalApiKey(id, session) {\n    const response = await this.sendAdminRequest(`/internal/api-keys/${id}`, {}, session);\n    return await response.json();\n  }\n  async listInternalEmailTemplates() {\n    const response = await this.sendAdminRequest(`/internal/email-templates`, {}, null);\n    const result = await response.json();\n    return result.templates;\n  }\n  async listInternalEmailDrafts() {\n    const response = await this.sendAdminRequest(`/internal/email-drafts`, {}, null);\n    const result = await response.json();\n    return result.drafts;\n  }\n  async createEmailDraft(options) {\n    const response = await this.sendAdminRequest(\n      `/internal/email-drafts`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(options)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async updateEmailDraft(id, data) {\n    await this.sendAdminRequest(\n      `/internal/email-drafts/${id}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n  }\n  async listEmailThemes() {\n    const response = await this.sendAdminRequest(`/internal/email-themes`, {}, null);\n    const result = await response.json();\n    return result.themes;\n  }\n  // Team permission definitions methods\n  async listTeamPermissionDefinitions() {\n    const response = await this.sendAdminRequest(`/team-permission-definitions`, {}, null);\n    const result = await response.json();\n    return result.items;\n  }\n  async createTeamPermissionDefinition(data) {\n    const response = await this.sendAdminRequest(\n      \"/team-permission-definitions\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async updateTeamPermissionDefinition(permissionId, data) {\n    const response = await this.sendAdminRequest(\n      `/team-permission-definitions/${permissionId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async deleteTeamPermissionDefinition(permissionId) {\n    await this.sendAdminRequest(\n      `/team-permission-definitions/${permissionId}`,\n      { method: \"DELETE\" },\n      null\n    );\n  }\n  async listProjectPermissionDefinitions() {\n    const response = await this.sendAdminRequest(`/project-permission-definitions`, {}, null);\n    const result = await response.json();\n    return result.items;\n  }\n  async createProjectPermissionDefinition(data) {\n    const response = await this.sendAdminRequest(\n      \"/project-permission-definitions\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async updateProjectPermissionDefinition(permissionId, data) {\n    const response = await this.sendAdminRequest(\n      `/project-permission-definitions/${permissionId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async deleteProjectPermissionDefinition(permissionId) {\n    await this.sendAdminRequest(\n      `/project-permission-definitions/${permissionId}`,\n      { method: \"DELETE\" },\n      null\n    );\n  }\n  async getSvixToken() {\n    const response = await this.sendAdminRequest(\n      \"/webhooks/svix-token\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n    return await response.json();\n  }\n  async deleteProject() {\n    await this.sendAdminRequest(\n      \"/internal/projects/current\",\n      {\n        method: \"DELETE\"\n      },\n      null\n    );\n  }\n  async transferProject(session, newTeamId) {\n    await this.sendAdminRequest(\n      \"/internal/projects/transfer\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          project_id: this.options.projectId,\n          new_team_id: newTeamId\n        })\n      },\n      session\n    );\n  }\n  async getMetrics(includeAnonymous = false) {\n    const params = new URLSearchParams();\n    if (includeAnonymous) {\n      params.append(\"include_anonymous\", \"true\");\n    }\n    const queryString = params.toString();\n    const response = await this.sendAdminRequest(\n      `/internal/metrics${queryString ? `?${queryString}` : \"\"}`,\n      {\n        method: \"GET\"\n      },\n      null\n    );\n    return await response.json();\n  }\n  async sendTestEmail(data) {\n    const response = await this.sendAdminRequest(`/internal/send-test-email`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }, null);\n    return await response.json();\n  }\n  async listSentEmails() {\n    const response = await this.sendAdminRequest(\"/internal/emails\", {\n      method: \"GET\"\n    }, null);\n    return await response.json();\n  }\n  async sendSignInInvitationEmail(email, callbackUrl) {\n    await this.sendAdminRequest(\n      \"/internal/send-sign-in-invitation\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          callback_url: callbackUrl\n        })\n      },\n      null\n    );\n  }\n  async sendChatMessage(threadId, contextType, messages, abortSignal) {\n    const response = await this.sendAdminRequest(\n      `/internal/ai-chat/${threadId}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ context_type: contextType, messages }),\n        signal: abortSignal\n      },\n      null\n    );\n    return await response.json();\n  }\n  async saveChatMessage(threadId, message) {\n    await this.sendAdminRequest(\n      `/internal/ai-chat/${threadId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ message })\n      },\n      null\n    );\n  }\n  async listChatMessages(threadId) {\n    const response = await this.sendAdminRequest(\n      `/internal/ai-chat/${threadId}`,\n      { method: \"GET\" },\n      null\n    );\n    return await response.json();\n  }\n  async renderEmailPreview(options) {\n    const response = await this.sendAdminRequest(`/emails/render-email`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        theme_id: options.themeId,\n        theme_tsx_source: options.themeTsxSource,\n        template_id: options.templateId,\n        template_tsx_source: options.templateTsxSource\n      })\n    }, null);\n    return await response.json();\n  }\n  async createEmailTheme(displayName) {\n    const response = await this.sendAdminRequest(\n      `/internal/email-themes`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          display_name: displayName\n        })\n      },\n      null\n    );\n    return await response.json();\n  }\n  async getEmailTheme(id) {\n    const response = await this.sendAdminRequest(\n      `/internal/email-themes/${id}`,\n      { method: \"GET\" },\n      null\n    );\n    return await response.json();\n  }\n  async updateEmailTheme(id, tsxSource) {\n    await this.sendAdminRequest(\n      `/internal/email-themes/${id}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tsx_source: tsxSource\n        })\n      },\n      null\n    );\n  }\n  async updateEmailTemplate(id, tsxSource, themeId) {\n    const response = await this.sendAdminRequest(\n      `/internal/email-templates/${id}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ tsx_source: tsxSource, theme_id: themeId })\n      },\n      null\n    );\n    return await response.json();\n  }\n  async getConfig() {\n    const response = await this.sendAdminRequest(\n      `/internal/config`,\n      { method: \"GET\" },\n      null\n    );\n    return await response.json();\n  }\n  async updateConfig(data) {\n    const response = await this.sendAdminRequest(\n      `/internal/config/override`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ config_override_string: JSON.stringify(data.configOverride) })\n      },\n      null\n    );\n    return await response.json();\n  }\n  async createEmailTemplate(displayName) {\n    const response = await this.sendAdminRequest(\n      `/internal/email-templates`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          display_name: displayName\n        })\n      },\n      null\n    );\n    return await response.json();\n  }\n  async setupPayments() {\n    const response = await this.sendAdminRequest(\n      \"/internal/payments/setup\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n    return await response.json();\n  }\n  async getStripeAccountInfo() {\n    const response = await this.sendAdminRequestAndCatchKnownError(\n      \"/internal/payments/stripe/account-info\",\n      {},\n      null,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.StripeAccountInfoNotFound]\n    );\n    if (response.status === \"error\") {\n      return null;\n    }\n    return await response.data.json();\n  }\n  async createStripeWidgetAccountSession() {\n    const response = await this.sendAdminRequest(\n      \"/internal/payments/stripe-widgets/account-session\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n    return await response.json();\n  }\n  async listTransactions(params) {\n    const qs = new URLSearchParams();\n    if (params?.cursor) qs.set(\"cursor\", params.cursor);\n    if (typeof params?.limit === \"number\") qs.set(\"limit\", String(params.limit));\n    if (params?.type) qs.set(\"type\", params.type);\n    if (params?.customerType) qs.set(\"customer_type\", params.customerType);\n    const response = await this.sendAdminRequest(\n      `/internal/payments/transactions${qs.size ? `?${qs.toString()}` : \"\"}`,\n      { method: \"GET\" },\n      null\n    );\n    const json = await response.json();\n    return { transactions: json.transactions, nextCursor: json.next_cursor };\n  }\n  async testModePurchase(options) {\n    await this.sendAdminRequest(\n      \"/internal/payments/test-mode-purchase-session\",\n      {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify(options)\n      },\n      null\n    );\n  }\n};\n\n//# sourceMappingURL=admin-interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/admin-interface.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackClientInterface: () => (/* binding */ StackClientInterface)\n/* harmony export */ });\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! oauth4webapi */ \"(app-pages-browser)/./node_modules/oauth4webapi/build/index.js\");\n/* harmony import */ var _known_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../known-errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/known-errors.js\");\n/* harmony import */ var _sessions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sessions.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/sessions.js\");\n/* harmony import */ var _utils_crypto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/crypto.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js\");\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _utils_globals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/globals.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js\");\n/* harmony import */ var _utils_http_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/http.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/http.js\");\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/objects.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n/* harmony import */ var _utils_promises_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/promises.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\");\n/* harmony import */ var _utils_results_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/results.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n/* harmony import */ var _utils_urls_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/urls.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js\");\n// src/interface/client-interface.ts\n\n\n\n\n\n\n\n\n\n\n\n\nvar StackClientInterface = class {\n  constructor(options) {\n    this.options = options;\n  }\n  get projectId() {\n    return this.options.projectId;\n  }\n  getApiUrl() {\n    return this.options.getBaseUrl() + \"/api/v1\";\n  }\n  async runNetworkDiagnostics(session, requestType) {\n    const tryRequest = async (cb) => {\n      try {\n        await cb();\n        return \"OK\";\n      } catch (e) {\n        return `${e}`;\n      }\n    };\n    const cfTrace = await tryRequest(async () => {\n      const res = await fetch(\"https://1.1.1.1/cdn-cgi/trace\");\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n      }\n    });\n    const apiRoot = session !== void 0 && requestType !== void 0 ? await tryRequest(async () => {\n      const res = await this.sendClientRequestInner(\"/\", {}, session, requestType);\n      if (res.status === \"error\") {\n        throw res.error;\n      }\n    }) : \"Not tested\";\n    const baseUrlBackend = await tryRequest(async () => {\n      const res = await fetch(new URL(\"/health\", this.getApiUrl()));\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n      }\n    });\n    const prodDashboard = await tryRequest(async () => {\n      const res = await fetch(\"https://app.stack-auth.com/health\");\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n      }\n    });\n    const prodBackend = await tryRequest(async () => {\n      const res = await fetch(\"https://api.stack-auth.com/health\");\n      if (!res.ok) {\n        throw new Error(`${res.status} ${res.statusText}: ${await res.text()}`);\n      }\n    });\n    return {\n      \"navigator?.onLine\": _utils_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalVar.navigator?.onLine,\n      cfTrace,\n      apiRoot,\n      baseUrlBackend,\n      prodDashboard,\n      prodBackend\n    };\n  }\n  async _createNetworkError(cause, session, requestType) {\n    return new Error((0,_utils_strings_js__WEBPACK_IMPORTED_MODULE_9__.deindent)`\n      Stack Auth is unable to connect to the server. Please check your internet connection and try again.\n\n      If the problem persists, please contact support and provide a screenshot of your entire browser console.\n\n      ${cause}\n\n      ${JSON.stringify(await this.runNetworkDiagnostics(session, requestType), null, 2)}\n    `, { cause });\n  }\n  async _networkRetry(cb, session, requestType) {\n    const retriedResult = await _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.retry(\n      cb,\n      5,\n      { exponentialDelayBase: 1e3 }\n    );\n    if (retriedResult.status === \"error\") {\n      if (_utils_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalVar.navigator && _utils_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalVar.navigator.onLine === false) {\n        throw new Error(\"You are offline. Please check your internet connection and try again. (window.navigator.onLine is false)\", { cause: retriedResult.error });\n      }\n      throw await this._createNetworkError(retriedResult.error, session, requestType);\n    }\n    return retriedResult.data;\n  }\n  async _networkRetryException(cb, session, requestType) {\n    return await this._networkRetry(async () => await _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.fromThrowingAsync(cb), session, requestType);\n  }\n  async fetchNewAccessToken(refreshToken) {\n    if (!(\"publishableClientKey\" in this.options)) {\n      throw new Error(\"Admin session token is currently not supported for fetching new access token. Did you try to log in on a StackApp initiated with the admin session?\");\n    }\n    const as = {\n      issuer: this.options.getBaseUrl(),\n      algorithm: \"oauth2\",\n      token_endpoint: this.getApiUrl() + \"/auth/oauth/token\"\n    };\n    const client = {\n      client_id: this.projectId,\n      client_secret: this.options.publishableClientKey,\n      token_endpoint_auth_method: \"client_secret_post\"\n    };\n    const rawResponse = await this._networkRetryException(\n      async () => await oauth4webapi__WEBPACK_IMPORTED_MODULE_11__.refreshTokenGrantRequest(\n        as,\n        client,\n        refreshToken.token\n      )\n    );\n    const response = await this._processResponse(rawResponse);\n    if (response.status === \"error\") {\n      const error = response.error;\n      if (_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.RefreshTokenError.isInstance(error)) {\n        return null;\n      }\n      throw error;\n    }\n    if (!response.data.ok) {\n      const body = await response.data.text();\n      throw new Error(`Failed to send refresh token request: ${response.status} ${body}`);\n    }\n    const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_11__.processRefreshTokenResponse(as, client, response.data);\n    if (oauth4webapi__WEBPACK_IMPORTED_MODULE_11__.isOAuth2Error(result)) {\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"OAuth error\", { result });\n    }\n    if (!result.access_token) {\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Access token not found in token endpoint response, this is weird!\");\n    }\n    return _sessions_js__WEBPACK_IMPORTED_MODULE_1__.AccessToken.createIfValid(result.access_token) ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.throwErr)(\"Access token in fetchNewAccessToken is invalid, looks like the backend is returning an invalid token!\", { result });\n  }\n  async sendClientRequest(path, requestOptions, session, requestType = \"client\") {\n    session ??= this.createSession({\n      refreshToken: null\n    });\n    return await this._networkRetry(\n      () => this.sendClientRequestInner(path, requestOptions, session, requestType),\n      session,\n      requestType\n    );\n  }\n  createSession(options) {\n    const session = new _sessions_js__WEBPACK_IMPORTED_MODULE_1__.InternalSession({\n      refreshAccessTokenCallback: async (refreshToken) => await this.fetchNewAccessToken(refreshToken),\n      ...options\n    });\n    return session;\n  }\n  async sendClientRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {\n    try {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await this.sendClientRequest(path, requestOptions, tokenStoreOrNull));\n    } catch (e) {\n      for (const errorType of errorsToCatch) {\n        if (errorType.isInstance(e)) {\n          return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(e);\n        }\n      }\n      throw e;\n    }\n  }\n  async sendClientRequestInner(path, options, session, requestType) {\n    let tokenObj = await session.getOrFetchLikelyValidTokens(2e4);\n    let adminSession = \"projectOwnerSession\" in this.options ? this.options.projectOwnerSession : null;\n    let adminTokenObj = adminSession ? await adminSession.getOrFetchLikelyValidTokens(2e4) : null;\n    await this.options.prepareRequest?.();\n    let url = this.getApiUrl() + path;\n    if (url.endsWith(\"/\")) {\n      url = url.slice(0, -1);\n    }\n    const params = {\n      /**\n       * This fetch may be cross-origin, in which case we don't want to send cookies of the\n       * original origin (this is the default behavior of `credentials`).\n       *\n       * To help debugging, also omit cookies on same-origin, so we don't accidentally\n       * implement reliance on cookies anywhere.\n       *\n       * However, Cloudflare Workers don't actually support `credentials`, so we only set it\n       * if Cloudflare-exclusive globals are not detected. https://github.com/cloudflare/workers-sdk/issues/2514\n       */\n      ...\"WebSocketPair\" in _utils_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalVar ? {} : {\n        credentials: \"omit\"\n      },\n      ...options,\n      headers: {\n        \"X-Stack-Override-Error-Status\": \"true\",\n        \"X-Stack-Project-Id\": this.projectId,\n        \"X-Stack-Access-Type\": requestType,\n        \"X-Stack-Client-Version\": this.options.clientVersion,\n        ...tokenObj ? {\n          \"X-Stack-Access-Token\": tokenObj.accessToken.token\n        } : {},\n        ...tokenObj?.refreshToken ? {\n          \"X-Stack-Refresh-Token\": tokenObj.refreshToken.token\n        } : {},\n        \"X-Stack-Allow-Anonymous-User\": \"true\",\n        ...\"publishableClientKey\" in this.options ? {\n          \"X-Stack-Publishable-Client-Key\": this.options.publishableClientKey\n        } : {},\n        ...adminTokenObj ? {\n          \"X-Stack-Admin-Access-Token\": adminTokenObj.accessToken.token\n        } : {},\n        /**\n         * Next.js until v15 would cache fetch requests by default, and forcefully disabling it was nearly impossible.\n         *\n         * This header is used to change the cache key and hence always disable it, because we do our own caching.\n         *\n         * When we drop support for Next.js <15, we may be able to remove this header, but please make sure that this is\n         * the case (I haven't actually tested.)\n         */\n        \"X-Stack-Random-Nonce\": (0,_utils_crypto_js__WEBPACK_IMPORTED_MODULE_2__.generateSecureRandomString)(),\n        // don't show a warning when proxying the API through ngrok (only relevant if the API url is an ngrok site)\n        \"ngrok-skip-browser-warning\": \"true\",\n        ...this.options.extraRequestHeaders,\n        ...options.headers\n      },\n      /**\n       * Cloudflare Workers does not support cache, so don't pass it there\n       */\n      ...\"WebSocketPair\" in _utils_globals_js__WEBPACK_IMPORTED_MODULE_4__.globalVar ? {} : {\n        cache: \"no-store\"\n      }\n    };\n    let rawRes;\n    try {\n      rawRes = await fetch(url, params);\n    } catch (e) {\n      if (e instanceof TypeError) {\n        if (_utils_http_js__WEBPACK_IMPORTED_MODULE_5__.HTTP_METHODS[params.method ?? \"GET\"].idempotent) {\n          return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(e);\n        } else {\n          throw await this._createNetworkError(e, session, requestType);\n        }\n      }\n      throw e;\n    }\n    const processedRes = await this._processResponse(rawRes);\n    if (processedRes.status === \"error\") {\n      if (_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.InvalidAccessToken.isInstance(processedRes.error)) {\n        if (!tokenObj) {\n          throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Received invalid access token, but session is not logged in\", { tokenObj, processedRes });\n        }\n        session.markAccessTokenExpired(tokenObj.accessToken);\n        return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(processedRes.error);\n      }\n      if (adminSession && (_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.InvalidAdminAccessToken.isInstance(processedRes.error) || _known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.ApiKeyNotFound.isInstance(processedRes.error))) {\n        if (!adminTokenObj) {\n          throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Received invalid admin access token, but admin session is not logged in\", { adminTokenObj, processedRes });\n        }\n        adminSession.markAccessTokenExpired(adminTokenObj.accessToken);\n        return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(processedRes.error);\n      }\n      throw processedRes.error;\n    }\n    const res = Object.assign(processedRes.data, {\n      usedTokens: tokenObj\n    });\n    if (res.ok) {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(res);\n    } else if (res.status === 429) {\n      const retryAfter = res.headers.get(\"Retry-After\");\n      if (retryAfter !== null) {\n        console.log(`Rate limited while sending request to ${url}. Will retry after ${retryAfter} seconds...`);\n        await (0,_utils_promises_js__WEBPACK_IMPORTED_MODULE_7__.wait)(Number(retryAfter) * 1e3);\n        return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(new Error(`Rate limited, retrying after ${retryAfter} seconds`));\n      }\n      console.log(`Rate limited while sending request to ${url}, no retry-after header received. Retrying...`);\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(new Error(\"Rate limited, no retry-after header received\"));\n    } else {\n      const error = await res.text();\n      const errorObj = new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(`Failed to send request to ${url}: ${res.status} ${error}`, { request: params, res, path });\n      if (res.status === 508 && error.includes(\"INFINITE_LOOP_DETECTED\")) {\n        return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(errorObj);\n      }\n      throw errorObj;\n    }\n  }\n  async _processResponse(rawRes) {\n    let res = rawRes;\n    if (rawRes.headers.has(\"x-stack-actual-status\")) {\n      const actualStatus = Number(rawRes.headers.get(\"x-stack-actual-status\"));\n      res = new Response(rawRes.body, {\n        status: actualStatus,\n        statusText: rawRes.statusText,\n        headers: rawRes.headers\n      });\n    }\n    if (res.headers.has(\"x-stack-known-error\")) {\n      const errorJson = await res.json();\n      if (res.headers.get(\"x-stack-known-error\") !== errorJson.code) {\n        throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Mismatch between x-stack-known-error header and error code in body; the server's response is invalid\");\n      }\n      const error = _known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownError.fromJson(errorJson);\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(error);\n    }\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(res);\n  }\n  async checkFeatureSupport(options) {\n    const res = await this.sendClientRequest(\"/check-feature-support\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(options)\n    }, null);\n    throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(await res.text());\n  }\n  async sendForgotPasswordEmail(email, callbackUrl) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/password/send-reset-code\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          callback_url: callbackUrl\n        })\n      },\n      null,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.UserNotFound]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    } else {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(void 0);\n    }\n  }\n  async sendVerificationEmail(email, callbackUrl, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/contact-channels/send-verification-code\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          callback_url: callbackUrl\n        })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.EmailAlreadyVerified]\n    );\n    if (res.status === \"error\") {\n      return res.error;\n    }\n  }\n  async sendMagicLinkEmail(email, callbackUrl) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/otp/send-sign-in-code\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          callback_url: callbackUrl\n        })\n      },\n      null,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.RedirectUrlNotWhitelisted]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    } else {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await res.data.json());\n    }\n  }\n  async resetPassword(options) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"onlyVerifyCode\" in options ? \"/auth/password/reset/check-code\" : \"/auth/password/reset\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: options.code,\n          ...\"password\" in options ? { password: options.password } : {}\n        })\n      },\n      null,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    } else {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(void 0);\n    }\n  }\n  async updatePassword(options, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/password/update\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          old_password: options.oldPassword,\n          new_password: options.newPassword\n        })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordConfirmationMismatch, _known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordRequirementsNotMet]\n    );\n    if (res.status === \"error\") {\n      return res.error;\n    }\n  }\n  async setPassword(options, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/password/set\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(options)\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordRequirementsNotMet]\n    );\n    if (res.status === \"error\") {\n      return res.error;\n    }\n  }\n  async verifyPasswordResetCode(code) {\n    const res = await this.resetPassword({ code, onlyVerifyCode: true });\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    } else {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(void 0);\n    }\n  }\n  async verifyEmail(code) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/contact-channels/verify\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code\n        })\n      },\n      null,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    } else {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(void 0);\n    }\n  }\n  async initiatePasskeyRegistration(options, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/passkey/initiate-passkey-registration\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(options)\n      },\n      session,\n      []\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await res.data.json());\n  }\n  async registerPasskey(options, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/passkey/register\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(options)\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasskeyRegistrationFailed]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(void 0);\n  }\n  async initiatePasskeyAuthentication(options, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/passkey/initiate-passkey-authentication\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(options)\n      },\n      session,\n      []\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await res.data.json());\n  }\n  async sendTeamInvitation(options) {\n    await this.sendClientRequest(\n      \"/team-invitations/send-code\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: options.email,\n          team_id: options.teamId,\n          callback_url: options.callbackUrl\n        })\n      },\n      options.session\n    );\n  }\n  async acceptTeamInvitation(options) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      options.type === \"check\" ? \"/team-invitations/accept/check-code\" : options.type === \"details\" ? \"/team-invitations/accept/details\" : \"/team-invitations/accept\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code: options.code\n        })\n      },\n      options.session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    } else {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(await res.data.json());\n    }\n  }\n  async totpMfa(attemptCode, totp, session) {\n    const res = await this.sendClientRequest(\"/auth/mfa/sign-in\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: attemptCode,\n        type: \"totp\",\n        totp\n      })\n    }, session);\n    const result = await res.json();\n    return {\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token,\n      newUser: result.is_new_user\n    };\n  }\n  async signInWithCredential(email, password, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/password/sign-in\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.EmailPasswordMismatch]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    const result = await res.data.json();\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token\n    });\n  }\n  async signUpWithCredential(email, password, emailVerificationRedirectUrl, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/password/sign-up\",\n      {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password,\n          verification_callback_url: emailVerificationRedirectUrl\n        })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.UserWithEmailAlreadyExists, _known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasswordRequirementsNotMet]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    const result = await res.data.json();\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token\n    });\n  }\n  async signUpAnonymously(session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/anonymous/sign-up\",\n      {\n        method: \"POST\"\n      },\n      session,\n      []\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    const result = await res.data.json();\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token\n    });\n  }\n  async signInWithMagicLink(code, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/otp/sign-in\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          code\n        })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    const result = await res.data.json();\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token,\n      newUser: result.is_new_user\n    });\n  }\n  async signInWithMfa(totp, code, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/mfa/sign-in\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type: \"totp\",\n          totp,\n          code\n        })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.VerificationCodeError]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    const result = await res.data.json();\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token,\n      newUser: result.is_new_user\n    });\n  }\n  async signInWithPasskey(body, session) {\n    const res = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/passkey/sign-in\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.PasskeyAuthenticationFailed]\n    );\n    if (res.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(res.error);\n    }\n    const result = await res.data.json();\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok({\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token\n    });\n  }\n  async getOAuthUrl(options) {\n    const updatedRedirectUrl = new URL(options.redirectUrl);\n    for (const key of [\"code\", \"state\"]) {\n      if (updatedRedirectUrl.searchParams.has(key)) {\n        console.warn(\"Redirect URL already contains \" + key + \" parameter, removing it as it will be overwritten by the OAuth callback\");\n      }\n      updatedRedirectUrl.searchParams.delete(key);\n    }\n    if (!(\"publishableClientKey\" in this.options)) {\n      throw new Error(\"Admin session token is currently not supported for OAuth\");\n    }\n    const url = new URL(this.getApiUrl() + \"/auth/oauth/authorize/\" + options.provider.toLowerCase());\n    url.searchParams.set(\"client_id\", this.projectId);\n    url.searchParams.set(\"client_secret\", this.options.publishableClientKey);\n    url.searchParams.set(\"redirect_uri\", updatedRedirectUrl.toString());\n    url.searchParams.set(\"scope\", \"legacy\");\n    url.searchParams.set(\"state\", options.state);\n    url.searchParams.set(\"grant_type\", \"authorization_code\");\n    url.searchParams.set(\"code_challenge\", options.codeChallenge);\n    url.searchParams.set(\"code_challenge_method\", \"S256\");\n    url.searchParams.set(\"response_type\", \"code\");\n    url.searchParams.set(\"type\", options.type);\n    url.searchParams.set(\"error_redirect_url\", options.errorRedirectUrl);\n    const tokens = await options.session.getOrFetchLikelyValidTokens(2e4);\n    if (tokens) {\n      url.searchParams.set(\"token\", tokens.accessToken.token);\n    }\n    if (options.afterCallbackRedirectUrl) {\n      url.searchParams.set(\"after_callback_redirect_url\", options.afterCallbackRedirectUrl);\n    }\n    if (options.providerScope) {\n      url.searchParams.set(\"provider_scope\", options.providerScope);\n    }\n    return url.toString();\n  }\n  async callOAuthCallback(options) {\n    if (!(\"publishableClientKey\" in this.options)) {\n      throw new Error(\"Admin session token is currently not supported for OAuth\");\n    }\n    const as = {\n      issuer: this.options.getBaseUrl(),\n      algorithm: \"oauth2\",\n      token_endpoint: this.getApiUrl() + \"/auth/oauth/token\"\n    };\n    const client = {\n      client_id: this.projectId,\n      client_secret: this.options.publishableClientKey,\n      token_endpoint_auth_method: \"client_secret_post\"\n    };\n    const params = await this._networkRetryException(\n      async () => oauth4webapi__WEBPACK_IMPORTED_MODULE_11__.validateAuthResponse(as, client, options.oauthParams, options.state)\n    );\n    if (oauth4webapi__WEBPACK_IMPORTED_MODULE_11__.isOAuth2Error(params)) {\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Error validating outer OAuth response\", { params });\n    }\n    const response = await oauth4webapi__WEBPACK_IMPORTED_MODULE_11__.authorizationCodeGrantRequest(\n      as,\n      client,\n      params,\n      options.redirectUri,\n      options.codeVerifier\n    );\n    const result = await oauth4webapi__WEBPACK_IMPORTED_MODULE_11__.processAuthorizationCodeOAuth2Response(as, client, response);\n    if (oauth4webapi__WEBPACK_IMPORTED_MODULE_11__.isOAuth2Error(result)) {\n      if (\"code\" in result && result.code === \"MULTI_FACTOR_AUTHENTICATION_REQUIRED\") {\n        throw new _known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.MultiFactorAuthenticationRequired(result.details.attempt_code);\n      }\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Outer OAuth error during authorization code response\", { result });\n    }\n    return {\n      newUser: result.is_new_user,\n      afterCallbackRedirectUrl: result.after_callback_redirect_url,\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.throwErr)(\"Refresh token not found in outer OAuth response\")\n    };\n  }\n  async signOut(session) {\n    const tokenObj = await session.getOrFetchLikelyValidTokens(2e4);\n    if (tokenObj) {\n      const resOrError = await this.sendClientRequestAndCatchKnownError(\n        \"/auth/sessions/current\",\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({})\n        },\n        session,\n        [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.RefreshTokenError]\n      );\n      if (resOrError.status === \"error\") {\n        if (_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.RefreshTokenError.isInstance(resOrError.error)) {\n        } else {\n          throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Unexpected error\", { error: resOrError.error });\n        }\n      } else {\n      }\n    }\n    session.markInvalid();\n  }\n  async getClientUserByToken(session) {\n    const responseOrError = await this.sendClientRequestAndCatchKnownError(\n      \"/users/me\",\n      {},\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.CannotGetOwnUserWithoutUser]\n    );\n    if (responseOrError.status === \"error\") {\n      if (_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.CannotGetOwnUserWithoutUser.isInstance(responseOrError.error)) {\n        return null;\n      } else {\n        throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Unexpected uncaught error\", { cause: responseOrError.error });\n      }\n    }\n    const response = responseOrError.data;\n    const user = await response.json();\n    if (!user) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"User endpoint returned null; this should never happen\");\n    return user;\n  }\n  async listTeamInvitations(options, session) {\n    const response = await this.sendClientRequest(\n      \"/team-invitations?\" + new URLSearchParams({ team_id: options.teamId }),\n      {},\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async revokeTeamInvitation(invitationId, teamId, session) {\n    await this.sendClientRequest(\n      `/team-invitations/${invitationId}?team_id=${teamId}`,\n      { method: \"DELETE\" },\n      session\n    );\n  }\n  async listTeamMemberProfiles(options, session) {\n    const response = await this.sendClientRequest(\n      \"/team-member-profiles?\" + new URLSearchParams((0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__.filterUndefined)({\n        team_id: options.teamId,\n        user_id: options.userId\n      })),\n      {},\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async getTeamMemberProfile(options, session) {\n    const response = await this.sendClientRequest(\n      `/team-member-profiles/${options.teamId}/${options.userId}`,\n      {},\n      session\n    );\n    return await response.json();\n  }\n  async leaveTeam(teamId, session) {\n    await this.sendClientRequest(\n      `/team-memberships/${teamId}/me`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      session\n    );\n  }\n  async updateTeamMemberProfile(options, session) {\n    await this.sendClientRequest(\n      `/team-member-profiles/${options.teamId}/${options.userId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(options.profile)\n      },\n      session\n    );\n  }\n  async updateTeam(options, session) {\n    await this.sendClientRequest(\n      `/teams/${options.teamId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(options.data)\n      },\n      session\n    );\n  }\n  async listCurrentUserTeamPermissions(options, session) {\n    const response = await this.sendClientRequest(\n      `/team-permissions?team_id=${options.teamId}&user_id=me&recursive=${options.recursive}`,\n      {},\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async listCurrentUserProjectPermissions(options, session) {\n    const response = await this.sendClientRequest(\n      `/project-permissions?user_id=me&recursive=${options.recursive}`,\n      {},\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async listCurrentUserTeams(session) {\n    const response = await this.sendClientRequest(\n      \"/teams?user_id=me\",\n      {},\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async getClientProject() {\n    const responseOrError = await this.sendClientRequestAndCatchKnownError(\"/projects/current\", {}, null, [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.ProjectNotFound]);\n    if (responseOrError.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(responseOrError.error);\n    }\n    const response = responseOrError.data;\n    const project = await response.json();\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(project);\n  }\n  async updateClientUser(update, session) {\n    await this.sendClientRequest(\n      \"/users/me\",\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(update)\n      },\n      session\n    );\n  }\n  async listProjects(session) {\n    const response = await this.sendClientRequest(\"/internal/projects\", {}, session);\n    if (!response.ok) {\n      throw new Error(\"Failed to list projects: \" + response.status + \" \" + await response.text());\n    }\n    const json = await response.json();\n    return json.items;\n  }\n  async createProject(project, session) {\n    const fetchResponse = await this.sendClientRequest(\n      \"/internal/projects\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(project)\n      },\n      session\n    );\n    if (!fetchResponse.ok) {\n      throw new Error(\"Failed to create project: \" + fetchResponse.status + \" \" + await fetchResponse.text());\n    }\n    const json = await fetchResponse.json();\n    return json;\n  }\n  async createProviderAccessToken(provider, scope, session) {\n    const response = await this.sendClientRequest(\n      `/connected-accounts/me/${provider}/access-token`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ scope })\n      },\n      session\n    );\n    return await response.json();\n  }\n  async createClientTeam(data, session) {\n    const response = await this.sendClientRequest(\n      \"/teams\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      session\n    );\n    return await response.json();\n  }\n  async deleteTeam(teamId, session) {\n    await this.sendClientRequest(\n      `/teams/${teamId}`,\n      {\n        method: \"DELETE\"\n      },\n      session\n    );\n  }\n  async deleteCurrentUser(session) {\n    await this.sendClientRequest(\n      \"/users/me\",\n      {\n        method: \"DELETE\"\n      },\n      session\n    );\n  }\n  async createClientContactChannel(data, session) {\n    const response = await this.sendClientRequest(\n      \"/contact-channels\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      session\n    );\n    return await response.json();\n  }\n  async updateClientContactChannel(id, data, session) {\n    const response = await this.sendClientRequest(\n      `/contact-channels/me/${id}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      session\n    );\n    return await response.json();\n  }\n  async deleteClientContactChannel(id, session) {\n    await this.sendClientRequest(\n      `/contact-channels/me/${id}`,\n      {\n        method: \"DELETE\"\n      },\n      session\n    );\n  }\n  async deleteSession(sessionId, session) {\n    await this.sendClientRequest(\n      `/auth/sessions/${sessionId}?user_id=me`,\n      {\n        method: \"DELETE\"\n      },\n      session\n    );\n  }\n  async listSessions(session) {\n    const response = await this.sendClientRequest(\n      \"/auth/sessions?user_id=me\",\n      {\n        method: \"GET\"\n      },\n      session\n    );\n    return await response.json();\n  }\n  async listClientContactChannels(session) {\n    const response = await this.sendClientRequest(\n      \"/contact-channels?user_id=me\",\n      {\n        method: \"GET\"\n      },\n      session\n    );\n    const json = await response.json();\n    return json.items;\n  }\n  async sendCurrentUserContactChannelVerificationEmail(contactChannelId, callbackUrl, session) {\n    const responseOrError = await this.sendClientRequestAndCatchKnownError(\n      `/contact-channels/me/${contactChannelId}/send-verification-code`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ callback_url: callbackUrl })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.EmailAlreadyVerified]\n    );\n    if (responseOrError.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(responseOrError.error);\n    }\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(void 0);\n  }\n  async cliLogin(loginCode, refreshToken, session) {\n    const responseOrError = await this.sendClientRequestAndCatchKnownError(\n      \"/auth/cli/complete\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login_code: loginCode,\n          refresh_token: refreshToken\n        })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.SchemaError]\n    );\n    if (responseOrError.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.error(responseOrError.error);\n    }\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_8__.Result.ok(void 0);\n  }\n  async _getApiKeyRequestInfo(options) {\n    if (\"user_id\" in options && \"team_id\" in options) {\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"Cannot specify both user_id and team_id in _getApiKeyRequestInfo\");\n    }\n    return {\n      endpoint: \"team_id\" in options ? \"/team-api-keys\" : \"/user-api-keys\",\n      queryParams: new URLSearchParams((0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__.filterUndefinedOrNull)(options))\n    };\n  }\n  async listProjectApiKeys(options, session, requestType) {\n    const sendRequest = (requestType === \"client\" ? this.sendClientRequest : this.sendServerRequest).bind(this);\n    const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);\n    const response = await sendRequest(\n      `${endpoint}?${queryParams.toString()}`,\n      {\n        method: \"GET\"\n      },\n      session,\n      requestType\n    );\n    const json = await response.json();\n    return json.items;\n  }\n  async createProjectApiKey(data, session, requestType) {\n    const sendRequest = (requestType === \"client\" ? this.sendClientRequest : this.sendServerRequest).bind(this);\n    const { endpoint } = await this._getApiKeyRequestInfo(data);\n    const response = await sendRequest(\n      `${endpoint}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      session,\n      requestType\n    );\n    return await response.json();\n  }\n  async getProjectApiKey(options, keyId, session, requestType) {\n    const sendRequest = (requestType === \"client\" ? this.sendClientRequest : this.sendServerRequest).bind(this);\n    const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);\n    const response = await sendRequest(\n      `${endpoint}/${keyId}?${queryParams.toString()}`,\n      {\n        method: \"GET\"\n      },\n      session,\n      requestType\n    );\n    return await response.json();\n  }\n  async updateProjectApiKey(options, keyId, data, session, requestType) {\n    const sendRequest = (requestType === \"client\" ? this.sendClientRequest : this.sendServerRequest).bind(this);\n    const { endpoint, queryParams } = await this._getApiKeyRequestInfo(options);\n    const response = await sendRequest(\n      `${endpoint}/${keyId}?${queryParams.toString()}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      session,\n      requestType\n    );\n    return await response.json();\n  }\n  async checkProjectApiKey(type, apiKey, session, requestType) {\n    const sendRequest = (requestType === \"client\" ? this.sendClientRequestAndCatchKnownError : this.sendServerRequestAndCatchKnownError).bind(this);\n    const result = await sendRequest(\n      `/${type}-api-keys/check`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ api_key: apiKey })\n      },\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.ApiKeyNotValid]\n    );\n    if (result.status === \"error\") {\n      return null;\n    }\n    return await result.data.json();\n  }\n  async listNotificationCategories(session) {\n    const response = await this.sendClientRequest(\n      `/emails/notification-preference/me`,\n      {},\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async setNotificationsEnabled(notificationCategoryId, enabled, session) {\n    await this.sendClientRequest(\n      `/emails/notification-preference/me/${notificationCategoryId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          enabled\n        })\n      },\n      session\n    );\n  }\n  async getOAuthProvider(userId, providerId, session) {\n    const response = await this.sendClientRequest(\n      `/oauth-providers/${userId}/${providerId}`,\n      {\n        method: \"GET\"\n      },\n      session\n    );\n    return await response.json();\n  }\n  async updateOAuthProvider(userId, providerId, data, session) {\n    const response = await this.sendClientRequest(\n      `/oauth-providers/${userId}/${providerId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      session\n    );\n    return await response.json();\n  }\n  async listOAuthProviders(options = {}, session) {\n    const queryParams = new URLSearchParams((0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_6__.filterUndefined)(options));\n    const response = await this.sendClientRequest(\n      `/oauth-providers${queryParams.toString() ? `?${queryParams.toString()}` : \"\"}`,\n      {\n        method: \"GET\"\n      },\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async deleteOAuthProvider(userId, providerId, session) {\n    const response = await this.sendClientRequest(\n      `/oauth-providers/${userId}/${providerId}`,\n      {\n        method: \"DELETE\"\n      },\n      session\n    );\n    return await response.json();\n  }\n  async getItem(options, session) {\n    let customerType;\n    let customerId;\n    if (\"userId\" in options) {\n      customerType = \"user\";\n      customerId = options.userId;\n    } else if (\"teamId\" in options) {\n      customerType = \"team\";\n      customerId = options.teamId;\n    } else if (\"customCustomerId\" in options) {\n      customerType = \"custom\";\n      customerId = options.customCustomerId;\n    } else {\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_3__.StackAssertionError(\"getItem requires one of userId, teamId, or customCustomerId\");\n    }\n    const response = await this.sendClientRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_10__.urlString)`/payments/items/${customerType}/${customerId}/${options.itemId}`,\n      {},\n      session\n    );\n    return await response.json();\n  }\n  async createCheckoutUrl(customer_type, customer_id, offerIdOrInline, session) {\n    const offerBody = typeof offerIdOrInline === \"string\" ? { offer_id: offerIdOrInline } : { inline_offer: offerIdOrInline };\n    const response = await this.sendClientRequest(\n      \"/payments/purchases/create-purchase-url\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ customer_type, customer_id, ...offerBody })\n      },\n      session\n    );\n    const { url } = await response.json();\n    return url;\n  }\n};\n\n//# sourceMappingURL=client-interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackServerInterface: () => (/* binding */ StackServerInterface)\n/* harmony export */ });\n/* harmony import */ var _helpers_vault_client_side_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/vault/client-side.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/helpers/vault/client-side.js\");\n/* harmony import */ var _known_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../known-errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/known-errors.js\");\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/objects.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n/* harmony import */ var _utils_results_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/results.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var _utils_urls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/urls.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js\");\n/* harmony import */ var _client_interface_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client-interface.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/client-interface.js\");\n// src/interface/server-interface.ts\n\n\n\n\n\n\n\nvar StackServerInterface = class extends _client_interface_js__WEBPACK_IMPORTED_MODULE_6__.StackClientInterface {\n  constructor(options) {\n    super(options);\n    this.options = options;\n  }\n  async sendServerRequest(path, options, session, requestType = \"server\") {\n    return await this.sendClientRequest(\n      path,\n      {\n        ...options,\n        headers: {\n          \"x-stack-secret-server-key\": \"secretServerKey\" in this.options ? this.options.secretServerKey : \"\",\n          ...options.headers\n        }\n      },\n      session,\n      requestType\n    );\n  }\n  async sendServerRequestAndCatchKnownError(path, requestOptions, tokenStoreOrNull, errorsToCatch) {\n    try {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_4__.Result.ok(await this.sendServerRequest(path, requestOptions, tokenStoreOrNull));\n    } catch (e) {\n      for (const errorType of errorsToCatch) {\n        if (errorType.isInstance(e)) {\n          return _utils_results_js__WEBPACK_IMPORTED_MODULE_4__.Result.error(e);\n        }\n      }\n      throw e;\n    }\n  }\n  async createServerUser(data) {\n    const response = await this.sendServerRequest(\n      \"/users\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async getServerUserByToken(session) {\n    const responseOrError = await this.sendServerRequestAndCatchKnownError(\n      \"/users/me\",\n      {},\n      session,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CannotGetOwnUserWithoutUser]\n    );\n    if (responseOrError.status === \"error\") {\n      if (_known_errors_js__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CannotGetOwnUserWithoutUser.isInstance(responseOrError.error)) {\n        return null;\n      } else {\n        throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Unexpected uncaught error\", { cause: responseOrError.error });\n      }\n    }\n    const response = responseOrError.data;\n    const user = await response.json();\n    if (!user) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"User endpoint returned null; this should never happen\");\n    return user;\n  }\n  async getServerUserById(userId) {\n    const responseOrError = await this.sendServerRequestAndCatchKnownError(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/users/${userId}`,\n      {},\n      null,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.UserNotFound]\n    );\n    if (responseOrError.status === \"error\") {\n      return _utils_results_js__WEBPACK_IMPORTED_MODULE_4__.Result.error(responseOrError.error);\n    }\n    const user = await responseOrError.data.json();\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_4__.Result.ok(user);\n  }\n  async listServerTeamInvitations(options) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-invitations?team_id=${options.teamId}`,\n      {},\n      null\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async revokeServerTeamInvitation(invitationId, teamId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-invitations/${invitationId}?team_id=${teamId}`,\n      { method: \"DELETE\" },\n      null\n    );\n  }\n  async listServerTeamMemberProfiles(options) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-member-profiles?team_id=${options.teamId}`,\n      {},\n      null\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async getServerTeamMemberProfile(options) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-member-profiles/${options.teamId}/${options.userId}`,\n      {},\n      null\n    );\n    return await response.json();\n  }\n  async listServerTeamPermissions(options, session) {\n    const response = await this.sendServerRequest(\n      `/team-permissions?${new URLSearchParams((0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_3__.filterUndefined)({\n        user_id: options.userId,\n        team_id: options.teamId,\n        recursive: options.recursive.toString()\n      }))}`,\n      {},\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async listServerProjectPermissions(options, session) {\n    const response = await this.sendServerRequest(\n      `/project-permissions?${new URLSearchParams((0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_3__.filterUndefined)({\n        user_id: options.userId,\n        recursive: options.recursive.toString()\n      }))}`,\n      {},\n      session\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async listServerUsers(options) {\n    const searchParams = new URLSearchParams((0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_3__.filterUndefined)({\n      cursor: options.cursor,\n      limit: options.limit?.toString(),\n      desc: options.desc?.toString(),\n      ...options.orderBy ? {\n        order_by: {\n          signedUpAt: \"signed_up_at\"\n        }[options.orderBy]\n      } : {},\n      ...options.query ? {\n        query: options.query\n      } : {},\n      ...options.includeAnonymous ? {\n        include_anonymous: \"true\"\n      } : {}\n    }));\n    const response = await this.sendServerRequest(\"/users?\" + searchParams.toString(), {}, null);\n    return await response.json();\n  }\n  async listServerTeams(options) {\n    const response = await this.sendServerRequest(\n      `/teams?${new URLSearchParams((0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_3__.filterUndefined)({\n        user_id: options?.userId\n      }))}`,\n      {},\n      null\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async getServerTeam(teamId) {\n    const response = await this.sendServerRequest(\n      `/teams/${teamId}`,\n      {},\n      null\n    );\n    return await response.json();\n  }\n  async listServerTeamUsers(teamId) {\n    const response = await this.sendServerRequest(`/users?team_id=${teamId}`, {}, null);\n    const result = await response.json();\n    return result.items;\n  }\n  /* when passing a session, the user will be added to the team */\n  async createServerTeam(data) {\n    const response = await this.sendServerRequest(\n      \"/teams\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async updateServerTeam(teamId, data) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/teams/${teamId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async deleteServerTeam(teamId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/teams/${teamId}`,\n      { method: \"DELETE\" },\n      null\n    );\n  }\n  async addServerUserToTeam(options) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-memberships/${options.teamId}/${options.userId}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n    return await response.json();\n  }\n  async removeServerUserFromTeam(options) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-memberships/${options.teamId}/${options.userId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n  }\n  async updateServerUser(userId, update) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/users/${userId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(update)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async createServerProviderAccessToken(userId, provider, scope) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/connected-accounts/${userId}/${provider}/access-token`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ scope })\n      },\n      null\n    );\n    return await response.json();\n  }\n  async createServerUserSession(userId, expiresInMillis, isImpersonation) {\n    const response = await this.sendServerRequest(\n      \"/auth/sessions\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: userId,\n          expires_in_millis: expiresInMillis,\n          is_impersonation: isImpersonation\n        })\n      },\n      null\n    );\n    const result = await response.json();\n    return {\n      accessToken: result.access_token,\n      refreshToken: result.refresh_token\n    };\n  }\n  async leaveServerTeam(options) {\n    await this.sendClientRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-memberships/${options.teamId}/${options.userId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n  }\n  async updateServerTeamMemberProfile(options) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-member-profiles/${options.teamId}/${options.userId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(options.profile)\n      },\n      null\n    );\n  }\n  async grantServerTeamUserPermission(teamId, userId, permissionId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-permissions/${teamId}/${userId}/${permissionId}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n  }\n  async grantServerProjectPermission(userId, permissionId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/project-permissions/${userId}/${permissionId}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n  }\n  async revokeServerTeamUserPermission(teamId, userId, permissionId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/team-permissions/${teamId}/${userId}/${permissionId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n  }\n  async revokeServerProjectPermission(userId, permissionId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/project-permissions/${userId}/${permissionId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n  }\n  async deleteServerUser(userId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/users/${userId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      },\n      null\n    );\n  }\n  async createServerContactChannel(data) {\n    const response = await this.sendServerRequest(\n      \"/contact-channels\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async updateServerContactChannel(userId, contactChannelId, data) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/contact-channels/${userId}/${contactChannelId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async deleteServerContactChannel(userId, contactChannelId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/contact-channels/${userId}/${contactChannelId}`,\n      {\n        method: \"DELETE\"\n      },\n      null\n    );\n  }\n  async listServerContactChannels(userId) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/contact-channels?user_id=${userId}`,\n      {\n        method: \"GET\"\n      },\n      null\n    );\n    const json = await response.json();\n    return json.items;\n  }\n  async listServerNotificationCategories(userId) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/emails/notification-preference/${userId}`,\n      {\n        method: \"GET\"\n      },\n      null\n    );\n    const json = await response.json();\n    return json.items;\n  }\n  async setServerNotificationsEnabled(userId, notificationCategoryId, enabled) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/emails/notification-preference/${userId}/${notificationCategoryId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          enabled\n        })\n      },\n      null\n    );\n  }\n  async sendServerContactChannelVerificationEmail(userId, contactChannelId, callbackUrl) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/contact-channels/${userId}/${contactChannelId}/send-verification-code`,\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({ callback_url: callbackUrl })\n      },\n      null\n    );\n  }\n  async listServerSessions(userId) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/auth/sessions?user_id=${userId}`,\n      {\n        method: \"GET\"\n      },\n      null\n    );\n    return await response.json();\n  }\n  async deleteServerSession(sessionId) {\n    await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/auth/sessions/${sessionId}`,\n      {\n        method: \"DELETE\"\n      },\n      null\n    );\n  }\n  async sendServerTeamInvitation(options) {\n    await this.sendServerRequest(\n      \"/team-invitations/send-code\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: options.email,\n          team_id: options.teamId,\n          callback_url: options.callbackUrl\n        })\n      },\n      null\n    );\n  }\n  async updatePassword(options) {\n    const res = await this.sendServerRequestAndCatchKnownError(\n      \"/auth/password/update\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          old_password: options.oldPassword,\n          new_password: options.newPassword\n        })\n      },\n      null,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasswordConfirmationMismatch, _known_errors_js__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasswordRequirementsNotMet]\n    );\n    if (res.status === \"error\") {\n      return res.error;\n    }\n  }\n  // OAuth Providers CRUD operations\n  async createServerOAuthProvider(data) {\n    const response = await this.sendServerRequest(\n      \"/oauth-providers\",\n      {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async listServerOAuthProviders(options = {}) {\n    const queryParams = new URLSearchParams((0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_3__.filterUndefined)(options));\n    const response = await this.sendServerRequest(\n      `/oauth-providers${queryParams.toString() ? `?${queryParams.toString()}` : \"\"}`,\n      {\n        method: \"GET\"\n      },\n      null\n    );\n    const result = await response.json();\n    return result.items;\n  }\n  async updateServerOAuthProvider(userId, providerId, data) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/oauth-providers/${userId}/${providerId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      },\n      null\n    );\n    return await response.json();\n  }\n  async deleteServerOAuthProvider(userId, providerId) {\n    const response = await this.sendServerRequest(\n      (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_5__.urlString)`/oauth-providers/${userId}/${providerId}`,\n      {\n        method: \"DELETE\"\n      },\n      null\n    );\n    return await response.json();\n  }\n  async sendEmail(options) {\n    const res = await this.sendServerRequest(\n      \"/emails/send-email\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_ids: options.userIds,\n          all_users: options.allUsers,\n          theme_id: options.themeId,\n          html: options.html,\n          subject: options.subject,\n          notification_category_name: options.notificationCategoryName,\n          template_id: options.templateId,\n          variables: options.variables,\n          draft_id: options.draftId\n        })\n      },\n      null\n    );\n    return _utils_results_js__WEBPACK_IMPORTED_MODULE_4__.Result.ok(void 0);\n  }\n  async updateItemQuantity(options, data) {\n    let customerType;\n    let customerId;\n    const itemId = options.itemId;\n    if (\"userId\" in options) {\n      customerType = \"user\";\n      customerId = options.userId;\n    } else if (\"teamId\" in options) {\n      customerType = \"team\";\n      customerId = options.teamId;\n    } else if (\"customCustomerId\" in options) {\n      customerType = \"custom\";\n      customerId = options.customCustomerId;\n    } else {\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"updateItemQuantity requires one of userId, teamId, or customCustomerId\");\n    }\n    const queryParams = new URLSearchParams({ allow_negative: (data.allow_negative ?? false).toString() });\n    await this.sendServerRequest(\n      `/payments/items/${customerType}/${customerId}/${itemId}/update-quantity?${queryParams.toString()}`,\n      {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({ delta: data.delta, expires_at: data.expires_at, description: data.description })\n      },\n      null\n    );\n  }\n  async getDataVaultStoreValue(secret, storeId, key) {\n    const hashedKey = await (0,_helpers_vault_client_side_js__WEBPACK_IMPORTED_MODULE_0__.hashKey)(secret, key);\n    const response = await this.sendServerRequestAndCatchKnownError(\n      `/data-vault/stores/${storeId}/get`,\n      {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({ hashed_key: hashedKey })\n      },\n      null,\n      [_known_errors_js__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.DataVaultStoreHashedKeyDoesNotExist]\n    );\n    if (response.status === \"error\") {\n      if (_known_errors_js__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.DataVaultStoreHashedKeyDoesNotExist.isInstance(response.error)) {\n        return null;\n      } else {\n        throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Unexpected uncaught error\", { cause: response.error });\n      }\n    }\n    const json = await response.data.json();\n    const encryptedValue = json.encrypted_value;\n    if (typeof encryptedValue !== \"string\") throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"encrypted_value is not a string\", { type: typeof encryptedValue });\n    return await (0,_helpers_vault_client_side_js__WEBPACK_IMPORTED_MODULE_0__.decryptValue)(secret, key, encryptedValue);\n  }\n  async setDataVaultStoreValue(secret, storeId, key, value) {\n    const hashedKey = await (0,_helpers_vault_client_side_js__WEBPACK_IMPORTED_MODULE_0__.hashKey)(secret, key);\n    const encryptedValue = await (0,_helpers_vault_client_side_js__WEBPACK_IMPORTED_MODULE_0__.encryptValue)(secret, key, value);\n    await this.sendServerRequest(\n      `/data-vault/stores/${storeId}/set`,\n      {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({ hashed_key: hashedKey, encrypted_value: encryptedValue })\n      },\n      null\n    );\n  }\n};\n\n//# sourceMappingURL=server-interface.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/interface/server-interface.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/known-errors.js":
/*!************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/known-errors.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KnownError: () => (/* binding */ KnownError),\n/* harmony export */   KnownErrors: () => (/* binding */ KnownErrors)\n/* harmony export */ });\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _utils_functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/functions.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/functions.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n// src/known-errors.tsx\n\n\n\nvar KnownError = class extends _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.StatusError {\n  constructor(statusCode, humanReadableMessage, details) {\n    super(\n      statusCode,\n      humanReadableMessage\n    );\n    this.statusCode = statusCode;\n    this.humanReadableMessage = humanReadableMessage;\n    this.details = details;\n    this.__stackKnownErrorBrand = \"stack-known-error-brand-sentinel\";\n    this.name = \"KnownError\";\n  }\n  static isKnownError(error) {\n    return typeof error === \"object\" && error !== null && \"__stackKnownErrorBrand\" in error && error.__stackKnownErrorBrand === \"stack-known-error-brand-sentinel\";\n  }\n  getBody() {\n    return new TextEncoder().encode(JSON.stringify(this.toDescriptiveJson(), void 0, 2));\n  }\n  getHeaders() {\n    return {\n      \"Content-Type\": [\"application/json; charset=utf-8\"],\n      \"X-Stack-Known-Error\": [this.errorCode]\n    };\n  }\n  toDescriptiveJson() {\n    return {\n      code: this.errorCode,\n      ...this.details ? { details: this.details } : {},\n      error: this.humanReadableMessage\n    };\n  }\n  get errorCode() {\n    return this.constructor.errorCode ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Can't find error code for this KnownError. Is its constructor a KnownErrorConstructor? ${this}`);\n  }\n  static constructorArgsFromJson(json) {\n    return [\n      400,\n      json.message,\n      json\n    ];\n  }\n  static fromJson(json) {\n    for (const [_, KnownErrorType] of Object.entries(KnownErrors)) {\n      if (json.code === KnownErrorType.prototype.errorCode) {\n        const constructorArgs = KnownErrorType.constructorArgsFromJson(json);\n        return new KnownErrorType(\n          ...constructorArgs\n        );\n      }\n    }\n    throw new Error(`Unknown KnownError code. You may need to update your version of Stack to see more detailed information. ${json.code}: ${json.message}`);\n  }\n};\nvar knownErrorConstructorErrorCodeSentinel = Symbol(\"knownErrorConstructorErrorCodeSentinel\");\nfunction createKnownErrorConstructor(SuperClass, errorCode, create, constructorArgsFromJson) {\n  const createFn = create === \"inherit\" ? _utils_functions_js__WEBPACK_IMPORTED_MODULE_1__.identityArgs : create;\n  const constructorArgsFromJsonFn = constructorArgsFromJson === \"inherit\" ? SuperClass.constructorArgsFromJson : constructorArgsFromJson;\n  class KnownErrorImpl extends SuperClass {\n    constructor(...args) {\n      super(...createFn(...args));\n      this.name = `KnownError<${errorCode}>`;\n      this.constructorArgs = args;\n    }\n    static constructorArgsFromJson(json) {\n      return constructorArgsFromJsonFn(json.details);\n    }\n    static isInstance(error) {\n      if (!KnownError.isKnownError(error)) return false;\n      let current = error;\n      while (true) {\n        current = Object.getPrototypeOf(current);\n        if (!current) break;\n        if (\"errorCode\" in current.constructor && current.constructor.errorCode === errorCode) return true;\n      }\n      return false;\n    }\n  }\n  KnownErrorImpl.errorCode = errorCode;\n  ;\n  return KnownErrorImpl;\n}\nvar UnsupportedError = createKnownErrorConstructor(\n  KnownError,\n  \"UNSUPPORTED_ERROR\",\n  (originalErrorCode) => [\n    500,\n    `An error occurred that is not currently supported (possibly because it was added in a version of Stack that is newer than this client). The original unsupported error code was: ${originalErrorCode}`,\n    {\n      originalErrorCode\n    }\n  ],\n  (json) => [\n    json?.originalErrorCode ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"originalErrorCode not found in UnsupportedError details\")\n  ]\n);\nvar BodyParsingError = createKnownErrorConstructor(\n  KnownError,\n  \"BODY_PARSING_ERROR\",\n  (message) => [\n    400,\n    message\n  ],\n  (json) => [json.message]\n);\nvar SchemaError = createKnownErrorConstructor(\n  KnownError,\n  \"SCHEMA_ERROR\",\n  (message) => [\n    400,\n    message || (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"SchemaError requires a message\"),\n    {\n      message\n    }\n  ],\n  (json) => [json.message]\n);\nvar AllOverloadsFailed = createKnownErrorConstructor(\n  KnownError,\n  \"ALL_OVERLOADS_FAILED\",\n  (overloadErrors) => [\n    400,\n    (0,_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__.deindent)`\n      This endpoint has multiple overloads, but they all failed to process the request.\n\n        ${overloadErrors.map((e, i) => (0,_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__.deindent)`\n          Overload ${i + 1}: ${JSON.stringify(e, void 0, 2)}\n        `).join(\"\\n\\n\")}\n    `,\n    {\n      overload_errors: overloadErrors\n    }\n  ],\n  (json) => [\n    json?.overload_errors ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"overload_errors not found in AllOverloadsFailed details\")\n  ]\n);\nvar ProjectAuthenticationError = createKnownErrorConstructor(\n  KnownError,\n  \"PROJECT_AUTHENTICATION_ERROR\",\n  \"inherit\",\n  \"inherit\"\n);\nvar InvalidProjectAuthentication = createKnownErrorConstructor(\n  ProjectAuthenticationError,\n  \"INVALID_PROJECT_AUTHENTICATION\",\n  \"inherit\",\n  \"inherit\"\n);\nvar ProjectKeyWithoutAccessType = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"PROJECT_KEY_WITHOUT_ACCESS_TYPE\",\n  () => [\n    400,\n    \"Either an API key or an admin access token was provided, but the x-stack-access-type header is missing. Set it to 'client', 'server', or 'admin' as appropriate.\"\n  ],\n  () => []\n);\nvar InvalidAccessType = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"INVALID_ACCESS_TYPE\",\n  (accessType) => [\n    400,\n    `The x-stack-access-type header must be 'client', 'server', or 'admin', but was '${accessType}'.`\n  ],\n  (json) => [\n    json?.accessType ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"accessType not found in InvalidAccessType details\")\n  ]\n);\nvar AccessTypeWithoutProjectId = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"ACCESS_TYPE_WITHOUT_PROJECT_ID\",\n  (accessType) => [\n    400,\n    (0,_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__.deindent)`\n      The x-stack-access-type header was '${accessType}', but the x-stack-project-id header was not provided.\n      \n      For more information, see the docs on REST API authentication: https://docs.stack-auth.com/rest-api/overview#authentication\n    `,\n    {\n      request_type: accessType\n    }\n  ],\n  (json) => [json.request_type]\n);\nvar AccessTypeRequired = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"ACCESS_TYPE_REQUIRED\",\n  () => [\n    400,\n    (0,_utils_strings_js__WEBPACK_IMPORTED_MODULE_2__.deindent)`\n      You must specify an access level for this Stack project. Make sure project API keys are provided (eg. x-stack-publishable-client-key) and you set the x-stack-access-type header to 'client', 'server', or 'admin'.\n      \n      For more information, see the docs on REST API authentication: https://docs.stack-auth.com/rest-api/overview#authentication\n    `\n  ],\n  () => []\n);\nvar InsufficientAccessType = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"INSUFFICIENT_ACCESS_TYPE\",\n  (actualAccessType, allowedAccessTypes) => [\n    401,\n    `The x-stack-access-type header must be ${allowedAccessTypes.map((s) => `'${s}'`).join(\" or \")}, but was '${actualAccessType}'.`,\n    {\n      actual_access_type: actualAccessType,\n      allowed_access_types: allowedAccessTypes\n    }\n  ],\n  (json) => [\n    json.actual_access_type,\n    json.allowed_access_types\n  ]\n);\nvar InvalidPublishableClientKey = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"INVALID_PUBLISHABLE_CLIENT_KEY\",\n  (projectId) => [\n    401,\n    `The publishable key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n      project_id: projectId\n    }\n  ],\n  (json) => [json.project_id]\n);\nvar InvalidSecretServerKey = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"INVALID_SECRET_SERVER_KEY\",\n  (projectId) => [\n    401,\n    `The secret server key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n      project_id: projectId\n    }\n  ],\n  (json) => [json.project_id]\n);\nvar InvalidSuperSecretAdminKey = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"INVALID_SUPER_SECRET_ADMIN_KEY\",\n  (projectId) => [\n    401,\n    `The super secret admin key is not valid for the project ${JSON.stringify(projectId)}. Does the project and/or the key exist?`,\n    {\n      project_id: projectId\n    }\n  ],\n  (json) => [json.project_id]\n);\nvar InvalidAdminAccessToken = createKnownErrorConstructor(\n  InvalidProjectAuthentication,\n  \"INVALID_ADMIN_ACCESS_TOKEN\",\n  \"inherit\",\n  \"inherit\"\n);\nvar UnparsableAdminAccessToken = createKnownErrorConstructor(\n  InvalidAdminAccessToken,\n  \"UNPARSABLE_ADMIN_ACCESS_TOKEN\",\n  () => [\n    401,\n    \"Admin access token is not parsable.\"\n  ],\n  () => []\n);\nvar AdminAccessTokenExpired = createKnownErrorConstructor(\n  InvalidAdminAccessToken,\n  \"ADMIN_ACCESS_TOKEN_EXPIRED\",\n  (expiredAt) => [\n    401,\n    `Admin access token has expired. Please refresh it and try again.${expiredAt ? ` (The access token expired at ${expiredAt.toISOString()}.)` : \"\"}`,\n    { expired_at_millis: expiredAt?.getTime() ?? null }\n  ],\n  (json) => [json.expired_at_millis ?? void 0]\n);\nvar InvalidProjectForAdminAccessToken = createKnownErrorConstructor(\n  InvalidAdminAccessToken,\n  \"INVALID_PROJECT_FOR_ADMIN_ACCESS_TOKEN\",\n  () => [\n    401,\n    \"Admin access tokens must be created on the internal project.\"\n  ],\n  () => []\n);\nvar AdminAccessTokenIsNotAdmin = createKnownErrorConstructor(\n  InvalidAdminAccessToken,\n  \"ADMIN_ACCESS_TOKEN_IS_NOT_ADMIN\",\n  () => [\n    401,\n    \"Admin access token does not have the required permissions to access this project.\"\n  ],\n  () => []\n);\nvar ProjectAuthenticationRequired = createKnownErrorConstructor(\n  ProjectAuthenticationError,\n  \"PROJECT_AUTHENTICATION_REQUIRED\",\n  \"inherit\",\n  \"inherit\"\n);\nvar ClientAuthenticationRequired = createKnownErrorConstructor(\n  ProjectAuthenticationRequired,\n  \"CLIENT_AUTHENTICATION_REQUIRED\",\n  () => [\n    401,\n    \"The publishable client key must be provided.\"\n  ],\n  () => []\n);\nvar ServerAuthenticationRequired = createKnownErrorConstructor(\n  ProjectAuthenticationRequired,\n  \"SERVER_AUTHENTICATION_REQUIRED\",\n  () => [\n    401,\n    \"The secret server key must be provided.\"\n  ],\n  () => []\n);\nvar ClientOrServerAuthenticationRequired = createKnownErrorConstructor(\n  ProjectAuthenticationRequired,\n  \"CLIENT_OR_SERVER_AUTHENTICATION_REQUIRED\",\n  () => [\n    401,\n    \"Either the publishable client key or the secret server key must be provided.\"\n  ],\n  () => []\n);\nvar ClientOrAdminAuthenticationRequired = createKnownErrorConstructor(\n  ProjectAuthenticationRequired,\n  \"CLIENT_OR_ADMIN_AUTHENTICATION_REQUIRED\",\n  () => [\n    401,\n    \"Either the publishable client key or the super secret admin key must be provided.\"\n  ],\n  () => []\n);\nvar ClientOrServerOrAdminAuthenticationRequired = createKnownErrorConstructor(\n  ProjectAuthenticationRequired,\n  \"CLIENT_OR_SERVER_OR_ADMIN_AUTHENTICATION_REQUIRED\",\n  () => [\n    401,\n    \"Either the publishable client key, the secret server key, or the super secret admin key must be provided.\"\n  ],\n  () => []\n);\nvar AdminAuthenticationRequired = createKnownErrorConstructor(\n  ProjectAuthenticationRequired,\n  \"ADMIN_AUTHENTICATION_REQUIRED\",\n  () => [\n    401,\n    \"The super secret admin key must be provided.\"\n  ],\n  () => []\n);\nvar ExpectedInternalProject = createKnownErrorConstructor(\n  ProjectAuthenticationError,\n  \"EXPECTED_INTERNAL_PROJECT\",\n  () => [\n    401,\n    \"The project ID is expected to be internal.\"\n  ],\n  () => []\n);\nvar SessionAuthenticationError = createKnownErrorConstructor(\n  KnownError,\n  \"SESSION_AUTHENTICATION_ERROR\",\n  \"inherit\",\n  \"inherit\"\n);\nvar InvalidSessionAuthentication = createKnownErrorConstructor(\n  SessionAuthenticationError,\n  \"INVALID_SESSION_AUTHENTICATION\",\n  \"inherit\",\n  \"inherit\"\n);\nvar InvalidAccessToken = createKnownErrorConstructor(\n  InvalidSessionAuthentication,\n  \"INVALID_ACCESS_TOKEN\",\n  \"inherit\",\n  \"inherit\"\n);\nvar UnparsableAccessToken = createKnownErrorConstructor(\n  InvalidAccessToken,\n  \"UNPARSABLE_ACCESS_TOKEN\",\n  () => [\n    401,\n    \"Access token is not parsable.\"\n  ],\n  () => []\n);\nvar AccessTokenExpired = createKnownErrorConstructor(\n  InvalidAccessToken,\n  \"ACCESS_TOKEN_EXPIRED\",\n  (expiredAt) => [\n    401,\n    `Access token has expired. Please refresh it and try again.${expiredAt ? ` (The access token expired at ${expiredAt.toISOString()}.)` : \"\"}`,\n    { expired_at_millis: expiredAt?.getTime() ?? null }\n  ],\n  (json) => [json.expired_at_millis ? new Date(json.expired_at_millis) : void 0]\n);\nvar InvalidProjectForAccessToken = createKnownErrorConstructor(\n  InvalidAccessToken,\n  \"INVALID_PROJECT_FOR_ACCESS_TOKEN\",\n  (expectedProjectId, actualProjectId) => [\n    401,\n    `Access token not valid for this project. Expected project ID ${JSON.stringify(expectedProjectId)}, but the token is for project ID ${JSON.stringify(actualProjectId)}.`,\n    {\n      expected_project_id: expectedProjectId,\n      actual_project_id: actualProjectId\n    }\n  ],\n  (json) => [json.expected_project_id, json.actual_project_id]\n);\nvar RefreshTokenError = createKnownErrorConstructor(\n  KnownError,\n  \"REFRESH_TOKEN_ERROR\",\n  \"inherit\",\n  \"inherit\"\n);\nvar RefreshTokenNotFoundOrExpired = createKnownErrorConstructor(\n  RefreshTokenError,\n  \"REFRESH_TOKEN_NOT_FOUND_OR_EXPIRED\",\n  () => [\n    401,\n    \"Refresh token not found for this project, or the session has expired/been revoked.\"\n  ],\n  () => []\n);\nvar CannotDeleteCurrentSession = createKnownErrorConstructor(\n  RefreshTokenError,\n  \"CANNOT_DELETE_CURRENT_SESSION\",\n  () => [\n    400,\n    \"Cannot delete the current session.\"\n  ],\n  () => []\n);\nvar ProviderRejected = createKnownErrorConstructor(\n  RefreshTokenError,\n  \"PROVIDER_REJECTED\",\n  () => [\n    401,\n    \"The provider refused to refresh their token. This usually means that the provider used to authenticate the user no longer regards this session as valid, and the user must re-authenticate.\"\n  ],\n  () => []\n);\nvar UserWithEmailAlreadyExists = createKnownErrorConstructor(\n  KnownError,\n  \"USER_EMAIL_ALREADY_EXISTS\",\n  (email, wouldWorkIfEmailWasVerified = false) => [\n    409,\n    `A user with email ${JSON.stringify(email)} already exists${wouldWorkIfEmailWasVerified ? \" but the email is not verified. Please login to your existing account with the method you used to sign up, and then verify your email to sign in with this login method.\" : \".\"}`,\n    {\n      email,\n      would_work_if_email_was_verified: wouldWorkIfEmailWasVerified\n    }\n  ],\n  (json) => [json.email, json.would_work_if_email_was_verified ?? false]\n);\nvar EmailNotVerified = createKnownErrorConstructor(\n  KnownError,\n  \"EMAIL_NOT_VERIFIED\",\n  () => [\n    400,\n    \"The email is not verified.\"\n  ],\n  () => []\n);\nvar CannotGetOwnUserWithoutUser = createKnownErrorConstructor(\n  KnownError,\n  \"CANNOT_GET_OWN_USER_WITHOUT_USER\",\n  () => [\n    400,\n    \"You have specified 'me' as a userId, but did not provide authentication for a user.\"\n  ],\n  () => []\n);\nvar UserIdDoesNotExist = createKnownErrorConstructor(\n  KnownError,\n  \"USER_ID_DOES_NOT_EXIST\",\n  (userId) => [\n    400,\n    `The given user with the ID ${userId} does not exist.`,\n    {\n      user_id: userId\n    }\n  ],\n  (json) => [json.user_id]\n);\nvar UserNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"USER_NOT_FOUND\",\n  () => [\n    404,\n    \"User not found.\"\n  ],\n  () => []\n);\nvar ProjectNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"PROJECT_NOT_FOUND\",\n  (projectId) => {\n    if (typeof projectId !== \"string\") throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"projectId of KnownErrors.ProjectNotFound must be a string\");\n    return [\n      404,\n      `Project ${projectId} not found or is not accessible with the current user.`,\n      {\n        project_id: projectId\n      }\n    ];\n  },\n  (json) => [json.project_id]\n);\nvar CurrentProjectNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"CURRENT_PROJECT_NOT_FOUND\",\n  (projectId) => [\n    400,\n    `The current project with ID ${projectId} was not found. Please check the value of the x-stack-project-id header.`,\n    {\n      project_id: projectId\n    }\n  ],\n  (json) => [json.project_id]\n);\nvar BranchDoesNotExist = createKnownErrorConstructor(\n  KnownError,\n  \"BRANCH_DOES_NOT_EXIST\",\n  (branchId) => [\n    400,\n    `The branch with ID ${branchId} does not exist.`,\n    {\n      branch_id: branchId\n    }\n  ],\n  (json) => [json.branch_id]\n);\nvar SignUpNotEnabled = createKnownErrorConstructor(\n  KnownError,\n  \"SIGN_UP_NOT_ENABLED\",\n  () => [\n    400,\n    \"Creation of new accounts is not enabled for this project. Please ask the project owner to enable it.\"\n  ],\n  () => []\n);\nvar PasswordAuthenticationNotEnabled = createKnownErrorConstructor(\n  KnownError,\n  \"PASSWORD_AUTHENTICATION_NOT_ENABLED\",\n  () => [\n    400,\n    \"Password authentication is not enabled for this project.\"\n  ],\n  () => []\n);\nvar DataVaultStoreDoesNotExist = createKnownErrorConstructor(\n  KnownError,\n  \"DATA_VAULT_STORE_DOES_NOT_EXIST\",\n  (storeId) => [\n    400,\n    `Data vault store with ID ${storeId} does not exist.`,\n    {\n      store_id: storeId\n    }\n  ],\n  (json) => [json.store_id]\n);\nvar DataVaultStoreHashedKeyDoesNotExist = createKnownErrorConstructor(\n  KnownError,\n  \"DATA_VAULT_STORE_HASHED_KEY_DOES_NOT_EXIST\",\n  (storeId, hashedKey) => [\n    400,\n    `Data vault store with ID ${storeId} does not contain a key with hash ${hashedKey}.`,\n    {\n      store_id: storeId,\n      hashed_key: hashedKey\n    }\n  ],\n  (json) => [json.store_id, json.hashed_key]\n);\nvar PasskeyAuthenticationNotEnabled = createKnownErrorConstructor(\n  KnownError,\n  \"PASSKEY_AUTHENTICATION_NOT_ENABLED\",\n  () => [\n    400,\n    \"Passkey authentication is not enabled for this project.\"\n  ],\n  () => []\n);\nvar AnonymousAccountsNotEnabled = createKnownErrorConstructor(\n  KnownError,\n  \"ANONYMOUS_ACCOUNTS_NOT_ENABLED\",\n  () => [\n    400,\n    \"Anonymous accounts are not enabled for this project.\"\n  ],\n  () => []\n);\nvar AnonymousAuthenticationNotAllowed = createKnownErrorConstructor(\n  KnownError,\n  \"ANONYMOUS_AUTHENTICATION_NOT_ALLOWED\",\n  () => [\n    401,\n    \"X-Stack-Access-Token is for an anonymous user, but anonymous users are not enabled. Set the X-Stack-Allow-Anonymous-User header of this request to 'true' to allow anonymous users.\"\n  ],\n  () => []\n);\nvar EmailPasswordMismatch = createKnownErrorConstructor(\n  KnownError,\n  \"EMAIL_PASSWORD_MISMATCH\",\n  () => [\n    400,\n    \"Wrong e-mail or password.\"\n  ],\n  () => []\n);\nvar RedirectUrlNotWhitelisted = createKnownErrorConstructor(\n  KnownError,\n  \"REDIRECT_URL_NOT_WHITELISTED\",\n  () => [\n    400,\n    \"Redirect URL not whitelisted. Did you forget to add this domain to the trusted domains list on the Stack Auth dashboard?\"\n  ],\n  () => []\n);\nvar PasswordRequirementsNotMet = createKnownErrorConstructor(\n  KnownError,\n  \"PASSWORD_REQUIREMENTS_NOT_MET\",\n  \"inherit\",\n  \"inherit\"\n);\nvar PasswordTooShort = createKnownErrorConstructor(\n  PasswordRequirementsNotMet,\n  \"PASSWORD_TOO_SHORT\",\n  (minLength) => [\n    400,\n    `Password too short. Minimum length is ${minLength}.`,\n    {\n      min_length: minLength\n    }\n  ],\n  (json) => [\n    json?.min_length ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"min_length not found in PasswordTooShort details\")\n  ]\n);\nvar PasswordTooLong = createKnownErrorConstructor(\n  PasswordRequirementsNotMet,\n  \"PASSWORD_TOO_LONG\",\n  (maxLength) => [\n    400,\n    `Password too long. Maximum length is ${maxLength}.`,\n    {\n      maxLength\n    }\n  ],\n  (json) => [\n    json?.maxLength ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"maxLength not found in PasswordTooLong details\")\n  ]\n);\nvar UserDoesNotHavePassword = createKnownErrorConstructor(\n  KnownError,\n  \"USER_DOES_NOT_HAVE_PASSWORD\",\n  () => [\n    400,\n    \"This user does not have password authentication enabled.\"\n  ],\n  () => []\n);\nvar VerificationCodeError = createKnownErrorConstructor(\n  KnownError,\n  \"VERIFICATION_ERROR\",\n  \"inherit\",\n  \"inherit\"\n);\nvar VerificationCodeNotFound = createKnownErrorConstructor(\n  VerificationCodeError,\n  \"VERIFICATION_CODE_NOT_FOUND\",\n  () => [\n    404,\n    \"The verification code does not exist for this project.\"\n  ],\n  () => []\n);\nvar VerificationCodeExpired = createKnownErrorConstructor(\n  VerificationCodeError,\n  \"VERIFICATION_CODE_EXPIRED\",\n  () => [\n    400,\n    \"The verification code has expired.\"\n  ],\n  () => []\n);\nvar VerificationCodeAlreadyUsed = createKnownErrorConstructor(\n  VerificationCodeError,\n  \"VERIFICATION_CODE_ALREADY_USED\",\n  () => [\n    409,\n    \"The verification link has already been used.\"\n  ],\n  () => []\n);\nvar VerificationCodeMaxAttemptsReached = createKnownErrorConstructor(\n  VerificationCodeError,\n  \"VERIFICATION_CODE_MAX_ATTEMPTS_REACHED\",\n  () => [\n    400,\n    \"The verification code nonce has reached the maximum number of attempts. This code is not valid anymore.\"\n  ],\n  () => []\n);\nvar PasswordConfirmationMismatch = createKnownErrorConstructor(\n  KnownError,\n  \"PASSWORD_CONFIRMATION_MISMATCH\",\n  () => [\n    400,\n    \"Passwords do not match.\"\n  ],\n  () => []\n);\nvar EmailAlreadyVerified = createKnownErrorConstructor(\n  KnownError,\n  \"EMAIL_ALREADY_VERIFIED\",\n  () => [\n    409,\n    \"The e-mail is already verified.\"\n  ],\n  () => []\n);\nvar EmailNotAssociatedWithUser = createKnownErrorConstructor(\n  KnownError,\n  \"EMAIL_NOT_ASSOCIATED_WITH_USER\",\n  () => [\n    400,\n    \"The e-mail is not associated with a user that could log in with that e-mail.\"\n  ],\n  () => []\n);\nvar EmailIsNotPrimaryEmail = createKnownErrorConstructor(\n  KnownError,\n  \"EMAIL_IS_NOT_PRIMARY_EMAIL\",\n  (email, primaryEmail) => [\n    400,\n    `The given e-mail (${email}) must equal the user's primary e-mail (${primaryEmail}).`,\n    {\n      email,\n      primary_email: primaryEmail\n    }\n  ],\n  (json) => [json.email, json.primary_email]\n);\nvar PasskeyRegistrationFailed = createKnownErrorConstructor(\n  KnownError,\n  \"PASSKEY_REGISTRATION_FAILED\",\n  (message) => [\n    400,\n    message\n  ],\n  (json) => [json.message]\n);\nvar PasskeyWebAuthnError = createKnownErrorConstructor(\n  KnownError,\n  \"PASSKEY_WEBAUTHN_ERROR\",\n  (message, code) => [\n    400,\n    message,\n    {\n      message,\n      code\n    }\n  ],\n  (json) => [json.message, json.code]\n);\nvar PasskeyAuthenticationFailed = createKnownErrorConstructor(\n  KnownError,\n  \"PASSKEY_AUTHENTICATION_FAILED\",\n  (message) => [\n    400,\n    message\n  ],\n  (json) => [json.message]\n);\nvar PermissionNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"PERMISSION_NOT_FOUND\",\n  (permissionId) => [\n    404,\n    `Permission \"${permissionId}\" not found. Make sure you created it on the dashboard.`,\n    {\n      permission_id: permissionId\n    }\n  ],\n  (json) => [json.permission_id]\n);\nvar PermissionScopeMismatch = createKnownErrorConstructor(\n  KnownError,\n  \"WRONG_PERMISSION_SCOPE\",\n  (permissionId, expectedScope, actualScope) => [\n    404,\n    `Permission ${JSON.stringify(permissionId)} not found. (It was found for a different scope ${JSON.stringify(actualScope)}, but scope ${JSON.stringify(expectedScope)} was expected.)`,\n    {\n      permission_id: permissionId,\n      expected_scope: expectedScope,\n      actual_scope: actualScope\n    }\n  ],\n  (json) => [json.permission_id, json.expected_scope, json.actual_scope]\n);\nvar ContainedPermissionNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"CONTAINED_PERMISSION_NOT_FOUND\",\n  (permissionId) => [\n    400,\n    `Contained permission with ID \"${permissionId}\" not found. Make sure you created it on the dashboard.`,\n    {\n      permission_id: permissionId\n    }\n  ],\n  (json) => [json.permission_id]\n);\nvar TeamNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"TEAM_NOT_FOUND\",\n  (teamId) => [\n    404,\n    `Team ${teamId} not found.`,\n    {\n      team_id: teamId\n    }\n  ],\n  (json) => [json.team_id]\n);\nvar TeamAlreadyExists = createKnownErrorConstructor(\n  KnownError,\n  \"TEAM_ALREADY_EXISTS\",\n  (teamId) => [\n    409,\n    `Team ${teamId} already exists.`,\n    {\n      team_id: teamId\n    }\n  ],\n  (json) => [json.team_id]\n);\nvar TeamMembershipNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"TEAM_MEMBERSHIP_NOT_FOUND\",\n  (teamId, userId) => [\n    404,\n    `User ${userId} is not found in team ${teamId}.`,\n    {\n      team_id: teamId,\n      user_id: userId\n    }\n  ],\n  (json) => [json.team_id, json.user_id]\n);\nvar EmailTemplateAlreadyExists = createKnownErrorConstructor(\n  KnownError,\n  \"EMAIL_TEMPLATE_ALREADY_EXISTS\",\n  () => [\n    409,\n    \"Email template already exists.\"\n  ],\n  () => []\n);\nvar OAuthConnectionNotConnectedToUser = createKnownErrorConstructor(\n  KnownError,\n  \"OAUTH_CONNECTION_NOT_CONNECTED_TO_USER\",\n  () => [\n    400,\n    \"The OAuth connection is not connected to any user.\"\n  ],\n  () => []\n);\nvar OAuthConnectionAlreadyConnectedToAnotherUser = createKnownErrorConstructor(\n  KnownError,\n  \"OAUTH_CONNECTION_ALREADY_CONNECTED_TO_ANOTHER_USER\",\n  () => [\n    409,\n    \"The OAuth connection is already connected to another user.\"\n  ],\n  () => []\n);\nvar OAuthConnectionDoesNotHaveRequiredScope = createKnownErrorConstructor(\n  KnownError,\n  \"OAUTH_CONNECTION_DOES_NOT_HAVE_REQUIRED_SCOPE\",\n  () => [\n    400,\n    \"The OAuth connection does not have the required scope.\"\n  ],\n  () => []\n);\nvar OAuthExtraScopeNotAvailableWithSharedOAuthKeys = createKnownErrorConstructor(\n  KnownError,\n  \"OAUTH_EXTRA_SCOPE_NOT_AVAILABLE_WITH_SHARED_OAUTH_KEYS\",\n  () => [\n    400,\n    \"Extra scopes are not available with shared OAuth keys. Please add your own OAuth keys on the Stack dashboard to use extra scopes.\"\n  ],\n  () => []\n);\nvar OAuthAccessTokenNotAvailableWithSharedOAuthKeys = createKnownErrorConstructor(\n  KnownError,\n  \"OAUTH_ACCESS_TOKEN_NOT_AVAILABLE_WITH_SHARED_OAUTH_KEYS\",\n  () => [\n    400,\n    \"Access tokens are not available with shared OAuth keys. Please add your own OAuth keys on the Stack dashboard to use access tokens.\"\n  ],\n  () => []\n);\nvar InvalidOAuthClientIdOrSecret = createKnownErrorConstructor(\n  KnownError,\n  \"INVALID_OAUTH_CLIENT_ID_OR_SECRET\",\n  (clientId) => [\n    400,\n    \"The OAuth client ID or secret is invalid. The client ID must be equal to the project ID (potentially with a hash and a branch ID), and the client secret must be a publishable client key.\",\n    {\n      client_id: clientId ?? null\n    }\n  ],\n  (json) => [json.client_id ?? void 0]\n);\nvar InvalidScope = createKnownErrorConstructor(\n  KnownError,\n  \"INVALID_SCOPE\",\n  (scope) => [\n    400,\n    `The scope \"${scope}\" is not a valid OAuth scope for Stack.`\n  ],\n  (json) => [json.scope]\n);\nvar UserAlreadyConnectedToAnotherOAuthConnection = createKnownErrorConstructor(\n  KnownError,\n  \"USER_ALREADY_CONNECTED_TO_ANOTHER_OAUTH_CONNECTION\",\n  () => [\n    409,\n    \"The user is already connected to another OAuth account. Did you maybe selected the wrong account?\"\n  ],\n  () => []\n);\nvar OuterOAuthTimeout = createKnownErrorConstructor(\n  KnownError,\n  \"OUTER_OAUTH_TIMEOUT\",\n  () => [\n    408,\n    \"The OAuth flow has timed out. Please sign in again.\"\n  ],\n  () => []\n);\nvar OAuthProviderNotFoundOrNotEnabled = createKnownErrorConstructor(\n  KnownError,\n  \"OAUTH_PROVIDER_NOT_FOUND_OR_NOT_ENABLED\",\n  () => [\n    400,\n    \"The OAuth provider is not found or not enabled.\"\n  ],\n  () => []\n);\nvar OAuthProviderAccountIdAlreadyUsedForSignIn = createKnownErrorConstructor(\n  KnownError,\n  \"OAUTH_PROVIDER_ACCOUNT_ID_ALREADY_USED_FOR_SIGN_IN\",\n  () => [\n    400,\n    `A provider with the same account ID is already used for signing in.`\n  ],\n  () => []\n);\nvar MultiFactorAuthenticationRequired = createKnownErrorConstructor(\n  KnownError,\n  \"MULTI_FACTOR_AUTHENTICATION_REQUIRED\",\n  (attemptCode) => [\n    400,\n    `Multi-factor authentication is required for this user.`,\n    {\n      attempt_code: attemptCode\n    }\n  ],\n  (json) => [json.attempt_code]\n);\nvar InvalidTotpCode = createKnownErrorConstructor(\n  KnownError,\n  \"INVALID_TOTP_CODE\",\n  () => [\n    400,\n    \"The TOTP code is invalid. Please try again.\"\n  ],\n  () => []\n);\nvar UserAuthenticationRequired = createKnownErrorConstructor(\n  KnownError,\n  \"USER_AUTHENTICATION_REQUIRED\",\n  () => [\n    401,\n    \"User authentication required for this endpoint.\"\n  ],\n  () => []\n);\nvar TeamMembershipAlreadyExists = createKnownErrorConstructor(\n  KnownError,\n  \"TEAM_MEMBERSHIP_ALREADY_EXISTS\",\n  () => [\n    409,\n    \"Team membership already exists.\"\n  ],\n  () => []\n);\nvar ProjectPermissionRequired = createKnownErrorConstructor(\n  KnownError,\n  \"PROJECT_PERMISSION_REQUIRED\",\n  (userId, permissionId) => [\n    401,\n    `User ${userId} does not have permission ${permissionId}.`,\n    {\n      user_id: userId,\n      permission_id: permissionId\n    }\n  ],\n  (json) => [json.user_id, json.permission_id]\n);\nvar TeamPermissionRequired = createKnownErrorConstructor(\n  KnownError,\n  \"TEAM_PERMISSION_REQUIRED\",\n  (teamId, userId, permissionId) => [\n    401,\n    `User ${userId} does not have permission ${permissionId} in team ${teamId}.`,\n    {\n      team_id: teamId,\n      user_id: userId,\n      permission_id: permissionId\n    }\n  ],\n  (json) => [json.team_id, json.user_id, json.permission_id]\n);\nvar TeamPermissionNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"TEAM_PERMISSION_NOT_FOUND\",\n  (teamId, userId, permissionId) => [\n    401,\n    `User ${userId} does not have permission ${permissionId} in team ${teamId}.`,\n    {\n      team_id: teamId,\n      user_id: userId,\n      permission_id: permissionId\n    }\n  ],\n  (json) => [json.team_id, json.user_id, json.permission_id]\n);\nvar InvalidSharedOAuthProviderId = createKnownErrorConstructor(\n  KnownError,\n  \"INVALID_SHARED_OAUTH_PROVIDER_ID\",\n  (providerId) => [\n    400,\n    `The shared OAuth provider with ID ${providerId} is not valid.`,\n    {\n      provider_id: providerId\n    }\n  ],\n  (json) => [json.provider_id]\n);\nvar InvalidStandardOAuthProviderId = createKnownErrorConstructor(\n  KnownError,\n  \"INVALID_STANDARD_OAUTH_PROVIDER_ID\",\n  (providerId) => [\n    400,\n    `The standard OAuth provider with ID ${providerId} is not valid.`,\n    {\n      provider_id: providerId\n    }\n  ],\n  (json) => [json.provider_id]\n);\nvar InvalidAuthorizationCode = createKnownErrorConstructor(\n  KnownError,\n  \"INVALID_AUTHORIZATION_CODE\",\n  () => [\n    400,\n    \"The given authorization code is invalid.\"\n  ],\n  () => []\n);\nvar OAuthProviderAccessDenied = createKnownErrorConstructor(\n  KnownError,\n  \"OAUTH_PROVIDER_ACCESS_DENIED\",\n  () => [\n    400,\n    \"The OAuth provider denied access to the user.\"\n  ],\n  () => []\n);\nvar ContactChannelAlreadyUsedForAuthBySomeoneElse = createKnownErrorConstructor(\n  KnownError,\n  \"CONTACT_CHANNEL_ALREADY_USED_FOR_AUTH_BY_SOMEONE_ELSE\",\n  (type, contactChannelValue, wouldWorkIfEmailWasVerified = false) => [\n    409,\n    `This ${type} ${contactChannelValue ? `\"(${contactChannelValue})\"` : \"\"} is already used for authentication by another account${wouldWorkIfEmailWasVerified ? \" but the email is not verified. Please login to your existing account with the method you used to sign up, and then verify your email to sign in with this login method.\" : \".\"}`,\n    {\n      type,\n      contact_channel_value: contactChannelValue ?? null,\n      would_work_if_email_was_verified: wouldWorkIfEmailWasVerified\n    }\n  ],\n  (json) => [json.type, json.contact_channel_value, json.would_work_if_email_was_verified ?? false]\n);\nvar InvalidPollingCodeError = createKnownErrorConstructor(\n  KnownError,\n  \"INVALID_POLLING_CODE\",\n  (details) => [\n    400,\n    \"The polling code is invalid or does not exist.\",\n    details\n  ],\n  (json) => [json]\n);\nvar CliAuthError = createKnownErrorConstructor(\n  KnownError,\n  \"CLI_AUTH_ERROR\",\n  (message) => [\n    400,\n    message\n  ],\n  (json) => [json.message]\n);\nvar CliAuthExpiredError = createKnownErrorConstructor(\n  KnownError,\n  \"CLI_AUTH_EXPIRED_ERROR\",\n  (message = \"CLI authentication request expired. Please try again.\") => [\n    400,\n    message\n  ],\n  (json) => [json.message]\n);\nvar CliAuthUsedError = createKnownErrorConstructor(\n  KnownError,\n  \"CLI_AUTH_USED_ERROR\",\n  (message = \"This authentication token has already been used.\") => [\n    400,\n    message\n  ],\n  (json) => [json.message]\n);\nvar ApiKeyNotValid = createKnownErrorConstructor(\n  KnownError,\n  \"API_KEY_NOT_VALID\",\n  \"inherit\",\n  \"inherit\"\n);\nvar ApiKeyExpired = createKnownErrorConstructor(\n  ApiKeyNotValid,\n  \"API_KEY_EXPIRED\",\n  () => [\n    401,\n    \"API key has expired.\"\n  ],\n  () => []\n);\nvar ApiKeyRevoked = createKnownErrorConstructor(\n  ApiKeyNotValid,\n  \"API_KEY_REVOKED\",\n  () => [\n    401,\n    \"API key has been revoked.\"\n  ],\n  () => []\n);\nvar WrongApiKeyType = createKnownErrorConstructor(\n  ApiKeyNotValid,\n  \"WRONG_API_KEY_TYPE\",\n  (expectedType, actualType) => [\n    400,\n    `This endpoint is for ${expectedType} API keys, but a ${actualType} API key was provided.`,\n    { expected_type: expectedType, actual_type: actualType }\n  ],\n  (json) => [json.expected_type, json.actual_type]\n);\nvar ApiKeyNotFound = createKnownErrorConstructor(\n  ApiKeyNotValid,\n  \"API_KEY_NOT_FOUND\",\n  () => [\n    404,\n    \"API key not found.\"\n  ],\n  () => []\n);\nvar PublicApiKeyCannotBeRevoked = createKnownErrorConstructor(\n  ApiKeyNotValid,\n  \"PUBLIC_API_KEY_CANNOT_BE_REVOKED\",\n  () => [\n    400,\n    \"Public API keys cannot be revoked by the secretscanner endpoint.\"\n  ],\n  () => []\n);\nvar PermissionIdAlreadyExists = createKnownErrorConstructor(\n  KnownError,\n  \"PERMISSION_ID_ALREADY_EXISTS\",\n  (permissionId) => [\n    400,\n    `Permission with ID \"${permissionId}\" already exists. Choose a different ID.`,\n    {\n      permission_id: permissionId\n    }\n  ],\n  (json) => [json.permission_id]\n);\nvar EmailRenderingError = createKnownErrorConstructor(\n  KnownError,\n  \"EMAIL_RENDERING_ERROR\",\n  (error) => [\n    400,\n    `Failed to render email with theme: ${error}`,\n    { error }\n  ],\n  (json) => [json.error]\n);\nvar RequiresCustomEmailServer = createKnownErrorConstructor(\n  KnownError,\n  \"REQUIRES_CUSTOM_EMAIL_SERVER\",\n  () => [\n    400,\n    `This action requires a custom SMTP server. Please edit your email server configuration and try again.`\n  ],\n  () => []\n);\nvar ItemNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"ITEM_NOT_FOUND\",\n  (itemId) => [\n    404,\n    `Item with ID \"${itemId}\" not found.`,\n    {\n      item_id: itemId\n    }\n  ],\n  (json) => [json.item_id]\n);\nvar ItemCustomerTypeDoesNotMatch = createKnownErrorConstructor(\n  KnownError,\n  \"ITEM_CUSTOMER_TYPE_DOES_NOT_MATCH\",\n  (itemId, customerId, itemCustomerType, actualCustomerType) => [\n    400,\n    `The ${actualCustomerType} with ID ${JSON.stringify(customerId)} is not a valid customer for the item with ID ${JSON.stringify(itemId)}. ${itemCustomerType ? `The item is configured to only be available for ${itemCustomerType} customers, but the customer is a ${actualCustomerType}.` : `The item is missing a customer type field. Please make sure it is set up correctly in your project configuration.`}`,\n    {\n      item_id: itemId,\n      customer_id: customerId,\n      item_customer_type: itemCustomerType ?? null,\n      actual_customer_type: actualCustomerType\n    }\n  ],\n  (json) => [json.item_id, json.customer_id, json.item_customer_type ?? void 0, json.actual_customer_type]\n);\nvar CustomerDoesNotExist = createKnownErrorConstructor(\n  KnownError,\n  \"CUSTOMER_DOES_NOT_EXIST\",\n  (customerId) => [\n    400,\n    `Customer with ID ${JSON.stringify(customerId)} does not exist.`,\n    {\n      customer_id: customerId\n    }\n  ],\n  (json) => [json.customer_id]\n);\nvar OfferDoesNotExist = createKnownErrorConstructor(\n  KnownError,\n  \"OFFER_DOES_NOT_EXIST\",\n  (offerId, accessType) => [\n    400,\n    `Offer with ID ${JSON.stringify(offerId)} does not exist${accessType === \"client\" ? \" or you don't have permissions to access it.\" : \".\"}`,\n    {\n      offer_id: offerId,\n      access_type: accessType\n    }\n  ],\n  (json) => [json.offer_id, json.access_type]\n);\nvar OfferCustomerTypeDoesNotMatch = createKnownErrorConstructor(\n  KnownError,\n  \"OFFER_CUSTOMER_TYPE_DOES_NOT_MATCH\",\n  (offerId, customerId, offerCustomerType, actualCustomerType) => [\n    400,\n    `The ${actualCustomerType} with ID ${JSON.stringify(customerId)} is not a valid customer for the inline offer that has been passed in. ${offerCustomerType ? `The offer is configured to only be available for ${offerCustomerType} customers, but the customer is a ${actualCustomerType}.` : `The offer is missing a customer type field. Please make sure it is set up correctly in your project configuration.`}`,\n    {\n      offer_id: offerId ?? null,\n      customer_id: customerId,\n      offer_customer_type: offerCustomerType ?? null,\n      actual_customer_type: actualCustomerType\n    }\n  ],\n  (json) => [json.offer_id ?? void 0, json.customer_id, json.offer_customer_type ?? void 0, json.actual_customer_type]\n);\nvar ItemQuantityInsufficientAmount = createKnownErrorConstructor(\n  KnownError,\n  \"ITEM_QUANTITY_INSUFFICIENT_AMOUNT\",\n  (itemId, customerId, quantity) => [\n    400,\n    `The item with ID ${JSON.stringify(itemId)} has an insufficient quantity for the customer with ID ${JSON.stringify(customerId)}. An attempt was made to charge ${quantity} credits.`,\n    {\n      item_id: itemId,\n      customer_id: customerId,\n      quantity\n    }\n  ],\n  (json) => [json.item_id, json.customer_id, json.quantity]\n);\nvar StripeAccountInfoNotFound = createKnownErrorConstructor(\n  KnownError,\n  \"STRIPE_ACCOUNT_INFO_NOT_FOUND\",\n  () => [\n    404,\n    \"Stripe account information not found. Please make sure the user has onboarded with Stripe.\"\n  ],\n  () => []\n);\nvar WorkflowTokenDoesNotExist = createKnownErrorConstructor(\n  KnownError,\n  \"WORKFLOW_TOKEN_DOES_NOT_EXIST\",\n  () => [\n    400,\n    \"The workflow token you specified does not exist. Make sure the value in x-stack-workflow-token is correct.\"\n  ],\n  () => []\n);\nvar WorkflowTokenExpired = createKnownErrorConstructor(\n  KnownError,\n  \"WORKFLOW_TOKEN_EXPIRED\",\n  () => [\n    400,\n    \"The workflow token you specified has expired. Make sure the value in x-stack-workflow-token is correct.\"\n  ],\n  () => []\n);\nvar KnownErrors = {\n  CannotDeleteCurrentSession,\n  UnsupportedError,\n  BodyParsingError,\n  SchemaError,\n  AllOverloadsFailed,\n  ProjectAuthenticationError,\n  PermissionIdAlreadyExists,\n  CliAuthError,\n  CliAuthExpiredError,\n  CliAuthUsedError,\n  InvalidProjectAuthentication,\n  ProjectKeyWithoutAccessType,\n  InvalidAccessType,\n  AccessTypeWithoutProjectId,\n  AccessTypeRequired,\n  CannotGetOwnUserWithoutUser,\n  InsufficientAccessType,\n  InvalidPublishableClientKey,\n  InvalidSecretServerKey,\n  InvalidSuperSecretAdminKey,\n  InvalidAdminAccessToken,\n  UnparsableAdminAccessToken,\n  AdminAccessTokenExpired,\n  InvalidProjectForAdminAccessToken,\n  AdminAccessTokenIsNotAdmin,\n  ProjectAuthenticationRequired,\n  ClientAuthenticationRequired,\n  ServerAuthenticationRequired,\n  ClientOrServerAuthenticationRequired,\n  ClientOrAdminAuthenticationRequired,\n  ClientOrServerOrAdminAuthenticationRequired,\n  AdminAuthenticationRequired,\n  ExpectedInternalProject,\n  SessionAuthenticationError,\n  InvalidSessionAuthentication,\n  InvalidAccessToken,\n  UnparsableAccessToken,\n  AccessTokenExpired,\n  InvalidProjectForAccessToken,\n  RefreshTokenError,\n  ProviderRejected,\n  RefreshTokenNotFoundOrExpired,\n  UserWithEmailAlreadyExists,\n  EmailNotVerified,\n  UserIdDoesNotExist,\n  UserNotFound,\n  ApiKeyNotFound,\n  PublicApiKeyCannotBeRevoked,\n  ProjectNotFound,\n  CurrentProjectNotFound,\n  BranchDoesNotExist,\n  SignUpNotEnabled,\n  PasswordAuthenticationNotEnabled,\n  PasskeyAuthenticationNotEnabled,\n  AnonymousAccountsNotEnabled,\n  AnonymousAuthenticationNotAllowed,\n  EmailPasswordMismatch,\n  RedirectUrlNotWhitelisted,\n  PasswordRequirementsNotMet,\n  PasswordTooShort,\n  PasswordTooLong,\n  UserDoesNotHavePassword,\n  VerificationCodeError,\n  VerificationCodeNotFound,\n  VerificationCodeExpired,\n  VerificationCodeAlreadyUsed,\n  VerificationCodeMaxAttemptsReached,\n  PasswordConfirmationMismatch,\n  EmailAlreadyVerified,\n  EmailNotAssociatedWithUser,\n  EmailIsNotPrimaryEmail,\n  PasskeyRegistrationFailed,\n  PasskeyWebAuthnError,\n  PasskeyAuthenticationFailed,\n  PermissionNotFound,\n  PermissionScopeMismatch,\n  ContainedPermissionNotFound,\n  TeamNotFound,\n  TeamMembershipNotFound,\n  EmailTemplateAlreadyExists,\n  OAuthConnectionNotConnectedToUser,\n  OAuthConnectionAlreadyConnectedToAnotherUser,\n  OAuthConnectionDoesNotHaveRequiredScope,\n  OAuthExtraScopeNotAvailableWithSharedOAuthKeys,\n  OAuthAccessTokenNotAvailableWithSharedOAuthKeys,\n  InvalidOAuthClientIdOrSecret,\n  InvalidScope,\n  UserAlreadyConnectedToAnotherOAuthConnection,\n  OuterOAuthTimeout,\n  OAuthProviderNotFoundOrNotEnabled,\n  OAuthProviderAccountIdAlreadyUsedForSignIn,\n  MultiFactorAuthenticationRequired,\n  InvalidTotpCode,\n  UserAuthenticationRequired,\n  TeamMembershipAlreadyExists,\n  ProjectPermissionRequired,\n  TeamPermissionRequired,\n  InvalidSharedOAuthProviderId,\n  InvalidStandardOAuthProviderId,\n  InvalidAuthorizationCode,\n  TeamPermissionNotFound,\n  OAuthProviderAccessDenied,\n  ContactChannelAlreadyUsedForAuthBySomeoneElse,\n  InvalidPollingCodeError,\n  ApiKeyNotValid,\n  ApiKeyExpired,\n  ApiKeyRevoked,\n  WrongApiKeyType,\n  EmailRenderingError,\n  RequiresCustomEmailServer,\n  ItemNotFound,\n  ItemCustomerTypeDoesNotMatch,\n  CustomerDoesNotExist,\n  OfferDoesNotExist,\n  OfferCustomerTypeDoesNotMatch,\n  ItemQuantityInsufficientAmount,\n  StripeAccountInfoNotFound,\n  DataVaultStoreDoesNotExist,\n  DataVaultStoreHashedKeyDoesNotExist,\n  WorkflowTokenDoesNotExist,\n  WorkflowTokenExpired\n};\nvar knownErrorCodes = /* @__PURE__ */ new Set();\nfor (const [_, KnownError2] of Object.entries(KnownErrors)) {\n  if (knownErrorCodes.has(KnownError2.errorCode)) {\n    throw new Error(`Duplicate known error code: ${KnownError2.errorCode}`);\n  }\n  knownErrorCodes.add(KnownError2.errorCode);\n}\n\n//# sourceMappingURL=known-errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/known-errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/schema-fields.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/schema-fields.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReplaceFieldWithOwnUserId: () => (/* binding */ ReplaceFieldWithOwnUserId),\n/* harmony export */   accessTokenPayloadSchema: () => (/* binding */ accessTokenPayloadSchema),\n/* harmony export */   accessTokenResponseSchema: () => (/* binding */ accessTokenResponseSchema),\n/* harmony export */   adaptSchema: () => (/* binding */ adaptSchema),\n/* harmony export */   adminAuthTypeSchema: () => (/* binding */ adminAuthTypeSchema),\n/* harmony export */   base64Schema: () => (/* binding */ base64Schema),\n/* harmony export */   basicAuthorizationHeaderSchema: () => (/* binding */ basicAuthorizationHeaderSchema),\n/* harmony export */   clientOrHigherAuthTypeSchema: () => (/* binding */ clientOrHigherAuthTypeSchema),\n/* harmony export */   contactChannelIdSchema: () => (/* binding */ contactChannelIdSchema),\n/* harmony export */   contactChannelIsPrimarySchema: () => (/* binding */ contactChannelIsPrimarySchema),\n/* harmony export */   contactChannelIsVerifiedSchema: () => (/* binding */ contactChannelIsVerifiedSchema),\n/* harmony export */   contactChannelTypeSchema: () => (/* binding */ contactChannelTypeSchema),\n/* harmony export */   contactChannelUsedForAuthSchema: () => (/* binding */ contactChannelUsedForAuthSchema),\n/* harmony export */   contactChannelValueSchema: () => (/* binding */ contactChannelValueSchema),\n/* harmony export */   containedPermissionIdsSchema: () => (/* binding */ containedPermissionIdsSchema),\n/* harmony export */   customPermissionDefinitionIdSchema: () => (/* binding */ customPermissionDefinitionIdSchema),\n/* harmony export */   customerTypeSchema: () => (/* binding */ customerTypeSchema),\n/* harmony export */   dayIntervalOrNeverSchema: () => (/* binding */ dayIntervalOrNeverSchema),\n/* harmony export */   dayIntervalSchema: () => (/* binding */ dayIntervalSchema),\n/* harmony export */   emailHostSchema: () => (/* binding */ emailHostSchema),\n/* harmony export */   emailOtpSignInCallbackUrlSchema: () => (/* binding */ emailOtpSignInCallbackUrlSchema),\n/* harmony export */   emailPasswordSchema: () => (/* binding */ emailPasswordSchema),\n/* harmony export */   emailPortSchema: () => (/* binding */ emailPortSchema),\n/* harmony export */   emailSchema: () => (/* binding */ emailSchema),\n/* harmony export */   emailSenderEmailSchema: () => (/* binding */ emailSenderEmailSchema),\n/* harmony export */   emailSenderNameSchema: () => (/* binding */ emailSenderNameSchema),\n/* harmony export */   emailTemplateListSchema: () => (/* binding */ emailTemplateListSchema),\n/* harmony export */   emailThemeListSchema: () => (/* binding */ emailThemeListSchema),\n/* harmony export */   emailThemeSchema: () => (/* binding */ emailThemeSchema),\n/* harmony export */   emailTypeSchema: () => (/* binding */ emailTypeSchema),\n/* harmony export */   emailUsernameSchema: () => (/* binding */ emailUsernameSchema),\n/* harmony export */   emailVerificationCallbackUrlSchema: () => (/* binding */ emailVerificationCallbackUrlSchema),\n/* harmony export */   ensureObjectSchema: () => (/* binding */ ensureObjectSchema),\n/* harmony export */   handlerPathSchema: () => (/* binding */ handlerPathSchema),\n/* harmony export */   inlineOfferSchema: () => (/* binding */ inlineOfferSchema),\n/* harmony export */   intervalOrNeverSchema: () => (/* binding */ intervalOrNeverSchema),\n/* harmony export */   intervalSchema: () => (/* binding */ intervalSchema),\n/* harmony export */   jsonSchema: () => (/* binding */ jsonSchema),\n/* harmony export */   jsonStringOrEmptySchema: () => (/* binding */ jsonStringOrEmptySchema),\n/* harmony export */   jsonStringSchema: () => (/* binding */ jsonStringSchema),\n/* harmony export */   moneyAmountSchema: () => (/* binding */ moneyAmountSchema),\n/* harmony export */   neonAuthorizationHeaderSchema: () => (/* binding */ neonAuthorizationHeaderSchema),\n/* harmony export */   oauthAccountMergeStrategySchema: () => (/* binding */ oauthAccountMergeStrategySchema),\n/* harmony export */   oauthClientIdSchema: () => (/* binding */ oauthClientIdSchema),\n/* harmony export */   oauthClientSecretSchema: () => (/* binding */ oauthClientSecretSchema),\n/* harmony export */   oauthEnabledSchema: () => (/* binding */ oauthEnabledSchema),\n/* harmony export */   oauthFacebookConfigIdSchema: () => (/* binding */ oauthFacebookConfigIdSchema),\n/* harmony export */   oauthIdSchema: () => (/* binding */ oauthIdSchema),\n/* harmony export */   oauthMicrosoftTenantIdSchema: () => (/* binding */ oauthMicrosoftTenantIdSchema),\n/* harmony export */   oauthProviderAccountIdSchema: () => (/* binding */ oauthProviderAccountIdSchema),\n/* harmony export */   oauthProviderAllowConnectedAccountsSchema: () => (/* binding */ oauthProviderAllowConnectedAccountsSchema),\n/* harmony export */   oauthProviderAllowSignInSchema: () => (/* binding */ oauthProviderAllowSignInSchema),\n/* harmony export */   oauthProviderEmailSchema: () => (/* binding */ oauthProviderEmailSchema),\n/* harmony export */   oauthProviderIdSchema: () => (/* binding */ oauthProviderIdSchema),\n/* harmony export */   oauthProviderProviderConfigIdSchema: () => (/* binding */ oauthProviderProviderConfigIdSchema),\n/* harmony export */   oauthProviderTypeSchema: () => (/* binding */ oauthProviderTypeSchema),\n/* harmony export */   oauthTypeSchema: () => (/* binding */ oauthTypeSchema),\n/* harmony export */   offerPriceSchema: () => (/* binding */ offerPriceSchema),\n/* harmony export */   offerSchema: () => (/* binding */ offerSchema),\n/* harmony export */   passwordSchema: () => (/* binding */ passwordSchema),\n/* harmony export */   permissionDefinitionIdSchema: () => (/* binding */ permissionDefinitionIdSchema),\n/* harmony export */   priceOrIncludeByDefaultSchema: () => (/* binding */ priceOrIncludeByDefaultSchema),\n/* harmony export */   primaryEmailAuthEnabledSchema: () => (/* binding */ primaryEmailAuthEnabledSchema),\n/* harmony export */   primaryEmailSchema: () => (/* binding */ primaryEmailSchema),\n/* harmony export */   primaryEmailVerifiedSchema: () => (/* binding */ primaryEmailVerifiedSchema),\n/* harmony export */   profileImageUrlSchema: () => (/* binding */ profileImageUrlSchema),\n/* harmony export */   projectAllowLocalhostSchema: () => (/* binding */ projectAllowLocalhostSchema),\n/* harmony export */   projectBranchIdSchema: () => (/* binding */ projectBranchIdSchema),\n/* harmony export */   projectClientTeamCreationEnabledSchema: () => (/* binding */ projectClientTeamCreationEnabledSchema),\n/* harmony export */   projectClientUserDeletionEnabledSchema: () => (/* binding */ projectClientUserDeletionEnabledSchema),\n/* harmony export */   projectConfigIdSchema: () => (/* binding */ projectConfigIdSchema),\n/* harmony export */   projectCreateTeamOnSignUpSchema: () => (/* binding */ projectCreateTeamOnSignUpSchema),\n/* harmony export */   projectCreatedAtMillisSchema: () => (/* binding */ projectCreatedAtMillisSchema),\n/* harmony export */   projectCredentialEnabledSchema: () => (/* binding */ projectCredentialEnabledSchema),\n/* harmony export */   projectDescriptionSchema: () => (/* binding */ projectDescriptionSchema),\n/* harmony export */   projectDisplayNameSchema: () => (/* binding */ projectDisplayNameSchema),\n/* harmony export */   projectFullLogoUrlSchema: () => (/* binding */ projectFullLogoUrlSchema),\n/* harmony export */   projectIdSchema: () => (/* binding */ projectIdSchema),\n/* harmony export */   projectIsProductionModeSchema: () => (/* binding */ projectIsProductionModeSchema),\n/* harmony export */   projectLogoUrlSchema: () => (/* binding */ projectLogoUrlSchema),\n/* harmony export */   projectMagicLinkEnabledSchema: () => (/* binding */ projectMagicLinkEnabledSchema),\n/* harmony export */   projectPasskeyEnabledSchema: () => (/* binding */ projectPasskeyEnabledSchema),\n/* harmony export */   projectSignUpEnabledSchema: () => (/* binding */ projectSignUpEnabledSchema),\n/* harmony export */   refreshTokenResponseSchema: () => (/* binding */ refreshTokenResponseSchema),\n/* harmony export */   selectedTeamIdSchema: () => (/* binding */ selectedTeamIdSchema),\n/* harmony export */   serverOrHigherAuthTypeSchema: () => (/* binding */ serverOrHigherAuthTypeSchema),\n/* harmony export */   signInEmailSchema: () => (/* binding */ signInEmailSchema),\n/* harmony export */   signInResponseSchema: () => (/* binding */ signInResponseSchema),\n/* harmony export */   signedUpAtMillisSchema: () => (/* binding */ signedUpAtMillisSchema),\n/* harmony export */   strictEmailSchema: () => (/* binding */ strictEmailSchema),\n/* harmony export */   teamClientMetadataSchema: () => (/* binding */ teamClientMetadataSchema),\n/* harmony export */   teamClientReadOnlyMetadataSchema: () => (/* binding */ teamClientReadOnlyMetadataSchema),\n/* harmony export */   teamCreatedAtMillisSchema: () => (/* binding */ teamCreatedAtMillisSchema),\n/* harmony export */   teamCreatorUserIdSchema: () => (/* binding */ teamCreatorUserIdSchema),\n/* harmony export */   teamDisplayNameSchema: () => (/* binding */ teamDisplayNameSchema),\n/* harmony export */   teamIdSchema: () => (/* binding */ teamIdSchema),\n/* harmony export */   teamInvitationCallbackUrlSchema: () => (/* binding */ teamInvitationCallbackUrlSchema),\n/* harmony export */   teamInvitationEmailSchema: () => (/* binding */ teamInvitationEmailSchema),\n/* harmony export */   teamMemberDisplayNameSchema: () => (/* binding */ teamMemberDisplayNameSchema),\n/* harmony export */   teamMemberProfileImageUrlSchema: () => (/* binding */ teamMemberProfileImageUrlSchema),\n/* harmony export */   teamPermissionDescriptionSchema: () => (/* binding */ teamPermissionDescriptionSchema),\n/* harmony export */   teamProfileImageUrlSchema: () => (/* binding */ teamProfileImageUrlSchema),\n/* harmony export */   teamServerMetadataSchema: () => (/* binding */ teamServerMetadataSchema),\n/* harmony export */   teamSystemPermissions: () => (/* binding */ teamSystemPermissions),\n/* harmony export */   templateThemeIdSchema: () => (/* binding */ templateThemeIdSchema),\n/* harmony export */   urlSchema: () => (/* binding */ urlSchema),\n/* harmony export */   userClientMetadataSchema: () => (/* binding */ userClientMetadataSchema),\n/* harmony export */   userClientReadOnlyMetadataSchema: () => (/* binding */ userClientReadOnlyMetadataSchema),\n/* harmony export */   userDisplayNameSchema: () => (/* binding */ userDisplayNameSchema),\n/* harmony export */   userHasPasswordSchema: () => (/* binding */ userHasPasswordSchema),\n/* harmony export */   userIdOrMeSchema: () => (/* binding */ userIdOrMeSchema),\n/* harmony export */   userIdSchema: () => (/* binding */ userIdSchema),\n/* harmony export */   userLastActiveAtMillisSchema: () => (/* binding */ userLastActiveAtMillisSchema),\n/* harmony export */   userOAuthProviderSchema: () => (/* binding */ userOAuthProviderSchema),\n/* harmony export */   userOtpAuthEnabledMutationSchema: () => (/* binding */ userOtpAuthEnabledMutationSchema),\n/* harmony export */   userOtpAuthEnabledSchema: () => (/* binding */ userOtpAuthEnabledSchema),\n/* harmony export */   userPasskeyAuthEnabledSchema: () => (/* binding */ userPasskeyAuthEnabledSchema),\n/* harmony export */   userPasswordHashMutationSchema: () => (/* binding */ userPasswordHashMutationSchema),\n/* harmony export */   userPasswordMutationSchema: () => (/* binding */ userPasswordMutationSchema),\n/* harmony export */   userServerMetadataSchema: () => (/* binding */ userServerMetadataSchema),\n/* harmony export */   userSpecifiedIdSchema: () => (/* binding */ userSpecifiedIdSchema),\n/* harmony export */   userTotpSecretMutationSchema: () => (/* binding */ userTotpSecretMutationSchema),\n/* harmony export */   wildcardUrlSchema: () => (/* binding */ wildcardUrlSchema),\n/* harmony export */   yupArray: () => (/* binding */ yupArray),\n/* harmony export */   yupBoolean: () => (/* binding */ yupBoolean),\n/* harmony export */   yupDate: () => (/* binding */ yupDate),\n/* harmony export */   yupDefinedAndNonEmptyWhen: () => (/* binding */ yupDefinedAndNonEmptyWhen),\n/* harmony export */   yupDefinedWhen: () => (/* binding */ yupDefinedWhen),\n/* harmony export */   yupMixed: () => (/* binding */ yupMixed),\n/* harmony export */   yupNever: () => (/* binding */ yupNever),\n/* harmony export */   yupNumber: () => (/* binding */ yupNumber),\n/* harmony export */   yupObject: () => (/* binding */ yupObject),\n/* harmony export */   yupObjectWithAutoDefault: () => (/* binding */ yupObjectWithAutoDefault),\n/* harmony export */   yupRecord: () => (/* binding */ yupRecord),\n/* harmony export */   yupString: () => (/* binding */ yupString),\n/* harmony export */   yupTuple: () => (/* binding */ yupTuple),\n/* harmony export */   yupUnion: () => (/* binding */ yupUnion),\n/* harmony export */   yupValidate: () => (/* binding */ yupValidate)\n/* harmony export */ });\n/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! yup */ \"(app-pages-browser)/./node_modules/yup/index.esm.js\");\n/* harmony import */ var _known_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./known-errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/known-errors.js\");\n/* harmony import */ var _utils_bytes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/bytes.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js\");\n/* harmony import */ var _utils_currency_constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/currency-constants.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/currency-constants.js\");\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _utils_http_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/http.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/http.js\");\n/* harmony import */ var _utils_oauth_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/oauth.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/oauth.js\");\n/* harmony import */ var _utils_objects_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/objects.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n/* harmony import */ var _utils_strings_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n/* harmony import */ var _utils_urls_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/urls.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js\");\n/* harmony import */ var _utils_uuids_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/uuids.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/schema-fields.ts\n\n\n\n\n\n\n\n\n\n\n\nvar MAX_IMAGE_SIZE_BASE64_BYTES = 1e6;\nyup__WEBPACK_IMPORTED_MODULE_0__.addMethod(yup__WEBPACK_IMPORTED_MODULE_0__.string, \"nonEmpty\", function(message) {\n  return this.test(\n    \"non-empty\",\n    message ?? (({ path }) => `${path} must not be empty`),\n    (value) => {\n      return value !== \"\";\n    }\n  );\n});\nyup__WEBPACK_IMPORTED_MODULE_0__.addMethod(yup__WEBPACK_IMPORTED_MODULE_0__.Schema, \"hasNested\", function(path) {\n  if (!path.match(/^[a-zA-Z0-9_$:-]+$/)) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(`yupSchema.hasNested can currently only be used with alphanumeric keys, underscores, dollar signs, colons, and hyphens. Fix this in the future. Provided key: ${JSON.stringify(path)}`);\n  const schemaInfo = this.meta()?.stackSchemaInfo;\n  if (schemaInfo?.type === \"record\") {\n    return schemaInfo.keySchema.isValidSync(path);\n  } else if (schemaInfo?.type === \"union\") {\n    return schemaInfo.items.some((s) => s.hasNested(path));\n  } else {\n    try {\n      yup__WEBPACK_IMPORTED_MODULE_0__.reach(this, path);\n      return true;\n    } catch (e) {\n      if (e instanceof Error && e.message.includes(\"The schema does not contain the path\")) {\n        return false;\n      }\n      throw e;\n    }\n  }\n});\nyup__WEBPACK_IMPORTED_MODULE_0__.addMethod(yup__WEBPACK_IMPORTED_MODULE_0__.Schema, \"getNested\", function(path) {\n  if (!path.match(/^[a-zA-Z0-9_$:-]+$/)) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(`yupSchema.getNested can currently only be used with alphanumeric keys, underscores, dollar signs, colons, and hyphens. Fix this in the future. Provided key: ${path}`);\n  if (!this.hasNested(path)) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(`Tried to call yupSchema.getNested, but key is not present in the schema. Provided key: ${path}`, { path, schema: this });\n  const schemaInfo = this.meta()?.stackSchemaInfo;\n  if (schemaInfo?.type === \"record\") {\n    return schemaInfo.valueSchema;\n  } else if (schemaInfo?.type === \"union\") {\n    const schemasWithNested = schemaInfo.items.filter((s) => s.hasNested(path));\n    return yupUnion(...schemasWithNested.map((s) => s.getNested(path)));\n  } else {\n    return yup__WEBPACK_IMPORTED_MODULE_0__.reach(this, path);\n  }\n});\nasync function yupValidate(schema, obj, options) {\n  try {\n    return await schema.validate(obj, {\n      ...(0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_7__.omit)(options ?? {}, [\"currentUserId\"]),\n      context: {\n        ...options?.context,\n        stackAllowUserIdMe: options?.currentUserId !== void 0\n      }\n    });\n  } catch (error) {\n    if (error instanceof ReplaceFieldWithOwnUserId) {\n      const currentUserId = options?.currentUserId;\n      if (!currentUserId) throw new _known_errors_js__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CannotGetOwnUserWithoutUser();\n      let pathRemaining = error.path;\n      const fieldPath = [];\n      while (pathRemaining.length > 0) {\n        if (pathRemaining.startsWith(\"[\")) {\n          const index = pathRemaining.indexOf(\"]\");\n          if (index < 0) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"Invalid path\");\n          fieldPath.push(JSON.parse(pathRemaining.slice(1, index)));\n          pathRemaining = pathRemaining.slice(index + 1);\n        } else {\n          let dotIndex = pathRemaining.indexOf(\".\");\n          if (dotIndex === -1) dotIndex = pathRemaining.length;\n          fieldPath.push(pathRemaining.slice(0, dotIndex));\n          pathRemaining = pathRemaining.slice(dotIndex + 1);\n        }\n      }\n      const newObj = (0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_7__.deepPlainClone)(obj);\n      let it = newObj;\n      for (const field of fieldPath.slice(0, -1)) {\n        if (!Object.prototype.hasOwnProperty.call(it, field)) {\n          throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(`Segment ${field} of path ${error.path} not found in object`);\n        }\n        it = it[field];\n      }\n      it[fieldPath[fieldPath.length - 1]] = currentUserId;\n      return await yupValidate(schema, newObj, options);\n    }\n    throw error;\n  }\n}\nvar _idDescription = (identify) => `The unique identifier of the ${identify}`;\nvar _displayNameDescription = (identify) => `Human-readable ${identify} display name. This is not a unique identifier.`;\nvar _clientMetaDataDescription = (identify) => `Client metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client.`;\nvar _clientReadOnlyMetaDataDescription = (identify) => `Client read-only, server-writable metadata. Used as a data store, accessible from the client side. Do not store information that should not be exposed to the client. The client can read this data, but cannot modify it. This is useful for things like subscription status.`;\nvar _profileImageUrlDescription = (identify) => `URL of the profile image for ${identify}. Can be a Base64 encoded image. Must be smaller than 100KB. Please compress and crop to a square before passing in.`;\nvar _serverMetaDataDescription = (identify) => `Server metadata. Used as a data store, only accessible from the server side. You can store secret information related to the ${identify} here.`;\nvar _atMillisDescription = (identify) => `(the number of milliseconds since epoch, January 1, 1970, UTC)`;\nvar _createdAtMillisDescription = (identify) => `The time the ${identify} was created ${_atMillisDescription(identify)}`;\nvar _signedUpAtMillisDescription = `The time the user signed up ${_atMillisDescription}`;\nvar _lastActiveAtMillisDescription = `The time the user was last active ${_atMillisDescription}`;\nfunction yupString(...args) {\n  return yup__WEBPACK_IMPORTED_MODULE_0__.string(...args).meta({ stackSchemaInfo: { type: \"string\" } });\n}\nfunction yupNumber(...args) {\n  return yup__WEBPACK_IMPORTED_MODULE_0__.number(...args).meta({ stackSchemaInfo: { type: \"number\" } });\n}\nfunction yupBoolean(...args) {\n  return yup__WEBPACK_IMPORTED_MODULE_0__.boolean(...args).meta({ stackSchemaInfo: { type: \"boolean\" } });\n}\nfunction yupDate(...args) {\n  return yup__WEBPACK_IMPORTED_MODULE_0__.date(...args).meta({ stackSchemaInfo: { type: \"date\" } });\n}\nfunction _yupMixedInternal(...args) {\n  return yup__WEBPACK_IMPORTED_MODULE_0__.mixed(...args);\n}\nfunction yupMixed(...args) {\n  return _yupMixedInternal(...args).meta({ stackSchemaInfo: { type: \"mixed\" } });\n}\nfunction yupArray(...args) {\n  return yup__WEBPACK_IMPORTED_MODULE_0__.array(...args).meta({ stackSchemaInfo: { type: \"array\" } });\n}\nfunction yupTuple(schemas) {\n  if (schemas.length === 0) throw new Error(\"yupTuple must have at least one schema\");\n  return yup__WEBPACK_IMPORTED_MODULE_0__.tuple(schemas).meta({ stackSchemaInfo: { type: \"tuple\", items: schemas } });\n}\nfunction yupObjectWithAutoDefault(...args) {\n  const object2 = yup__WEBPACK_IMPORTED_MODULE_0__.object(...args).test(\n    \"no-unknown-object-properties\",\n    ({ path }) => `${path} contains unknown properties`,\n    (value, context) => {\n      if (context.options.context?.noUnknownPathPrefixes?.some((prefix) => context.path.startsWith(prefix))) {\n        if (context.schema.spec.noUnknown !== false) {\n          const availableKeys = new Set(Object.keys(context.schema.fields));\n          const unknownKeys = Object.keys(value ?? {}).filter((key) => !availableKeys.has(key));\n          if (unknownKeys.length > 0) {\n            return context.createError({\n              message: `${context.path || \"Object\"} contains unknown properties: ${unknownKeys.join(\", \")}`,\n              path: context.path,\n              params: { unknownKeys, availableKeys }\n            });\n          }\n        }\n      }\n      return true;\n    }\n  ).meta({ stackSchemaInfo: { type: \"object\" } });\n  return object2;\n}\nfunction yupObject(...args) {\n  const object2 = yupObjectWithAutoDefault(...args);\n  return object2.default(void 0);\n}\nfunction yupNever() {\n  return _yupMixedInternal().meta({ stackSchemaInfo: { type: \"never\" } }).test(\"never\", \"This value should never be reached\", () => false);\n}\nfunction yupUnion(...args) {\n  if (args.length === 0) throw new Error(\"yupUnion must have at least one schema\");\n  return _yupMixedInternal().meta({ stackSchemaInfo: { type: \"union\", items: args } }).test(\"is-one-of\", \"Invalid value\", async (value, context) => {\n    if (value == null) return true;\n    const errors = [];\n    for (const schema of args) {\n      try {\n        await yupValidate(schema, value, context.options);\n        return true;\n      } catch (e) {\n        errors.push(e);\n      }\n    }\n    return context.createError({\n      message: (0,_utils_strings_js__WEBPACK_IMPORTED_MODULE_8__.deindent)`\n        ${context.path} is not matched by any of the provided schemas:\n          ${errors.map((e, i) => (0,_utils_strings_js__WEBPACK_IMPORTED_MODULE_8__.deindent)`\n            Schema ${i}:\n              ${e.errors.join(\"\\n\")}\n          `).join(\"\\n\")}`,\n      path: context.path\n    });\n  });\n}\nfunction yupRecord(keySchema, valueSchema) {\n  return yupObject().meta({ stackSchemaInfo: { type: \"record\", keySchema, valueSchema } }).unknown(true).test(\n    \"record\",\n    \"${path} must be a record of valid values\",\n    async function(value, context) {\n      if (value == null) return true;\n      const { path, createError } = this;\n      if (typeof value !== \"object\") {\n        return createError({ message: `${path} must be an object` });\n      }\n      for (const key of Object.keys(value)) {\n        await yupValidate(keySchema, key, context.options);\n        try {\n          await yupValidate(valueSchema, value[key], {\n            ...context.options,\n            context: {\n              ...context.options.context,\n              path: path ? `${path}.${key}` : key\n            }\n          });\n        } catch (e) {\n          return createError({\n            path: path ? `${path}.${key}` : key,\n            message: e.message\n          });\n        }\n      }\n      return true;\n    }\n  );\n}\nfunction ensureObjectSchema(schema) {\n  if (!(schema instanceof yup__WEBPACK_IMPORTED_MODULE_0__.ObjectSchema)) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(`assertObjectSchema: schema is not an ObjectSchema: ${schema.describe().type}`);\n  return schema;\n}\nvar adaptSchema = yupMixed();\nvar urlSchema = yupString().test({\n  name: \"no-spaces\",\n  message: (params) => `${params.path} contains spaces`,\n  test: (value) => value == null || !value.includes(\" \")\n}).test({\n  name: \"url\",\n  message: (params) => `${params.path} is not a valid URL`,\n  test: (value) => value == null || (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_9__.isValidUrl)(value)\n});\nvar wildcardUrlSchema = yupString().test({\n  name: \"no-spaces\",\n  message: (params) => `${params.path} contains spaces`,\n  test: (value) => value == null || !value.includes(\" \")\n}).test({\n  name: \"wildcard-url\",\n  message: (params) => `${params.path} is not a valid URL or wildcard URL pattern`,\n  test: (value) => {\n    if (value == null) return true;\n    if (!value.includes(\"*\")) {\n      return (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_9__.isValidUrl)(value);\n    }\n    try {\n      const PLACEHOLDER = \"wildcard-placeholder\";\n      const normalizedUrl = value.replace(/\\*/g, PLACEHOLDER);\n      const url = new URL(normalizedUrl);\n      if (url.username.includes(PLACEHOLDER) || url.password.includes(PLACEHOLDER) || url.pathname.includes(PLACEHOLDER) || url.search.includes(PLACEHOLDER) || url.hash.includes(PLACEHOLDER)) {\n        return false;\n      }\n      if (url.protocol !== \"http:\" && url.protocol !== \"https:\") {\n        return false;\n      }\n      const hostPattern = url.hostname.split(PLACEHOLDER).join(\"*\");\n      return (0,_utils_urls_js__WEBPACK_IMPORTED_MODULE_9__.isValidHostnameWithWildcards)(hostPattern);\n    } catch (e) {\n      return false;\n    }\n  }\n});\nvar jsonSchema = yupMixed().nullable().defined().transform((value) => JSON.parse(JSON.stringify(value)));\nvar jsonStringSchema = yupString().test(\"json\", (params) => `${params.path} is not valid JSON`, (value) => {\n  if (value == null) return true;\n  try {\n    JSON.parse(value);\n    return true;\n  } catch (error) {\n    return false;\n  }\n});\nvar jsonStringOrEmptySchema = yupString().test(\"json\", (params) => `${params.path} is not valid JSON`, (value) => {\n  if (!value) return true;\n  try {\n    JSON.parse(value);\n    return true;\n  } catch (error) {\n    return false;\n  }\n});\nvar base64Schema = yupString().test(\"is-base64\", (params) => `${params.path} is not valid base64`, (value) => {\n  if (value == null) return true;\n  return (0,_utils_bytes_js__WEBPACK_IMPORTED_MODULE_2__.isBase64)(value);\n});\nvar passwordSchema = yupString().max(70);\nvar intervalSchema = yupTuple([yupNumber().min(0).integer().defined(), yupString().oneOf([\"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"year\"]).defined()]);\nvar dayIntervalSchema = yupTuple([yupNumber().min(0).integer().defined(), yupString().oneOf([\"day\", \"week\", \"month\", \"year\"]).defined()]);\nvar intervalOrNeverSchema = yupUnion(intervalSchema.defined(), yupString().oneOf([\"never\"]).defined());\nvar dayIntervalOrNeverSchema = yupUnion(dayIntervalSchema.defined(), yupString().oneOf([\"never\"]).defined());\nvar userSpecifiedIdSchema = (idName) => yupString().max(63).matches(/^[a-zA-Z_][a-zA-Z0-9_-]*$/, `${idName} must start with a letter, underscore, or number, and contain only letters, numbers, underscores, and hyphens`);\nvar moneyAmountSchema = (currency) => yupString().test(\"money-amount\", \"Invalid money amount\", (value, context) => {\n  if (value == null) return true;\n  const regex = /^([0-9]+)(\\.([0-9]+))?$/;\n  const match = value.match(regex);\n  if (!match) return context.createError({ message: \"Money amount must be in the format of <number> or <number>.<number>\" });\n  const whole = match[1];\n  const decimals = match[3];\n  if (decimals && decimals.length > currency.decimals) return context.createError({ message: `Too many decimals; ${currency.code} only has ${currency.decimals} decimals` });\n  if (whole !== \"0\" && whole.startsWith(\"0\")) return context.createError({ message: \"Money amount must not have leading zeros\" });\n  return true;\n});\nvar strictEmailSchema = (message) => yupString().email(message).max(256).matches(/^[^.]+(\\.[^.]+)*@.*\\.[^.][^.]+$/, message);\nvar emailSchema = yupString().email();\nvar clientOrHigherAuthTypeSchema = yupString().oneOf([\"client\", \"server\", \"admin\"]).defined();\nvar serverOrHigherAuthTypeSchema = yupString().oneOf([\"server\", \"admin\"]).defined();\nvar adminAuthTypeSchema = yupString().oneOf([\"admin\"]).defined();\nvar projectIdSchema = yupString().test((v) => v === void 0 || v === \"internal\" || (0,_utils_uuids_js__WEBPACK_IMPORTED_MODULE_10__.isUuid)(v)).meta({ openapiField: { description: _idDescription(\"project\"), exampleValue: \"e0b52f4d-dece-408c-af49-d23061bb0f8d\" } });\nvar projectBranchIdSchema = yupString().nonEmpty().max(255).meta({ openapiField: { description: _idDescription(\"project branch\"), exampleValue: \"main\" } });\nvar projectDisplayNameSchema = yupString().meta({ openapiField: { description: _displayNameDescription(\"project\"), exampleValue: \"MyMusic\" } });\nvar projectLogoUrlSchema = urlSchema.max(MAX_IMAGE_SIZE_BASE64_BYTES).meta({ openapiField: { description: \"URL of the logo for the project. This is usually a close to 1:1 image of the company logo.\", exampleValue: \"https://example.com/logo.png\" } });\nvar projectFullLogoUrlSchema = urlSchema.max(MAX_IMAGE_SIZE_BASE64_BYTES).meta({ openapiField: { description: \"URL of the full logo for the project. This is usually a vertical image with the logo and the company name.\", exampleValue: \"https://example.com/full-logo.png\" } });\nvar projectDescriptionSchema = yupString().nullable().meta({ openapiField: { description: \"A human readable description of the project\", exampleValue: \"A music streaming service\" } });\nvar projectCreatedAtMillisSchema = yupNumber().meta({ openapiField: { description: _createdAtMillisDescription(\"project\"), exampleValue: 163e10 } });\nvar projectIsProductionModeSchema = yupBoolean().meta({ openapiField: { description: \"Whether the project is in production mode\", exampleValue: true } });\nvar projectConfigIdSchema = yupString().meta({ openapiField: { description: _idDescription(\"project config\"), exampleValue: \"d09201f0-54f5-40bd-89ff-6d1815ddad24\" } });\nvar projectAllowLocalhostSchema = yupBoolean().meta({ openapiField: { description: \"Whether localhost is allowed as a domain for this project. Should only be allowed in development mode\", exampleValue: true } });\nvar projectCreateTeamOnSignUpSchema = yupBoolean().meta({ openapiField: { description: \"Whether a team should be created for each user that signs up\", exampleValue: true } });\nvar projectMagicLinkEnabledSchema = yupBoolean().meta({ openapiField: { description: \"Whether magic link authentication is enabled for this project\", exampleValue: true } });\nvar projectPasskeyEnabledSchema = yupBoolean().meta({ openapiField: { description: \"Whether passkey authentication is enabled for this project\", exampleValue: true } });\nvar projectClientTeamCreationEnabledSchema = yupBoolean().meta({ openapiField: { description: \"Whether client users can create teams\", exampleValue: true } });\nvar projectClientUserDeletionEnabledSchema = yupBoolean().meta({ openapiField: { description: \"Whether client users can delete their own account from the client\", exampleValue: true } });\nvar projectSignUpEnabledSchema = yupBoolean().meta({ openapiField: { description: \"Whether users can sign up new accounts, or whether they are only allowed to sign in to existing accounts. Regardless of this option, the server API can always create new users with the `POST /users` endpoint.\", exampleValue: true } });\nvar projectCredentialEnabledSchema = yupBoolean().meta({ openapiField: { description: \"Whether email password authentication is enabled for this project\", exampleValue: true } });\nvar oauthIdSchema = yupString().oneOf(_utils_oauth_js__WEBPACK_IMPORTED_MODULE_6__.allProviders).meta({ openapiField: { description: `OAuth provider ID, one of ${_utils_oauth_js__WEBPACK_IMPORTED_MODULE_6__.allProviders.map((x) => `\\`${x}\\``).join(\", \")}`, exampleValue: \"google\" } });\nvar oauthEnabledSchema = yupBoolean().meta({ openapiField: { description: \"Whether the OAuth provider is enabled. If an provider is first enabled, then disabled, it will be shown in the list but with enabled=false\", exampleValue: true } });\nvar oauthTypeSchema = yupString().oneOf([\"shared\", \"standard\"]).meta({ openapiField: { description: 'OAuth provider type, one of shared, standard. \"shared\" uses Stack shared OAuth keys and it is only meant for development. \"standard\" uses your own OAuth keys and will show your logo and company name when signing in with the provider.', exampleValue: \"standard\" } });\nvar oauthClientIdSchema = yupString().meta({ openapiField: { description: 'OAuth client ID. Needs to be specified when using type=\"standard\"', exampleValue: \"google-oauth-client-id\" } });\nvar oauthClientSecretSchema = yupString().meta({ openapiField: { description: 'OAuth client secret. Needs to be specified when using type=\"standard\"', exampleValue: \"google-oauth-client-secret\" } });\nvar oauthFacebookConfigIdSchema = yupString().meta({ openapiField: { description: \"The configuration id for Facebook business login (for things like ads and marketing). This is only required if you are using the standard OAuth with Facebook and you are using Facebook business login.\" } });\nvar oauthMicrosoftTenantIdSchema = yupString().meta({ openapiField: { description: \"The Microsoft tenant id for Microsoft directory. This is only required if you are using the standard OAuth with Microsoft and you have an Azure AD tenant.\" } });\nvar oauthAccountMergeStrategySchema = yupString().oneOf([\"link_method\", \"raise_error\", \"allow_duplicates\"]).meta({ openapiField: { description: \"Determines how to handle OAuth logins that match an existing user by email. `link_method` adds the OAuth method to the existing user. `raise_error` rejects the login with an error. `allow_duplicates` creates a new user.\", exampleValue: \"link_method\" } });\nvar emailTypeSchema = yupString().oneOf([\"shared\", \"standard\"]).meta({ openapiField: { description: 'Email provider type, one of shared, standard. \"shared\" uses Stack shared email provider and it is only meant for development. \"standard\" uses your own email server and will have your email address as the sender.', exampleValue: \"standard\" } });\nvar emailSenderNameSchema = yupString().meta({ openapiField: { description: 'Email sender name. Needs to be specified when using type=\"standard\"', exampleValue: \"Stack\" } });\nvar emailHostSchema = yupString().meta({ openapiField: { description: 'Email host. Needs to be specified when using type=\"standard\"', exampleValue: \"smtp.your-domain.com\" } });\nvar emailPortSchema = yupNumber().min(0).max(65535).meta({ openapiField: { description: 'Email port. Needs to be specified when using type=\"standard\"', exampleValue: 587 } });\nvar emailUsernameSchema = yupString().meta({ openapiField: { description: 'Email username. Needs to be specified when using type=\"standard\"', exampleValue: \"smtp-email\" } });\nvar emailSenderEmailSchema = emailSchema.meta({ openapiField: { description: 'Email sender email. Needs to be specified when using type=\"standard\"', exampleValue: \"example@your-domain.com\" } });\nvar emailPasswordSchema = passwordSchema.meta({ openapiField: { description: 'Email password. Needs to be specified when using type=\"standard\"', exampleValue: \"your-email-password\" } });\nvar handlerPathSchema = yupString().test(\"is-handler-path\", \"Handler path must start with /\", (value) => value?.startsWith(\"/\")).meta({ openapiField: { description: 'Handler path. If you did not setup a custom handler path, it should be \"/handler\" by default. It needs to start with /', exampleValue: \"/handler\" } });\nvar emailThemeSchema = yupString().meta({ openapiField: { description: \"Email theme id for the project. Determines the visual style of emails sent by the project.\" } });\nvar emailThemeListSchema = yupRecord(\n  yupString().uuid(),\n  yupObject({\n    displayName: yupString().meta({ openapiField: { description: \"Email theme name\", exampleValue: \"Default Light\" } }).defined(),\n    tsxSource: yupString().meta({ openapiField: { description: \"Email theme source code tsx component\" } }).defined()\n  })\n).meta({ openapiField: { description: \"Record of email theme IDs to their display name and source code\" } });\nvar templateThemeIdSchema = yupMixed().test((v) => v === void 0 || v === false || v === null || typeof v === \"string\" && (0,_utils_uuids_js__WEBPACK_IMPORTED_MODULE_10__.isUuid)(v)).meta({ openapiField: { description: \"Email theme id for the template\" } }).optional();\nvar emailTemplateListSchema = yupRecord(\n  yupString().uuid(),\n  yupObject({\n    displayName: yupString().meta({ openapiField: { description: \"Email template name\", exampleValue: \"Email Verification\" } }).defined(),\n    tsxSource: yupString().meta({ openapiField: { description: \"Email template source code tsx component\" } }).defined(),\n    // themeId can be one of three values:\n    // 1. A valid theme id\n    // 2. false, which means the template uses no theme\n    // 3. undefined/not given, which means the template uses the project's active theme\n    themeId: templateThemeIdSchema\n  })\n).meta({ openapiField: { description: \"Record of email template IDs to their display name and source code\" } });\nvar customerTypeSchema = yupString().oneOf([\"user\", \"team\", \"custom\"]);\nvar validateHasAtLeastOneSupportedCurrency = (value, context) => {\n  if (!value) return true;\n  const currencies = Object.keys(value).filter((key) => _utils_currency_constants_js__WEBPACK_IMPORTED_MODULE_3__.SUPPORTED_CURRENCIES.some((c) => c.code === key));\n  if (currencies.length === 0) {\n    return context.createError({ message: \"At least one currency is required\" });\n  }\n  return true;\n};\nvar offerPriceSchema = yupObject({\n  ...(0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_7__.typedFromEntries)(_utils_currency_constants_js__WEBPACK_IMPORTED_MODULE_3__.SUPPORTED_CURRENCIES.map((currency) => [currency.code, moneyAmountSchema(currency).optional()])),\n  interval: dayIntervalSchema.optional(),\n  serverOnly: yupBoolean(),\n  freeTrial: dayIntervalSchema.optional()\n}).test(\"at-least-one-currency\", (value, context) => validateHasAtLeastOneSupportedCurrency(value, context));\nvar priceOrIncludeByDefaultSchema = yupUnion(\n  yupString().oneOf([\"include-by-default\"]).meta({ openapiField: { description: \"Makes this item free and includes it by default for all customers.\", exampleValue: \"include-by-default\" } }),\n  yupRecord(\n    userSpecifiedIdSchema(\"priceId\"),\n    offerPriceSchema\n  )\n);\nvar offerSchema = yupObject({\n  displayName: yupString(),\n  groupId: userSpecifiedIdSchema(\"groupId\").optional().meta({ openapiField: { description: \"The ID of the group this offer belongs to. Within a group, all offers are mutually exclusive unless they are an add-on to another offer in the group.\", exampleValue: \"group-id\" } }),\n  isAddOnTo: yupUnion(\n    yupBoolean().isFalse(),\n    yupRecord(\n      userSpecifiedIdSchema(\"offerId\"),\n      yupBoolean().isTrue().defined()\n    )\n  ).optional().meta({ openapiField: { description: \"The offers that this offer is an add-on to. If this is set, the customer must already have one of the offers in the record to be able to purchase this offer.\", exampleValue: { \"offer-id\": true } } }),\n  customerType: customerTypeSchema.defined(),\n  freeTrial: dayIntervalSchema.optional(),\n  serverOnly: yupBoolean(),\n  stackable: yupBoolean(),\n  prices: priceOrIncludeByDefaultSchema.defined(),\n  includedItems: yupRecord(\n    userSpecifiedIdSchema(\"itemId\"),\n    yupObject({\n      quantity: yupNumber().defined(),\n      repeat: dayIntervalOrNeverSchema.optional(),\n      expires: yupString().oneOf([\"never\", \"when-purchase-expires\", \"when-repeated\"]).optional()\n    })\n  )\n});\nvar inlineOfferSchema = yupObject({\n  display_name: yupString().defined(),\n  customer_type: customerTypeSchema.defined(),\n  free_trial: dayIntervalSchema.optional(),\n  server_only: yupBoolean().oneOf([true]).default(true),\n  prices: yupRecord(\n    userSpecifiedIdSchema(\"priceId\"),\n    yupObject({\n      ...(0,_utils_objects_js__WEBPACK_IMPORTED_MODULE_7__.typedFromEntries)(_utils_currency_constants_js__WEBPACK_IMPORTED_MODULE_3__.SUPPORTED_CURRENCIES.map((currency) => [currency.code, moneyAmountSchema(currency).optional()])),\n      interval: dayIntervalSchema.optional(),\n      free_trial: dayIntervalSchema.optional()\n    }).test(\"at-least-one-currency\", (value, context) => validateHasAtLeastOneSupportedCurrency(value, context))\n  ),\n  included_items: yupRecord(\n    userSpecifiedIdSchema(\"itemId\"),\n    yupObject({\n      quantity: yupNumber(),\n      repeat: dayIntervalOrNeverSchema.optional(),\n      expires: yupString().oneOf([\"never\", \"when-purchase-expires\", \"when-repeated\"]).optional()\n    })\n  )\n});\nvar ReplaceFieldWithOwnUserId = class extends Error {\n  constructor(path) {\n    super(`This error should be caught by whoever validated the schema, and the field in the path '${path}' should be replaced with the current user's id. This is a workaround to yup not providing access to the context inside the transform function.`);\n    this.path = path;\n  }\n};\nvar userIdMeSentinelUuid = \"cad564fd-f81b-43f4-b390-98abf3fcc17e\";\nvar userIdOrMeSchema = yupString().uuid().transform((v) => {\n  if (v === \"me\") return userIdMeSentinelUuid;\n  else return v;\n}).test((v, context) => {\n  if (!(\"stackAllowUserIdMe\" in (context.options.context ?? {}))) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"userIdOrMeSchema is not allowed in this context. Make sure you're using yupValidate from schema-fields.ts to validate, instead of schema.validate(...).\");\n  if (!context.options.context?.stackAllowUserIdMe) throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.StackAssertionError(\"userIdOrMeSchema is not allowed in this context. Make sure you're passing in the currentUserId option in yupValidate.\");\n  if (v === userIdMeSentinelUuid) throw new ReplaceFieldWithOwnUserId(context.path);\n  return true;\n}).meta({ openapiField: { description: \"The ID of the user, or the special value `me` for the currently authenticated user\", exampleValue: \"3241a285-8329-4d69-8f3d-316e08cf140c\" } });\nvar userIdSchema = yupString().uuid().meta({ openapiField: { description: _idDescription(\"user\"), exampleValue: \"3241a285-8329-4d69-8f3d-316e08cf140c\" } });\nvar primaryEmailSchema = emailSchema.meta({ openapiField: { description: \"Primary email\", exampleValue: \"johndoe@example.com\" } });\nvar primaryEmailAuthEnabledSchema = yupBoolean().meta({ openapiField: { description: \"Whether the primary email is used for authentication. If this is set to `false`, the user will not be able to sign in with the primary email with password or OTP\", exampleValue: true } });\nvar primaryEmailVerifiedSchema = yupBoolean().meta({ openapiField: { description: \"Whether the primary email has been verified to belong to this user\", exampleValue: true } });\nvar userDisplayNameSchema = yupString().nullable().max(256).meta({ openapiField: { description: _displayNameDescription(\"user\"), exampleValue: \"John Doe\" } });\nvar selectedTeamIdSchema = yupString().uuid().meta({ openapiField: { description: \"ID of the team currently selected by the user\", exampleValue: \"team-id\" } });\nvar profileImageUrlSchema = urlSchema.max(MAX_IMAGE_SIZE_BASE64_BYTES).meta({ openapiField: { description: _profileImageUrlDescription(\"user\"), exampleValue: \"https://example.com/image.jpg\" } });\nvar signedUpAtMillisSchema = yupNumber().meta({ openapiField: { description: _signedUpAtMillisDescription, exampleValue: 163e10 } });\nvar userClientMetadataSchema = jsonSchema.meta({ openapiField: { description: _clientMetaDataDescription(\"user\"), exampleValue: { key: \"value\" } } });\nvar userClientReadOnlyMetadataSchema = jsonSchema.meta({ openapiField: { description: _clientReadOnlyMetaDataDescription(\"user\"), exampleValue: { key: \"value\" } } });\nvar userServerMetadataSchema = jsonSchema.meta({ openapiField: { description: _serverMetaDataDescription(\"user\"), exampleValue: { key: \"value\" } } });\nvar userOAuthProviderSchema = yupObject({\n  id: yupString().defined(),\n  type: yupString().oneOf(_utils_oauth_js__WEBPACK_IMPORTED_MODULE_6__.allProviders).defined(),\n  provider_user_id: yupString().defined()\n});\nvar userLastActiveAtMillisSchema = yupNumber().nullable().meta({ openapiField: { description: _lastActiveAtMillisDescription, exampleValue: 163e10 } });\nvar userPasskeyAuthEnabledSchema = yupBoolean().meta({ openapiField: { hidden: true, description: \"Whether the user has passkeys enabled\", exampleValue: false } });\nvar userOtpAuthEnabledSchema = yupBoolean().meta({ openapiField: { hidden: true, description: \"Whether the user has OTP/magic link enabled. \", exampleValue: true } });\nvar userOtpAuthEnabledMutationSchema = yupBoolean().meta({ openapiField: { hidden: true, description: \"Whether the user has OTP/magic link enabled. Note that only accounts with verified emails can sign-in with OTP.\", exampleValue: true } });\nvar userHasPasswordSchema = yupBoolean().meta({ openapiField: { hidden: true, description: \"Whether the user has a password set. If the user does not have a password set, they will not be able to sign in with email/password.\", exampleValue: true } });\nvar userPasswordMutationSchema = passwordSchema.nullable().meta({ openapiField: { description: \"Sets the user's password. Doing so revokes all current sessions.\", exampleValue: \"my-new-password\" } }).max(70);\nvar userPasswordHashMutationSchema = yupString().nonEmpty().meta({ openapiField: { description: \"If `password` is not given, sets the user's password hash to the given string in Modular Crypt Format (ex.: `$2a$10$VIhIOofSMqGdGlL4wzE//e.77dAQGqNtF/1dT7bqCrVtQuInWy2qi`). Doing so revokes all current sessions.\" } });\nvar userTotpSecretMutationSchema = base64Schema.nullable().meta({ openapiField: { description: \"Enables 2FA and sets a TOTP secret for the user. Set to null to disable 2FA.\", exampleValue: \"dG90cC1zZWNyZXQ=\" } });\nvar accessTokenPayloadSchema = yupObject({\n  sub: yupString().defined(),\n  exp: yupNumber().optional(),\n  iss: yupString().defined(),\n  aud: yupString().defined(),\n  project_id: yupString().defined(),\n  branch_id: yupString().defined(),\n  refresh_token_id: yupString().defined(),\n  role: yupString().oneOf([\"authenticated\"]).defined(),\n  name: yupString().defined().nullable(),\n  email: yupString().defined().nullable(),\n  email_verified: yupBoolean().defined(),\n  selected_team_id: yupString().defined().nullable(),\n  is_anonymous: yupBoolean().defined()\n});\nvar signInEmailSchema = strictEmailSchema(void 0).meta({ openapiField: { description: \"The email to sign in with.\", exampleValue: \"johndoe@example.com\" } });\nvar emailOtpSignInCallbackUrlSchema = urlSchema.meta({ openapiField: { description: \"The base callback URL to construct the magic link from. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/auth/otp/sign-in` endpoint.\", exampleValue: \"https://example.com/handler/magic-link-callback\" } });\nvar emailVerificationCallbackUrlSchema = urlSchema.meta({ openapiField: { description: \"The base callback URL to construct a verification link for the verification e-mail. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/contact-channels/verify` endpoint.\", exampleValue: \"https://example.com/handler/email-verification\" } });\nvar accessTokenResponseSchema = yupString().meta({ openapiField: { description: \"Short-lived access token that can be used to authenticate the user\", exampleValue: \"eyJhmMiJB2TO...diI4QT\" } });\nvar refreshTokenResponseSchema = yupString().meta({ openapiField: { description: \"Long-lived refresh token that can be used to obtain a new access token\", exampleValue: \"i8ns3aq2...14y\" } });\nvar signInResponseSchema = yupObject({\n  refresh_token: refreshTokenResponseSchema.defined(),\n  access_token: accessTokenResponseSchema.defined(),\n  is_new_user: yupBoolean().meta({ openapiField: { description: \"Whether the user is a new user\", exampleValue: true } }).defined(),\n  user_id: userIdSchema.defined()\n});\nvar teamSystemPermissions = [\n  \"$update_team\",\n  \"$delete_team\",\n  \"$read_members\",\n  \"$remove_members\",\n  \"$invite_members\",\n  \"$manage_api_keys\"\n];\nvar permissionDefinitionIdSchema = yupString().matches(/^\\$?[a-z0-9_:]+$/, 'Only lowercase letters, numbers, \":\", \"_\" and optional \"$\" at the beginning are allowed').test(\"is-system-permission\", \"System permissions must start with a dollar sign\", (value, ctx) => {\n  if (!value) return true;\n  if (value.startsWith(\"$\") && !teamSystemPermissions.includes(value)) {\n    return ctx.createError({ message: \"Invalid system permission\" });\n  }\n  return true;\n}).meta({ openapiField: { description: `The permission ID used to uniquely identify a permission. Can either be a custom permission with lowercase letters, numbers, \\`:\\`, and \\`_\\` characters, or one of the system permissions: ${teamSystemPermissions.map((x) => `\\`${x}\\``).join(\", \")}`, exampleValue: \"read_secret_info\" } });\nvar customPermissionDefinitionIdSchema = yupString().matches(/^[a-z0-9_:]+$/, 'Only lowercase letters, numbers, \":\", \"_\" are allowed').meta({ openapiField: { description: 'The permission ID used to uniquely identify a permission. Can only contain lowercase letters, numbers, \":\", and \"_\" characters', exampleValue: \"read_secret_info\" } });\nvar teamPermissionDescriptionSchema = yupString().meta({ openapiField: { description: \"A human-readable description of the permission\", exampleValue: \"Read secret information\" } });\nvar containedPermissionIdsSchema = yupArray(permissionDefinitionIdSchema.defined()).meta({ openapiField: { description: \"The IDs of the permissions that are contained in this permission\", exampleValue: [\"read_public_info\"] } });\nvar teamIdSchema = yupString().uuid().meta({ openapiField: { description: _idDescription(\"team\"), exampleValue: \"ad962777-8244-496a-b6a2-e0c6a449c79e\" } });\nvar teamDisplayNameSchema = yupString().meta({ openapiField: { description: _displayNameDescription(\"team\"), exampleValue: \"My Team\" } });\nvar teamProfileImageUrlSchema = urlSchema.max(1e6).meta({ openapiField: { description: _profileImageUrlDescription(\"team\"), exampleValue: \"https://example.com/image.jpg\" } });\nvar teamClientMetadataSchema = jsonSchema.meta({ openapiField: { description: _clientMetaDataDescription(\"team\"), exampleValue: { key: \"value\" } } });\nvar teamClientReadOnlyMetadataSchema = jsonSchema.meta({ openapiField: { description: _clientReadOnlyMetaDataDescription(\"team\"), exampleValue: { key: \"value\" } } });\nvar teamServerMetadataSchema = jsonSchema.meta({ openapiField: { description: _serverMetaDataDescription(\"team\"), exampleValue: { key: \"value\" } } });\nvar teamCreatedAtMillisSchema = yupNumber().meta({ openapiField: { description: _createdAtMillisDescription(\"team\"), exampleValue: 163e10 } });\nvar teamInvitationEmailSchema = emailSchema.meta({ openapiField: { description: \"The email of the user to invite.\", exampleValue: \"johndoe@example.com\" } });\nvar teamInvitationCallbackUrlSchema = urlSchema.meta({ openapiField: { description: \"The base callback URL to construct an invite link with. A query parameter `code` with the verification code will be appended to it. The page should then make a request to the `/team-invitations/accept` endpoint.\", exampleValue: \"https://example.com/handler/team-invitation\" } });\nvar teamCreatorUserIdSchema = userIdOrMeSchema.meta({ openapiField: { description: 'The ID of the creator of the team. If not specified, the user will not be added to the team. Can be either \"me\" or the ID of the user. Only used on the client side.', exampleValue: \"me\" } });\nvar teamMemberDisplayNameSchema = yupString().meta({ openapiField: { description: _displayNameDescription(\"team member\") + \" Note that this is separate from the display_name of the user.\", exampleValue: \"John Doe\" } });\nvar teamMemberProfileImageUrlSchema = urlSchema.max(1e6).meta({ openapiField: { description: _profileImageUrlDescription(\"team member\"), exampleValue: \"https://example.com/image.jpg\" } });\nvar contactChannelIdSchema = yupString().uuid().meta({ openapiField: { description: _idDescription(\"contact channel\"), exampleValue: \"b3d396b8-c574-4c80-97b3-50031675ceb2\" } });\nvar contactChannelTypeSchema = yupString().oneOf([\"email\"]).meta({ openapiField: { description: `The type of the contact channel. Currently only \"email\" is supported.`, exampleValue: \"email\" } });\nvar contactChannelValueSchema = yupString().when(\"type\", {\n  is: \"email\",\n  then: (schema) => schema.email()\n}).meta({ openapiField: { description: \"The value of the contact channel. For email, this should be a valid email address.\", exampleValue: \"johndoe@example.com\" } });\nvar contactChannelUsedForAuthSchema = yupBoolean().meta({ openapiField: { description: \"Whether the contact channel is used for authentication. If this is set to `true`, the user will be able to sign in with the contact channel with password or OTP.\", exampleValue: true } });\nvar contactChannelIsVerifiedSchema = yupBoolean().meta({ openapiField: { description: \"Whether the contact channel has been verified. If this is set to `true`, the contact channel has been verified to belong to the user.\", exampleValue: true } });\nvar contactChannelIsPrimarySchema = yupBoolean().meta({ openapiField: { description: \"Whether the contact channel is the primary contact channel. If this is set to `true`, it will be used for authentication and notifications by default.\", exampleValue: true } });\nvar oauthProviderIdSchema = yupString().uuid().meta({ openapiField: { description: _idDescription(\"OAuth provider\"), exampleValue: \"b3d396b8-c574-4c80-97b3-50031675ceb2\" } });\nvar oauthProviderEmailSchema = emailSchema.meta({ openapiField: { description: \"Email of the OAuth provider. This is used to display and identify the OAuth provider in the UI.\", exampleValue: \"test@gmail.com\" } });\nvar oauthProviderTypeSchema = yupString().oneOf(_utils_oauth_js__WEBPACK_IMPORTED_MODULE_6__.allProviders).meta({ openapiField: { description: `OAuth provider type, one of ${_utils_oauth_js__WEBPACK_IMPORTED_MODULE_6__.allProviders.map((x) => `\\`${x}\\``).join(\", \")}`, exampleValue: \"google\" } });\nvar oauthProviderAllowSignInSchema = yupBoolean().meta({ openapiField: { description: \"Whether the user can use this OAuth provider to sign in. Only one OAuth provider per type can have this set to `true`.\", exampleValue: true } });\nvar oauthProviderAllowConnectedAccountsSchema = yupBoolean().meta({ openapiField: { description: \"Whether the user can use this OAuth provider as connected account. Multiple OAuth providers per type can have this set to `true`.\", exampleValue: true } });\nvar oauthProviderAccountIdSchema = yupString().meta({ openapiField: { description: \"Account ID of the OAuth provider. This uniquely identifies the account on the provider side.\", exampleValue: \"google-account-id-12345\" } });\nvar oauthProviderProviderConfigIdSchema = yupString().meta({ openapiField: { description: \"Provider config ID of the OAuth provider. This uniquely identifies the provider config on config.json file\", exampleValue: \"google\" } });\nvar basicAuthorizationHeaderSchema = yupString().test(\"is-basic-authorization-header\", 'Authorization header must be in the format \"Basic <base64>\"', (value) => {\n  if (!value) return true;\n  return (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_5__.decodeBasicAuthorizationHeader)(value) !== null;\n});\nvar neonAuthorizationHeaderSchema = basicAuthorizationHeaderSchema.test(\"is-authorization-header\", \"Invalid client_id:client_secret values; did you use the correct values for the integration?\", (value) => {\n  if (!value) return true;\n  const [clientId, clientSecret] = (0,_utils_http_js__WEBPACK_IMPORTED_MODULE_5__.decodeBasicAuthorizationHeader)(value) ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_4__.throwErr)(`Authz header invalid? This should've been validated by basicAuthorizationHeaderSchema: ${value}`);\n  for (const neonClientConfig of JSON.parse(process.env.STACK_INTEGRATION_CLIENTS_CONFIG || \"[]\")) {\n    if (clientId === neonClientConfig.client_id && clientSecret === neonClientConfig.client_secret) return true;\n  }\n  return false;\n});\nfunction yupDefinedWhen(schema, triggers) {\n  const entries = Object.entries(triggers);\n  return schema.when(entries.map(([key]) => key), {\n    is: (...values) => entries.every(([key, value], index) => value === values[index]),\n    then: (schema2) => schema2.defined(),\n    otherwise: (schema2) => schema2.optional()\n  });\n}\nfunction yupDefinedAndNonEmptyWhen(schema, triggers) {\n  const entries = Object.entries(triggers);\n  return schema.when(entries.map(([key]) => key), {\n    is: (...values) => entries.every(([key, value], index) => value === values[index]),\n    then: (schema2) => schema2.defined().nonEmpty(),\n    otherwise: (schema2) => schema2.optional()\n  });\n}\n\n//# sourceMappingURL=schema-fields.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/schema-fields.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/sessions.js":
/*!********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/sessions.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* binding */ AccessToken),\n/* harmony export */   InternalSession: () => (/* binding */ InternalSession),\n/* harmony export */   RefreshToken: () => (/* binding */ RefreshToken)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jose */ \"(app-pages-browser)/./node_modules/jose/dist/browser/util/decode_jwt.js\");\n/* harmony import */ var _schema_fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schema-fields.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/schema-fields.js\");\n/* harmony import */ var _utils_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _utils_stores_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/stores.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js\");\n// src/sessions.ts\n\n\n\n\nfunction decodeAccessTokenIfValid(token) {\n  try {\n    const payload = jose__WEBPACK_IMPORTED_MODULE_3__.decodeJwt(token);\n    return _schema_fields_js__WEBPACK_IMPORTED_MODULE_0__.accessTokenPayloadSchema.validateSync(payload);\n  } catch (e) {\n    return null;\n  }\n}\nvar AccessToken = class _AccessToken {\n  constructor(token) {\n    this.token = token;\n    if (token === \"undefined\") {\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Access token is the string 'undefined'; it's unlikely this is the correct value. They're supposed to be unguessable!\");\n    }\n  }\n  static createIfValid(token) {\n    const payload = decodeAccessTokenIfValid(token);\n    if (!payload) return null;\n    return new _AccessToken(token);\n  }\n  get payload() {\n    return decodeAccessTokenIfValid(this.token) ?? (0,_utils_errors_js__WEBPACK_IMPORTED_MODULE_1__.throwErr)(\"Invalid access token in payload (should've been validated in createIfValid)\", { token: this.token });\n  }\n  get expiresAt() {\n    const { exp } = this.payload;\n    if (exp === void 0) return /* @__PURE__ */ new Date(864e13);\n    return new Date(exp * 1e3);\n  }\n  /**\n   * @returns The number of milliseconds until the access token expires, or 0 if it has already expired.\n   */\n  get expiresInMillis() {\n    return Math.max(0, this.expiresAt.getTime() - Date.now());\n  }\n  isExpired() {\n    return this.expiresInMillis <= 0;\n  }\n};\nvar RefreshToken = class {\n  constructor(token) {\n    this.token = token;\n    if (token === \"undefined\") {\n      throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Refresh token is the string 'undefined'; it's unlikely this is the correct value. They're supposed to be unguessable!\");\n    }\n  }\n};\nvar InternalSession = class _InternalSession {\n  constructor(_options) {\n    this._options = _options;\n    /**\n     * Whether the session as a whole is known to be invalid (ie. both access and refresh tokens are invalid). Used as a cache to avoid making multiple requests to the server (sessions never go back to being valid after being invalidated).\n     *\n     * It is possible for the access token to be invalid but the refresh token to be valid, in which case the session is\n     * still valid (just needs a refresh). It is also possible for the access token to be valid but the refresh token to\n     * be invalid, in which case the session is also valid (eg. if the refresh token is null because the user only passed\n     * in an access token, eg. in a server-side request handler).\n     */\n    this._knownToBeInvalid = new _utils_stores_js__WEBPACK_IMPORTED_MODULE_2__.Store(false);\n    this._refreshPromise = null;\n    this._accessToken = new _utils_stores_js__WEBPACK_IMPORTED_MODULE_2__.Store(_options.accessToken ? AccessToken.createIfValid(_options.accessToken) : null);\n    this._refreshToken = _options.refreshToken ? new RefreshToken(_options.refreshToken) : null;\n    if (_options.accessToken === null && _options.refreshToken === null) {\n      this._knownToBeInvalid.set(true);\n    }\n    this.sessionKey = _InternalSession.calculateSessionKey({ accessToken: _options.accessToken ?? null, refreshToken: _options.refreshToken });\n  }\n  static calculateSessionKey(ofTokens) {\n    if (ofTokens.refreshToken) {\n      return `refresh-${ofTokens.refreshToken}`;\n    } else if (ofTokens.accessToken) {\n      return `access-${ofTokens.accessToken}`;\n    } else {\n      return \"not-logged-in\";\n    }\n  }\n  isKnownToBeInvalid() {\n    return this._knownToBeInvalid.get();\n  }\n  /**\n   * Marks the session object as invalid, meaning that the refresh and access tokens can no longer be used.\n   */\n  markInvalid() {\n    this._accessToken.set(null);\n    this._knownToBeInvalid.set(true);\n  }\n  onInvalidate(callback) {\n    return this._knownToBeInvalid.onChange(() => callback());\n  }\n  /**\n   * Returns the access token if it is found in the cache and not expired yet, or null otherwise. Never fetches new tokens.\n   */\n  getAccessTokenIfNotExpiredYet(minMillisUntilExpiration) {\n    if (minMillisUntilExpiration > 6e4) {\n      throw new Error(`Required access token expiry ${minMillisUntilExpiration}ms is too long; access tokens are too short to be used for more than 60s`);\n    }\n    const accessToken = this._getPotentiallyInvalidAccessTokenIfAvailable();\n    if (!accessToken || accessToken.expiresInMillis < minMillisUntilExpiration) return null;\n    return accessToken;\n  }\n  /**\n   * Returns the access token if it is found in the cache, fetching it otherwise.\n   *\n   * This is usually the function you want to call to get an access token. Either set `minMillisUntilExpiration` to a reasonable value, or catch errors that occur if it expires, and call `markAccessTokenExpired` to mark the token as expired if so (after which a call to this function will always refetch the token).\n   *\n   * @returns null if the session is known to be invalid, cached tokens if they exist in the cache and the access token hasn't expired yet (the refresh token might still be invalid), or new tokens otherwise.\n   */\n  async getOrFetchLikelyValidTokens(minMillisUntilExpiration) {\n    const accessToken = this.getAccessTokenIfNotExpiredYet(minMillisUntilExpiration);\n    if (!accessToken) {\n      const newTokens = await this.fetchNewTokens();\n      const expiresInMillis = newTokens?.accessToken.expiresInMillis;\n      if (expiresInMillis && expiresInMillis < minMillisUntilExpiration) {\n        throw new _utils_errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(`Required access token expiry ${minMillisUntilExpiration}ms is too long; access tokens are too short when they're generated (${expiresInMillis}ms)`);\n      }\n      return newTokens;\n    }\n    return { accessToken, refreshToken: this._refreshToken };\n  }\n  /**\n   * Fetches new tokens that are, at the time of fetching, guaranteed to be valid.\n   *\n   * The newly generated tokens are short-lived, so it's good practice not to rely on their validity (if possible). However, this function is useful in some cases where you only want to pass access tokens to a service, and you want to make sure said access token has the longest possible lifetime.\n   *\n   * In most cases, you should prefer `getOrFetchLikelyValidTokens`.\n   *\n   * @returns null if the session is known to be invalid, or new tokens otherwise (which, at the time of fetching, are guaranteed to be valid).\n   */\n  async fetchNewTokens() {\n    const accessToken = await this._getNewlyFetchedAccessToken();\n    return accessToken ? { accessToken, refreshToken: this._refreshToken } : null;\n  }\n  markAccessTokenExpired(accessToken) {\n    if (this._accessToken.get() === accessToken) {\n      this._accessToken.set(null);\n    }\n  }\n  /**\n   * Note that a callback invocation with `null` does not mean the session has been invalidated; the access token may just have expired. Use `onInvalidate` to detect invalidation.\n   */\n  onAccessTokenChange(callback) {\n    return this._accessToken.onChange(callback);\n  }\n  /**\n   * @returns An access token, which may be expired or expire soon, or null if it is known to be invalid.\n   */\n  _getPotentiallyInvalidAccessTokenIfAvailable() {\n    if (!this._refreshToken) return null;\n    if (this.isKnownToBeInvalid()) return null;\n    const accessToken = this._accessToken.get();\n    if (accessToken && !accessToken.isExpired()) return accessToken;\n    return null;\n  }\n  /**\n   * You should prefer `_getOrFetchPotentiallyInvalidAccessToken` in almost all cases.\n   *\n   * @returns A newly fetched access token (never read from cache), or null if the session either does not represent a user or the session is invalid.\n   */\n  async _getNewlyFetchedAccessToken() {\n    if (!this._refreshToken) return null;\n    if (this._knownToBeInvalid.get()) return null;\n    if (!this._refreshPromise) {\n      this._refreshAndSetRefreshPromise(this._refreshToken);\n    }\n    return await this._refreshPromise;\n  }\n  _refreshAndSetRefreshPromise(refreshToken) {\n    let refreshPromise = this._options.refreshAccessTokenCallback(refreshToken).then((accessToken) => {\n      if (refreshPromise === this._refreshPromise) {\n        this._refreshPromise = null;\n        this._accessToken.set(accessToken);\n        if (!accessToken) {\n          this.markInvalid();\n        }\n      }\n      return accessToken;\n    });\n    this._refreshPromise = refreshPromise;\n  }\n};\n\n//# sourceMappingURL=sessions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/sessions.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/arrays.js":
/*!************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/arrays.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   enumerate: () => (/* binding */ enumerate),\n/* harmony export */   findLastIndex: () => (/* binding */ findLastIndex),\n/* harmony export */   getChunks: () => (/* binding */ getChunks),\n/* harmony export */   groupBy: () => (/* binding */ groupBy),\n/* harmony export */   isBooleanArray: () => (/* binding */ isBooleanArray),\n/* harmony export */   isNumberArray: () => (/* binding */ isNumberArray),\n/* harmony export */   isObjectArray: () => (/* binding */ isObjectArray),\n/* harmony export */   isShallowEqual: () => (/* binding */ isShallowEqual),\n/* harmony export */   isStringArray: () => (/* binding */ isStringArray),\n/* harmony export */   outerProduct: () => (/* binding */ outerProduct),\n/* harmony export */   range: () => (/* binding */ range),\n/* harmony export */   rotateLeft: () => (/* binding */ rotateLeft),\n/* harmony export */   rotateRight: () => (/* binding */ rotateRight),\n/* harmony export */   shuffle: () => (/* binding */ shuffle),\n/* harmony export */   typedIncludes: () => (/* binding */ typedIncludes),\n/* harmony export */   unique: () => (/* binding */ unique)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/math.js\");\n// src/utils/arrays.tsx\n\nfunction typedIncludes(arr, item) {\n  return arr.includes(item);\n}\nfunction enumerate(arr) {\n  return arr.map((item, index) => [index, item]);\n}\nfunction isShallowEqual(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\nfunction findLastIndex(arr, predicate) {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) return i;\n  }\n  return -1;\n}\nfunction groupBy(arr, key) {\n  const result = /* @__PURE__ */ new Map();\n  for (const item of arr) {\n    const k = key(item);\n    if (result.get(k) === void 0) result.set(k, []);\n    result.get(k).push(item);\n  }\n  return result;\n}\nfunction range(startInclusive, endExclusive, step) {\n  if (endExclusive === void 0) {\n    endExclusive = startInclusive;\n    startInclusive = 0;\n  }\n  if (step === void 0) step = 1;\n  const result = [];\n  for (let i = startInclusive; step > 0 ? i < endExclusive : i > endExclusive; i += step) {\n    result.push(i);\n  }\n  return result;\n}\nfunction rotateLeft(arr, n) {\n  if (arr.length === 0) return [];\n  const index = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.remainder)(n, arr.length);\n  return [...arr.slice(index), ...arr.slice(0, index)];\n}\nfunction rotateRight(arr, n) {\n  return rotateLeft(arr, -n);\n}\nfunction shuffle(arr) {\n  const result = [...arr];\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [result[i], result[j]] = [result[j], result[i]];\n  }\n  return result;\n}\nfunction outerProduct(arr1, arr2) {\n  return arr1.flatMap((item1) => arr2.map((item2) => [item1, item2]));\n}\nfunction unique(arr) {\n  return [...new Set(arr)];\n}\nfunction getChunks(arr, size) {\n  const result = [];\n  if (size <= 0) return result;\n  for (let i = 0; i < arr.length; i += size) {\n    result.push(arr.slice(i, i + size));\n  }\n  return result;\n}\nfunction isStringArray(arr) {\n  return Array.isArray(arr) && arr.every((item) => typeof item === \"string\");\n}\nfunction isNumberArray(arr) {\n  return Array.isArray(arr) && arr.every((item) => typeof item === \"number\");\n}\nfunction isBooleanArray(arr) {\n  return Array.isArray(arr) && arr.every((item) => typeof item === \"boolean\");\n}\nfunction isObjectArray(arr) {\n  return Array.isArray(arr) && arr.every((item) => typeof item === \"object\" && item !== null);\n}\n\n//# sourceMappingURL=arrays.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvYXJyYXlzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGdEQUFnRDtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbURBQVM7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsT0FBTztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdCQUFnQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWtCRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcZXNtXFx1dGlsc1xcYXJyYXlzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9hcnJheXMudHN4XG5pbXBvcnQgeyByZW1haW5kZXIgfSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5mdW5jdGlvbiB0eXBlZEluY2x1ZGVzKGFyciwgaXRlbSkge1xuICByZXR1cm4gYXJyLmluY2x1ZGVzKGl0ZW0pO1xufVxuZnVuY3Rpb24gZW51bWVyYXRlKGFycikge1xuICByZXR1cm4gYXJyLm1hcCgoaXRlbSwgaW5kZXgpID0+IFtpbmRleCwgaXRlbV0pO1xufVxuZnVuY3Rpb24gaXNTaGFsbG93RXF1YWwoYSwgYikge1xuICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChhW2ldICE9PSBiW2ldKSByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBmaW5kTGFzdEluZGV4KGFyciwgcHJlZGljYXRlKSB7XG4gIGZvciAobGV0IGkgPSBhcnIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBpZiAocHJlZGljYXRlKGFycltpXSkpIHJldHVybiBpO1xuICB9XG4gIHJldHVybiAtMTtcbn1cbmZ1bmN0aW9uIGdyb3VwQnkoYXJyLCBrZXkpIHtcbiAgY29uc3QgcmVzdWx0ID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgZm9yIChjb25zdCBpdGVtIG9mIGFycikge1xuICAgIGNvbnN0IGsgPSBrZXkoaXRlbSk7XG4gICAgaWYgKHJlc3VsdC5nZXQoaykgPT09IHZvaWQgMCkgcmVzdWx0LnNldChrLCBbXSk7XG4gICAgcmVzdWx0LmdldChrKS5wdXNoKGl0ZW0pO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiByYW5nZShzdGFydEluY2x1c2l2ZSwgZW5kRXhjbHVzaXZlLCBzdGVwKSB7XG4gIGlmIChlbmRFeGNsdXNpdmUgPT09IHZvaWQgMCkge1xuICAgIGVuZEV4Y2x1c2l2ZSA9IHN0YXJ0SW5jbHVzaXZlO1xuICAgIHN0YXJ0SW5jbHVzaXZlID0gMDtcbiAgfVxuICBpZiAoc3RlcCA9PT0gdm9pZCAwKSBzdGVwID0gMTtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGZvciAobGV0IGkgPSBzdGFydEluY2x1c2l2ZTsgc3RlcCA+IDAgPyBpIDwgZW5kRXhjbHVzaXZlIDogaSA+IGVuZEV4Y2x1c2l2ZTsgaSArPSBzdGVwKSB7XG4gICAgcmVzdWx0LnB1c2goaSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIHJvdGF0ZUxlZnQoYXJyLCBuKSB7XG4gIGlmIChhcnIubGVuZ3RoID09PSAwKSByZXR1cm4gW107XG4gIGNvbnN0IGluZGV4ID0gcmVtYWluZGVyKG4sIGFyci5sZW5ndGgpO1xuICByZXR1cm4gWy4uLmFyci5zbGljZShpbmRleCksIC4uLmFyci5zbGljZSgwLCBpbmRleCldO1xufVxuZnVuY3Rpb24gcm90YXRlUmlnaHQoYXJyLCBuKSB7XG4gIHJldHVybiByb3RhdGVMZWZ0KGFyciwgLW4pO1xufVxuZnVuY3Rpb24gc2h1ZmZsZShhcnIpIHtcbiAgY29uc3QgcmVzdWx0ID0gWy4uLmFycl07XG4gIGZvciAobGV0IGkgPSByZXN1bHQubGVuZ3RoIC0gMTsgaSA+IDA7IGktLSkge1xuICAgIGNvbnN0IGogPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAoaSArIDEpKTtcbiAgICBbcmVzdWx0W2ldLCByZXN1bHRbal1dID0gW3Jlc3VsdFtqXSwgcmVzdWx0W2ldXTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gb3V0ZXJQcm9kdWN0KGFycjEsIGFycjIpIHtcbiAgcmV0dXJuIGFycjEuZmxhdE1hcCgoaXRlbTEpID0+IGFycjIubWFwKChpdGVtMikgPT4gW2l0ZW0xLCBpdGVtMl0pKTtcbn1cbmZ1bmN0aW9uIHVuaXF1ZShhcnIpIHtcbiAgcmV0dXJuIFsuLi5uZXcgU2V0KGFycildO1xufVxuZnVuY3Rpb24gZ2V0Q2h1bmtzKGFyciwgc2l6ZSkge1xuICBjb25zdCByZXN1bHQgPSBbXTtcbiAgaWYgKHNpemUgPD0gMCkgcmV0dXJuIHJlc3VsdDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpICs9IHNpemUpIHtcbiAgICByZXN1bHQucHVzaChhcnIuc2xpY2UoaSwgaSArIHNpemUpKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gaXNTdHJpbmdBcnJheShhcnIpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJyKSAmJiBhcnIuZXZlcnkoKGl0ZW0pID0+IHR5cGVvZiBpdGVtID09PSBcInN0cmluZ1wiKTtcbn1cbmZ1bmN0aW9uIGlzTnVtYmVyQXJyYXkoYXJyKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KGFycikgJiYgYXJyLmV2ZXJ5KChpdGVtKSA9PiB0eXBlb2YgaXRlbSA9PT0gXCJudW1iZXJcIik7XG59XG5mdW5jdGlvbiBpc0Jvb2xlYW5BcnJheShhcnIpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJyKSAmJiBhcnIuZXZlcnkoKGl0ZW0pID0+IHR5cGVvZiBpdGVtID09PSBcImJvb2xlYW5cIik7XG59XG5mdW5jdGlvbiBpc09iamVjdEFycmF5KGFycikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShhcnIpICYmIGFyci5ldmVyeSgoaXRlbSkgPT4gdHlwZW9mIGl0ZW0gPT09IFwib2JqZWN0XCIgJiYgaXRlbSAhPT0gbnVsbCk7XG59XG5leHBvcnQge1xuICBlbnVtZXJhdGUsXG4gIGZpbmRMYXN0SW5kZXgsXG4gIGdldENodW5rcyxcbiAgZ3JvdXBCeSxcbiAgaXNCb29sZWFuQXJyYXksXG4gIGlzTnVtYmVyQXJyYXksXG4gIGlzT2JqZWN0QXJyYXksXG4gIGlzU2hhbGxvd0VxdWFsLFxuICBpc1N0cmluZ0FycmF5LFxuICBvdXRlclByb2R1Y3QsXG4gIHJhbmdlLFxuICByb3RhdGVMZWZ0LFxuICByb3RhdGVSaWdodCxcbiAgc2h1ZmZsZSxcbiAgdHlwZWRJbmNsdWRlcyxcbiAgdW5pcXVlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXJyYXlzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/arrays.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBase32: () => (/* binding */ decodeBase32),\n/* harmony export */   decodeBase64: () => (/* binding */ decodeBase64),\n/* harmony export */   decodeBase64OrBase64Url: () => (/* binding */ decodeBase64OrBase64Url),\n/* harmony export */   decodeBase64Url: () => (/* binding */ decodeBase64Url),\n/* harmony export */   encodeBase32: () => (/* binding */ encodeBase32),\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64),\n/* harmony export */   encodeBase64Url: () => (/* binding */ encodeBase64Url),\n/* harmony export */   getBase32CharacterFromIndex: () => (/* binding */ getBase32CharacterFromIndex),\n/* harmony export */   getBase32IndexFromCharacter: () => (/* binding */ getBase32IndexFromCharacter),\n/* harmony export */   isBase32: () => (/* binding */ isBase32),\n/* harmony export */   isBase64: () => (/* binding */ isBase64),\n/* harmony export */   isBase64Url: () => (/* binding */ isBase64Url),\n/* harmony export */   toHexString: () => (/* binding */ toHexString)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n// src/utils/bytes.tsx\n\nvar crockfordAlphabet = \"0123456789ABCDEFGHJKMNPQRSTVWXYZ\";\nvar crockfordReplacements = /* @__PURE__ */ new Map([\n  [\"o\", \"0\"],\n  [\"i\", \"1\"],\n  [\"l\", \"1\"]\n]);\nfunction toHexString(input) {\n  return Array.from(input).map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n}\nfunction getBase32CharacterFromIndex(index) {\n  if (index < 0 || index >= crockfordAlphabet.length) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`Invalid base32 index: ${index}`);\n  }\n  return crockfordAlphabet[index];\n}\nfunction getBase32IndexFromCharacter(character) {\n  if (character.length !== 1) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`Invalid base32 character: ${character}`);\n  }\n  const index = crockfordAlphabet.indexOf(character.toUpperCase());\n  if (index === -1) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`Invalid base32 character: ${character}`);\n  }\n  return index;\n}\nfunction encodeBase32(input) {\n  let bits = 0;\n  let value = 0;\n  let output = \"\";\n  for (let i = 0; i < input.length; i++) {\n    value = value << 8 | input[i];\n    bits += 8;\n    while (bits >= 5) {\n      output += getBase32CharacterFromIndex(value >>> bits - 5 & 31);\n      bits -= 5;\n    }\n  }\n  if (bits > 0) {\n    output += getBase32CharacterFromIndex(value << 5 - bits & 31);\n  }\n  if (!isBase32(output)) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base32 output; this should never happen\");\n  }\n  return output;\n}\nfunction decodeBase32(input) {\n  if (!isBase32(input)) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base32 string\");\n  }\n  const output = new Uint8Array(input.length * 5 / 8 | 0);\n  let bits = 0;\n  let value = 0;\n  let outputIndex = 0;\n  for (let i = 0; i < input.length; i++) {\n    let char = input[i].toLowerCase();\n    if (char === \" \") continue;\n    if (crockfordReplacements.has(char)) {\n      char = crockfordReplacements.get(char);\n    }\n    const index = getBase32IndexFromCharacter(char);\n    value = value << 5 | index;\n    bits += 5;\n    if (bits >= 8) {\n      output[outputIndex++] = value >>> bits - 8 & 255;\n      bits -= 8;\n    }\n  }\n  return output;\n}\nfunction encodeBase64(input) {\n  return btoa([...input].map((b) => String.fromCharCode(b)).join(\"\"));\n}\nfunction decodeBase64(input) {\n  return new Uint8Array(atob(input).split(\"\").map((char) => char.charCodeAt(0)));\n}\nfunction encodeBase64Url(input) {\n  const res = encodeBase64(input).replace(/=+$/, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n  return res;\n}\nfunction decodeBase64Url(input) {\n  if (!isBase64Url(input)) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base64url string\");\n  }\n  if (input === \"\") {\n    return new Uint8Array(0);\n  }\n  return decodeBase64(input.replace(/-/g, \"+\").replace(/_/g, \"/\") + \"====\".slice((input.length - 1) % 4 + 1));\n}\nfunction decodeBase64OrBase64Url(input) {\n  if (isBase64Url(input)) {\n    return decodeBase64Url(input);\n  } else if (isBase64(input)) {\n    return decodeBase64(input);\n  } else {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"Invalid base64 or base64url string\");\n  }\n}\nfunction isBase32(input) {\n  for (const char of input) {\n    if (char === \" \") continue;\n    const upperChar = char.toUpperCase();\n    if (!crockfordAlphabet.includes(upperChar)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isBase64(input) {\n  const regex = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/;\n  return regex.test(input);\n}\nfunction isBase64Url(input) {\n  if (input === \"\") {\n    return true;\n  }\n  const regex = /^[0-9a-zA-Z_-]+$/;\n  return regex.test(input);\n}\n\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvYnl0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBbUIsMEJBQTBCLE1BQU07QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMkRBQW1CLDhCQUE4QixVQUFVO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMkRBQW1CLDhCQUE4QixVQUFVO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBbUIseUJBQXlCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFtQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFtQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0osY0FBYywyREFBbUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsRUFBRSxtQkFBbUIsRUFBRSxpQkFBaUIsRUFBRTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFlRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcZXNtXFx1dGlsc1xcYnl0ZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2J5dGVzLnRzeFxuaW1wb3J0IHsgU3RhY2tBc3NlcnRpb25FcnJvciB9IGZyb20gXCIuL2Vycm9ycy5qc1wiO1xudmFyIGNyb2NrZm9yZEFscGhhYmV0ID0gXCIwMTIzNDU2Nzg5QUJDREVGR0hKS01OUFFSU1RWV1hZWlwiO1xudmFyIGNyb2NrZm9yZFJlcGxhY2VtZW50cyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKFtcbiAgW1wib1wiLCBcIjBcIl0sXG4gIFtcImlcIiwgXCIxXCJdLFxuICBbXCJsXCIsIFwiMVwiXVxuXSk7XG5mdW5jdGlvbiB0b0hleFN0cmluZyhpbnB1dCkge1xuICByZXR1cm4gQXJyYXkuZnJvbShpbnB1dCkubWFwKChiKSA9PiBiLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikpLmpvaW4oXCJcIik7XG59XG5mdW5jdGlvbiBnZXRCYXNlMzJDaGFyYWN0ZXJGcm9tSW5kZXgoaW5kZXgpIHtcbiAgaWYgKGluZGV4IDwgMCB8fCBpbmRleCA+PSBjcm9ja2ZvcmRBbHBoYWJldC5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihgSW52YWxpZCBiYXNlMzIgaW5kZXg6ICR7aW5kZXh9YCk7XG4gIH1cbiAgcmV0dXJuIGNyb2NrZm9yZEFscGhhYmV0W2luZGV4XTtcbn1cbmZ1bmN0aW9uIGdldEJhc2UzMkluZGV4RnJvbUNoYXJhY3RlcihjaGFyYWN0ZXIpIHtcbiAgaWYgKGNoYXJhY3Rlci5sZW5ndGggIT09IDEpIHtcbiAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihgSW52YWxpZCBiYXNlMzIgY2hhcmFjdGVyOiAke2NoYXJhY3Rlcn1gKTtcbiAgfVxuICBjb25zdCBpbmRleCA9IGNyb2NrZm9yZEFscGhhYmV0LmluZGV4T2YoY2hhcmFjdGVyLnRvVXBwZXJDYXNlKCkpO1xuICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoYEludmFsaWQgYmFzZTMyIGNoYXJhY3RlcjogJHtjaGFyYWN0ZXJ9YCk7XG4gIH1cbiAgcmV0dXJuIGluZGV4O1xufVxuZnVuY3Rpb24gZW5jb2RlQmFzZTMyKGlucHV0KSB7XG4gIGxldCBiaXRzID0gMDtcbiAgbGV0IHZhbHVlID0gMDtcbiAgbGV0IG91dHB1dCA9IFwiXCI7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICB2YWx1ZSA9IHZhbHVlIDw8IDggfCBpbnB1dFtpXTtcbiAgICBiaXRzICs9IDg7XG4gICAgd2hpbGUgKGJpdHMgPj0gNSkge1xuICAgICAgb3V0cHV0ICs9IGdldEJhc2UzMkNoYXJhY3RlckZyb21JbmRleCh2YWx1ZSA+Pj4gYml0cyAtIDUgJiAzMSk7XG4gICAgICBiaXRzIC09IDU7XG4gICAgfVxuICB9XG4gIGlmIChiaXRzID4gMCkge1xuICAgIG91dHB1dCArPSBnZXRCYXNlMzJDaGFyYWN0ZXJGcm9tSW5kZXgodmFsdWUgPDwgNSAtIGJpdHMgJiAzMSk7XG4gIH1cbiAgaWYgKCFpc0Jhc2UzMihvdXRwdXQpKSB7XG4gICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJJbnZhbGlkIGJhc2UzMiBvdXRwdXQ7IHRoaXMgc2hvdWxkIG5ldmVyIGhhcHBlblwiKTtcbiAgfVxuICByZXR1cm4gb3V0cHV0O1xufVxuZnVuY3Rpb24gZGVjb2RlQmFzZTMyKGlucHV0KSB7XG4gIGlmICghaXNCYXNlMzIoaW5wdXQpKSB7XG4gICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJJbnZhbGlkIGJhc2UzMiBzdHJpbmdcIik7XG4gIH1cbiAgY29uc3Qgb3V0cHV0ID0gbmV3IFVpbnQ4QXJyYXkoaW5wdXQubGVuZ3RoICogNSAvIDggfCAwKTtcbiAgbGV0IGJpdHMgPSAwO1xuICBsZXQgdmFsdWUgPSAwO1xuICBsZXQgb3V0cHV0SW5kZXggPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IGNoYXIgPSBpbnB1dFtpXS50b0xvd2VyQ2FzZSgpO1xuICAgIGlmIChjaGFyID09PSBcIiBcIikgY29udGludWU7XG4gICAgaWYgKGNyb2NrZm9yZFJlcGxhY2VtZW50cy5oYXMoY2hhcikpIHtcbiAgICAgIGNoYXIgPSBjcm9ja2ZvcmRSZXBsYWNlbWVudHMuZ2V0KGNoYXIpO1xuICAgIH1cbiAgICBjb25zdCBpbmRleCA9IGdldEJhc2UzMkluZGV4RnJvbUNoYXJhY3RlcihjaGFyKTtcbiAgICB2YWx1ZSA9IHZhbHVlIDw8IDUgfCBpbmRleDtcbiAgICBiaXRzICs9IDU7XG4gICAgaWYgKGJpdHMgPj0gOCkge1xuICAgICAgb3V0cHV0W291dHB1dEluZGV4KytdID0gdmFsdWUgPj4+IGJpdHMgLSA4ICYgMjU1O1xuICAgICAgYml0cyAtPSA4O1xuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0cHV0O1xufVxuZnVuY3Rpb24gZW5jb2RlQmFzZTY0KGlucHV0KSB7XG4gIHJldHVybiBidG9hKFsuLi5pbnB1dF0ubWFwKChiKSA9PiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIpKS5qb2luKFwiXCIpKTtcbn1cbmZ1bmN0aW9uIGRlY29kZUJhc2U2NChpbnB1dCkge1xuICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYXRvYihpbnB1dCkuc3BsaXQoXCJcIikubWFwKChjaGFyKSA9PiBjaGFyLmNoYXJDb2RlQXQoMCkpKTtcbn1cbmZ1bmN0aW9uIGVuY29kZUJhc2U2NFVybChpbnB1dCkge1xuICBjb25zdCByZXMgPSBlbmNvZGVCYXNlNjQoaW5wdXQpLnJlcGxhY2UoLz0rJC8sIFwiXCIpLnJlcGxhY2UoL1xcKy9nLCBcIi1cIikucmVwbGFjZSgvXFwvL2csIFwiX1wiKTtcbiAgcmV0dXJuIHJlcztcbn1cbmZ1bmN0aW9uIGRlY29kZUJhc2U2NFVybChpbnB1dCkge1xuICBpZiAoIWlzQmFzZTY0VXJsKGlucHV0KSkge1xuICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwiSW52YWxpZCBiYXNlNjR1cmwgc3RyaW5nXCIpO1xuICB9XG4gIGlmIChpbnB1dCA9PT0gXCJcIikge1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheSgwKTtcbiAgfVxuICByZXR1cm4gZGVjb2RlQmFzZTY0KGlucHV0LnJlcGxhY2UoLy0vZywgXCIrXCIpLnJlcGxhY2UoL18vZywgXCIvXCIpICsgXCI9PT09XCIuc2xpY2UoKGlucHV0Lmxlbmd0aCAtIDEpICUgNCArIDEpKTtcbn1cbmZ1bmN0aW9uIGRlY29kZUJhc2U2NE9yQmFzZTY0VXJsKGlucHV0KSB7XG4gIGlmIChpc0Jhc2U2NFVybChpbnB1dCkpIHtcbiAgICByZXR1cm4gZGVjb2RlQmFzZTY0VXJsKGlucHV0KTtcbiAgfSBlbHNlIGlmIChpc0Jhc2U2NChpbnB1dCkpIHtcbiAgICByZXR1cm4gZGVjb2RlQmFzZTY0KGlucHV0KTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkludmFsaWQgYmFzZTY0IG9yIGJhc2U2NHVybCBzdHJpbmdcIik7XG4gIH1cbn1cbmZ1bmN0aW9uIGlzQmFzZTMyKGlucHV0KSB7XG4gIGZvciAoY29uc3QgY2hhciBvZiBpbnB1dCkge1xuICAgIGlmIChjaGFyID09PSBcIiBcIikgY29udGludWU7XG4gICAgY29uc3QgdXBwZXJDaGFyID0gY2hhci50b1VwcGVyQ2FzZSgpO1xuICAgIGlmICghY3JvY2tmb3JkQWxwaGFiZXQuaW5jbHVkZXModXBwZXJDaGFyKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGlzQmFzZTY0KGlucHV0KSB7XG4gIGNvbnN0IHJlZ2V4ID0gL14oPzpbQS1aYS16MC05Ky9dezR9KSooPzpbQS1aYS16MC05Ky9dezJ9PT18W0EtWmEtejAtOSsvXXszfT0pPyQvO1xuICByZXR1cm4gcmVnZXgudGVzdChpbnB1dCk7XG59XG5mdW5jdGlvbiBpc0Jhc2U2NFVybChpbnB1dCkge1xuICBpZiAoaW5wdXQgPT09IFwiXCIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBjb25zdCByZWdleCA9IC9eWzAtOWEtekEtWl8tXSskLztcbiAgcmV0dXJuIHJlZ2V4LnRlc3QoaW5wdXQpO1xufVxuZXhwb3J0IHtcbiAgZGVjb2RlQmFzZTMyLFxuICBkZWNvZGVCYXNlNjQsXG4gIGRlY29kZUJhc2U2NE9yQmFzZTY0VXJsLFxuICBkZWNvZGVCYXNlNjRVcmwsXG4gIGVuY29kZUJhc2UzMixcbiAgZW5jb2RlQmFzZTY0LFxuICBlbmNvZGVCYXNlNjRVcmwsXG4gIGdldEJhc2UzMkNoYXJhY3RlckZyb21JbmRleCxcbiAgZ2V0QmFzZTMySW5kZXhGcm9tQ2hhcmFjdGVyLFxuICBpc0Jhc2UzMixcbiAgaXNCYXNlNjQsXG4gIGlzQmFzZTY0VXJsLFxuICB0b0hleFN0cmluZ1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ5dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/caches.js":
/*!************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/caches.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncCache: () => (/* binding */ AsyncCache),\n/* harmony export */   cacheFunction: () => (/* binding */ cacheFunction)\n/* harmony export */ });\n/* harmony import */ var _maps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./maps.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./objects.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n/* harmony import */ var _promises_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./promises.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\");\n/* harmony import */ var _stores_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stores.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js\");\n// src/utils/caches.tsx\n\n\n\n\nfunction cacheFunction(f) {\n  const dependenciesMap = new _maps_js__WEBPACK_IMPORTED_MODULE_0__.DependenciesMap();\n  return (...args) => {\n    if (dependenciesMap.has(args)) {\n      return dependenciesMap.get(args);\n    }\n    const value = f(...args);\n    dependenciesMap.set(args, value);\n    return value;\n  };\n}\nvar AsyncCache = class {\n  constructor(_fetcher, _options = {}) {\n    this._fetcher = _fetcher;\n    this._options = _options;\n    this._map = new _maps_js__WEBPACK_IMPORTED_MODULE_0__.DependenciesMap();\n    this.isCacheAvailable = this._createKeyed(\"isCacheAvailable\");\n    this.getIfCached = this._createKeyed(\"getIfCached\");\n    this.getOrWait = this._createKeyed(\"getOrWait\");\n    this.forceSetCachedValue = this._createKeyed(\"forceSetCachedValue\");\n    this.forceSetCachedValueAsync = this._createKeyed(\"forceSetCachedValueAsync\");\n    this.refresh = this._createKeyed(\"refresh\");\n    this.invalidate = this._createKeyed(\"invalidate\");\n    this.onStateChange = this._createKeyed(\"onStateChange\");\n  }\n  _createKeyed(functionName) {\n    return (key, ...args) => {\n      const valueCache = this.getValueCache(key);\n      return valueCache[functionName].apply(valueCache, args);\n    };\n  }\n  getValueCache(dependencies) {\n    let cache = this._map.get(dependencies);\n    if (!cache) {\n      cache = new AsyncValueCache(\n        async () => await this._fetcher(dependencies),\n        {\n          ...this._options,\n          onSubscribe: this._options.onSubscribe ? (cb) => this._options.onSubscribe(dependencies, cb) : void 0\n        }\n      );\n      this._map.set(dependencies, cache);\n    }\n    return cache;\n  }\n  async refreshWhere(predicate) {\n    const promises = [];\n    for (const [dependencies, cache] of this._map) {\n      if (predicate(dependencies)) {\n        promises.push(cache.refresh());\n      }\n    }\n    await Promise.all(promises);\n  }\n};\nvar AsyncValueCache = class {\n  constructor(fetcher, _options = {}) {\n    this._options = _options;\n    this._subscriptionsCount = 0;\n    this._unsubscribers = [];\n    this._mostRecentRefreshPromiseIndex = 0;\n    this._store = new _stores_js__WEBPACK_IMPORTED_MODULE_3__.AsyncStore();\n    this._rateLimitOptions = {\n      concurrency: 1,\n      throttleMs: 300,\n      ...(0,_objects_js__WEBPACK_IMPORTED_MODULE_1__.filterUndefined)(_options.rateLimiter ?? {})\n    };\n    this._fetcher = (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.rateLimited)(fetcher, {\n      ...this._rateLimitOptions,\n      batchCalls: true\n    });\n  }\n  isCacheAvailable() {\n    return this._store.isAvailable();\n  }\n  getIfCached() {\n    return this._store.get();\n  }\n  getOrWait(cacheStrategy) {\n    const cached = this.getIfCached();\n    if (cacheStrategy === \"read-write\" && cached.status === \"ok\") {\n      return (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.resolved)(cached.data);\n    }\n    return this._refetch(cacheStrategy);\n  }\n  _set(value) {\n    this._store.set(value);\n  }\n  _setAsync(value) {\n    const promise = (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.pending)(value);\n    this._pendingPromise = promise;\n    return (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.pending)(this._store.setAsync(promise));\n  }\n  _refetch(cacheStrategy) {\n    if (cacheStrategy === \"read-write\" && this._pendingPromise) {\n      return this._pendingPromise;\n    }\n    const promise = (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.pending)(this._fetcher());\n    if (cacheStrategy === \"never\") {\n      return promise;\n    }\n    return (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.pending)(this._setAsync(promise).then(() => promise));\n  }\n  forceSetCachedValue(value) {\n    this._set(value);\n  }\n  forceSetCachedValueAsync(value) {\n    return this._setAsync(value);\n  }\n  /**\n   * Refetches the value from the fetcher, and updates the cache with it.\n   */\n  async refresh() {\n    return await this.getOrWait(\"write-only\");\n  }\n  /**\n   * Invalidates the cache, marking it to refresh on the next read. If anyone was listening to it, it will refresh\n   * immediately.\n   */\n  invalidate() {\n    this._store.setUnavailable();\n    this._pendingPromise = void 0;\n    if (this._subscriptionsCount > 0) {\n      (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.refresh());\n    }\n  }\n  onStateChange(callback) {\n    const storeObj = this._store.onChange(callback);\n    (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.getOrWait(\"read-write\"));\n    if (this._subscriptionsCount++ === 0 && this._options.onSubscribe) {\n      const unsubscribe = this._options.onSubscribe(() => {\n        (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.refresh());\n      });\n      this._unsubscribers.push(unsubscribe);\n    }\n    let hasUnsubscribed = false;\n    return {\n      unsubscribe: () => {\n        if (hasUnsubscribed) return;\n        hasUnsubscribed = true;\n        storeObj.unsubscribe();\n        if (--this._subscriptionsCount === 0) {\n          const currentRefreshPromiseIndex = ++this._mostRecentRefreshPromiseIndex;\n          (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(async () => {\n            await (0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.wait)(5e3);\n            if (this._subscriptionsCount === 0 && currentRefreshPromiseIndex === this._mostRecentRefreshPromiseIndex) {\n              this.invalidate();\n            }\n          });\n          for (const unsubscribe of this._unsubscribers) {\n            unsubscribe();\n          }\n        }\n      }\n    };\n  }\n};\n\n//# sourceMappingURL=caches.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/caches.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/compile-time.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/compile-time.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   scrambleDuringCompileTime: () => (/* binding */ scrambleDuringCompileTime)\n/* harmony export */ });\n// src/utils/compile-time.tsx\nfunction scrambleDuringCompileTime(t) {\n  if (Math.random() < 1e-5 && Math.random() > 0.99999 && Math.random() < 1e-5 && Math.random() > 0.99999) {\n    return \"this will never happen\";\n  }\n  return t;\n}\n\n//# sourceMappingURL=compile-time.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvY29tcGlsZS10aW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxlc21cXHV0aWxzXFxjb21waWxlLXRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2NvbXBpbGUtdGltZS50c3hcbmZ1bmN0aW9uIHNjcmFtYmxlRHVyaW5nQ29tcGlsZVRpbWUodCkge1xuICBpZiAoTWF0aC5yYW5kb20oKSA8IDFlLTUgJiYgTWF0aC5yYW5kb20oKSA+IDAuOTk5OTkgJiYgTWF0aC5yYW5kb20oKSA8IDFlLTUgJiYgTWF0aC5yYW5kb20oKSA+IDAuOTk5OTkpIHtcbiAgICByZXR1cm4gXCJ0aGlzIHdpbGwgbmV2ZXIgaGFwcGVuXCI7XG4gIH1cbiAgcmV0dXJuIHQ7XG59XG5leHBvcnQge1xuICBzY3JhbWJsZUR1cmluZ0NvbXBpbGVUaW1lXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tcGlsZS10aW1lLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/compile-time.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js":
/*!************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt),\n/* harmony export */   generateRandomValues: () => (/* binding */ generateRandomValues),\n/* harmony export */   generateSecureRandomString: () => (/* binding */ generateSecureRandomString),\n/* harmony export */   hash: () => (/* binding */ hash),\n/* harmony export */   iteratedHash: () => (/* binding */ iteratedHash)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./globals.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js\");\n/* harmony import */ var _results_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./results.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n// src/utils/crypto.tsx\n\n\n\n\nfunction generateRandomValues(array) {\n  if (!_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Crypto API is not available in this environment. Are you using an old browser?\");\n  }\n  if (!_globals_js__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto.getRandomValues) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"crypto.getRandomValues is not available in this environment. Are you using an old browser?\");\n  }\n  return _globals_js__WEBPACK_IMPORTED_MODULE_2__.globalVar.crypto.getRandomValues(array);\n}\nfunction generateSecureRandomString(minBitsOfEntropy = 224) {\n  const base32CharactersCount = Math.ceil(minBitsOfEntropy / 5);\n  const bytesCount = Math.ceil(base32CharactersCount * 5 / 8);\n  const randomBytes = generateRandomValues(new Uint8Array(bytesCount));\n  const str = (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.encodeBase32)(randomBytes);\n  return str.slice(str.length - base32CharactersCount).toLowerCase();\n}\nasync function getDerivedSymmetricKey(purpose, secret, salt) {\n  const originalSecretKey = await crypto.subtle.importKey(\"raw\", typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret, \"HKDF\", false, [\"deriveKey\"]);\n  return await crypto.subtle.deriveKey(\n    {\n      name: \"HKDF\",\n      salt,\n      hash: \"SHA-256\",\n      info: new TextEncoder().encode(JSON.stringify([\n        \"stack-crypto-helper-derived-symmetric-key\",\n        purpose,\n        typeof secret === \"string\" ? \"string-key\" : \"binary-key\",\n        (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(salt)\n      ]))\n    },\n    originalSecretKey,\n    { name: \"AES-GCM\", length: 256 },\n    false,\n    [\"encrypt\", \"decrypt\"]\n  );\n}\nasync function encrypt({ purpose, secret, value }) {\n  const iv = crypto.getRandomValues(new Uint8Array(12));\n  const salt = crypto.getRandomValues(new Uint8Array(16));\n  const derivedSecretKey = await getDerivedSymmetricKey(purpose, secret, salt);\n  const cipher = await crypto.subtle.encrypt({\n    name: \"AES-GCM\",\n    iv\n  }, derivedSecretKey, value);\n  const version = [1, 0];\n  return new Uint8Array([...version, ...salt, ...iv, ...new Uint8Array(cipher)]);\n}\nasync function decrypt({ purpose, secret, cipher }) {\n  const version = cipher.slice(0, 2);\n  if (version[0] !== 1 || version[1] !== 0) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Invalid ciphertext version in decrypt(...); expected 0x0100\", { purpose });\n  const salt = cipher.slice(2, 18);\n  const iv = cipher.slice(18, 30);\n  const cipherBytes = cipher.slice(30);\n  const derivedSecretKey = await getDerivedSymmetricKey(purpose, secret, salt);\n  try {\n    const plaintext = await crypto.subtle.decrypt({\n      name: \"AES-GCM\",\n      iv\n    }, derivedSecretKey, cipherBytes);\n    return _results_js__WEBPACK_IMPORTED_MODULE_3__.Result.ok(new Uint8Array(plaintext));\n  } catch (e) {\n    if (e instanceof DOMException && e.name === \"OperationError\") {\n      return _results_js__WEBPACK_IMPORTED_MODULE_3__.Result.error(new Error(\"Invalid ciphertext or secret when decrypting encrypted value\", { cause: e }));\n    }\n    throw e;\n  }\n}\nasync function hash(options) {\n  return await iteratedHash({ ...options, iterations: 1 });\n}\nasync function iteratedHash(options) {\n  const stringOrUint8ArrayToUint8Array = (value) => typeof value === \"string\" ? new TextEncoder().encode(value) : value;\n  const stringOrUint8ArrayToBase64 = (value) => (0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(stringOrUint8ArrayToUint8Array(value));\n  const input = await crypto.subtle.importKey(\n    \"raw\",\n    stringOrUint8ArrayToUint8Array(options.value),\n    \"PBKDF2\",\n    false,\n    [\"deriveBits\"]\n  );\n  return new Uint8Array(await crypto.subtle.deriveBits({\n    name: \"PBKDF2\",\n    salt: new TextEncoder().encode(JSON.stringify([\n      \"stack-crypto-helper-iterated-hash\",\n      options.purpose,\n      stringOrUint8ArrayToBase64(options.salt ?? \"\"),\n      stringOrUint8ArrayToBase64(options.extra ?? \"\")\n    ])),\n    iterations: options.iterations,\n    hash: \"SHA-256\"\n  }, input, 256));\n}\n\n//# sourceMappingURL=crypto.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvY3J5cHRvLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUN3RDtBQUNOO0FBQ1Q7QUFDSDtBQUN0QztBQUNBLE9BQU8sa0RBQVM7QUFDaEIsY0FBYywyREFBbUI7QUFDakM7QUFDQSxPQUFPLGtEQUFTO0FBQ2hCLGNBQWMsMkRBQW1CO0FBQ2pDO0FBQ0EsU0FBUyxrREFBUztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx1REFBWTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdURBQVk7QUFDcEI7QUFDQSxLQUFLO0FBQ0w7QUFDQSxNQUFNLDhCQUE4QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix3QkFBd0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix5QkFBeUI7QUFDbEQ7QUFDQSxzREFBc0QsMkRBQW1CLDhDQUE4QyxvQkFBb0IsU0FBUztBQUNwSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFdBQVcsK0NBQU07QUFDakIsSUFBSTtBQUNKO0FBQ0EsYUFBYSwrQ0FBTSxtRkFBbUYsVUFBVTtBQUNoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDJCQUEyQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsdURBQVk7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQVFFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxlc21cXHV0aWxzXFxjcnlwdG8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2NyeXB0by50c3hcbmltcG9ydCB7IGVuY29kZUJhc2UzMiwgZW5jb2RlQmFzZTY0IH0gZnJvbSBcIi4vYnl0ZXMuanNcIjtcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IgfSBmcm9tIFwiLi9lcnJvcnMuanNcIjtcbmltcG9ydCB7IGdsb2JhbFZhciB9IGZyb20gXCIuL2dsb2JhbHMuanNcIjtcbmltcG9ydCB7IFJlc3VsdCB9IGZyb20gXCIuL3Jlc3VsdHMuanNcIjtcbmZ1bmN0aW9uIGdlbmVyYXRlUmFuZG9tVmFsdWVzKGFycmF5KSB7XG4gIGlmICghZ2xvYmFsVmFyLmNyeXB0bykge1xuICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwiQ3J5cHRvIEFQSSBpcyBub3QgYXZhaWxhYmxlIGluIHRoaXMgZW52aXJvbm1lbnQuIEFyZSB5b3UgdXNpbmcgYW4gb2xkIGJyb3dzZXI/XCIpO1xuICB9XG4gIGlmICghZ2xvYmFsVmFyLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMpIHtcbiAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcImNyeXB0by5nZXRSYW5kb21WYWx1ZXMgaXMgbm90IGF2YWlsYWJsZSBpbiB0aGlzIGVudmlyb25tZW50LiBBcmUgeW91IHVzaW5nIGFuIG9sZCBicm93c2VyP1wiKTtcbiAgfVxuICByZXR1cm4gZ2xvYmFsVmFyLmNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYXJyYXkpO1xufVxuZnVuY3Rpb24gZ2VuZXJhdGVTZWN1cmVSYW5kb21TdHJpbmcobWluQml0c09mRW50cm9weSA9IDIyNCkge1xuICBjb25zdCBiYXNlMzJDaGFyYWN0ZXJzQ291bnQgPSBNYXRoLmNlaWwobWluQml0c09mRW50cm9weSAvIDUpO1xuICBjb25zdCBieXRlc0NvdW50ID0gTWF0aC5jZWlsKGJhc2UzMkNoYXJhY3RlcnNDb3VudCAqIDUgLyA4KTtcbiAgY29uc3QgcmFuZG9tQnl0ZXMgPSBnZW5lcmF0ZVJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheShieXRlc0NvdW50KSk7XG4gIGNvbnN0IHN0ciA9IGVuY29kZUJhc2UzMihyYW5kb21CeXRlcyk7XG4gIHJldHVybiBzdHIuc2xpY2Uoc3RyLmxlbmd0aCAtIGJhc2UzMkNoYXJhY3RlcnNDb3VudCkudG9Mb3dlckNhc2UoKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGdldERlcml2ZWRTeW1tZXRyaWNLZXkocHVycG9zZSwgc2VjcmV0LCBzYWx0KSB7XG4gIGNvbnN0IG9yaWdpbmFsU2VjcmV0S2V5ID0gYXdhaXQgY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoXCJyYXdcIiwgdHlwZW9mIHNlY3JldCA9PT0gXCJzdHJpbmdcIiA/IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShzZWNyZXQpIDogc2VjcmV0LCBcIkhLREZcIiwgZmFsc2UsIFtcImRlcml2ZUtleVwiXSk7XG4gIHJldHVybiBhd2FpdCBjcnlwdG8uc3VidGxlLmRlcml2ZUtleShcbiAgICB7XG4gICAgICBuYW1lOiBcIkhLREZcIixcbiAgICAgIHNhbHQsXG4gICAgICBoYXNoOiBcIlNIQS0yNTZcIixcbiAgICAgIGluZm86IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShKU09OLnN0cmluZ2lmeShbXG4gICAgICAgIFwic3RhY2stY3J5cHRvLWhlbHBlci1kZXJpdmVkLXN5bW1ldHJpYy1rZXlcIixcbiAgICAgICAgcHVycG9zZSxcbiAgICAgICAgdHlwZW9mIHNlY3JldCA9PT0gXCJzdHJpbmdcIiA/IFwic3RyaW5nLWtleVwiIDogXCJiaW5hcnkta2V5XCIsXG4gICAgICAgIGVuY29kZUJhc2U2NChzYWx0KVxuICAgICAgXSkpXG4gICAgfSxcbiAgICBvcmlnaW5hbFNlY3JldEtleSxcbiAgICB7IG5hbWU6IFwiQUVTLUdDTVwiLCBsZW5ndGg6IDI1NiB9LFxuICAgIGZhbHNlLFxuICAgIFtcImVuY3J5cHRcIiwgXCJkZWNyeXB0XCJdXG4gICk7XG59XG5hc3luYyBmdW5jdGlvbiBlbmNyeXB0KHsgcHVycG9zZSwgc2VjcmV0LCB2YWx1ZSB9KSB7XG4gIGNvbnN0IGl2ID0gY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSgxMikpO1xuICBjb25zdCBzYWx0ID0gY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSgxNikpO1xuICBjb25zdCBkZXJpdmVkU2VjcmV0S2V5ID0gYXdhaXQgZ2V0RGVyaXZlZFN5bW1ldHJpY0tleShwdXJwb3NlLCBzZWNyZXQsIHNhbHQpO1xuICBjb25zdCBjaXBoZXIgPSBhd2FpdCBjcnlwdG8uc3VidGxlLmVuY3J5cHQoe1xuICAgIG5hbWU6IFwiQUVTLUdDTVwiLFxuICAgIGl2XG4gIH0sIGRlcml2ZWRTZWNyZXRLZXksIHZhbHVlKTtcbiAgY29uc3QgdmVyc2lvbiA9IFsxLCAwXTtcbiAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFsuLi52ZXJzaW9uLCAuLi5zYWx0LCAuLi5pdiwgLi4ubmV3IFVpbnQ4QXJyYXkoY2lwaGVyKV0pO1xufVxuYXN5bmMgZnVuY3Rpb24gZGVjcnlwdCh7IHB1cnBvc2UsIHNlY3JldCwgY2lwaGVyIH0pIHtcbiAgY29uc3QgdmVyc2lvbiA9IGNpcGhlci5zbGljZSgwLCAyKTtcbiAgaWYgKHZlcnNpb25bMF0gIT09IDEgfHwgdmVyc2lvblsxXSAhPT0gMCkgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJJbnZhbGlkIGNpcGhlcnRleHQgdmVyc2lvbiBpbiBkZWNyeXB0KC4uLik7IGV4cGVjdGVkIDB4MDEwMFwiLCB7IHB1cnBvc2UgfSk7XG4gIGNvbnN0IHNhbHQgPSBjaXBoZXIuc2xpY2UoMiwgMTgpO1xuICBjb25zdCBpdiA9IGNpcGhlci5zbGljZSgxOCwgMzApO1xuICBjb25zdCBjaXBoZXJCeXRlcyA9IGNpcGhlci5zbGljZSgzMCk7XG4gIGNvbnN0IGRlcml2ZWRTZWNyZXRLZXkgPSBhd2FpdCBnZXREZXJpdmVkU3ltbWV0cmljS2V5KHB1cnBvc2UsIHNlY3JldCwgc2FsdCk7XG4gIHRyeSB7XG4gICAgY29uc3QgcGxhaW50ZXh0ID0gYXdhaXQgY3J5cHRvLnN1YnRsZS5kZWNyeXB0KHtcbiAgICAgIG5hbWU6IFwiQUVTLUdDTVwiLFxuICAgICAgaXZcbiAgICB9LCBkZXJpdmVkU2VjcmV0S2V5LCBjaXBoZXJCeXRlcyk7XG4gICAgcmV0dXJuIFJlc3VsdC5vayhuZXcgVWludDhBcnJheShwbGFpbnRleHQpKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGlmIChlIGluc3RhbmNlb2YgRE9NRXhjZXB0aW9uICYmIGUubmFtZSA9PT0gXCJPcGVyYXRpb25FcnJvclwiKSB7XG4gICAgICByZXR1cm4gUmVzdWx0LmVycm9yKG5ldyBFcnJvcihcIkludmFsaWQgY2lwaGVydGV4dCBvciBzZWNyZXQgd2hlbiBkZWNyeXB0aW5nIGVuY3J5cHRlZCB2YWx1ZVwiLCB7IGNhdXNlOiBlIH0pKTtcbiAgICB9XG4gICAgdGhyb3cgZTtcbiAgfVxufVxuYXN5bmMgZnVuY3Rpb24gaGFzaChvcHRpb25zKSB7XG4gIHJldHVybiBhd2FpdCBpdGVyYXRlZEhhc2goeyAuLi5vcHRpb25zLCBpdGVyYXRpb25zOiAxIH0pO1xufVxuYXN5bmMgZnVuY3Rpb24gaXRlcmF0ZWRIYXNoKG9wdGlvbnMpIHtcbiAgY29uc3Qgc3RyaW5nT3JVaW50OEFycmF5VG9VaW50OEFycmF5ID0gKHZhbHVlKSA9PiB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgPyBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodmFsdWUpIDogdmFsdWU7XG4gIGNvbnN0IHN0cmluZ09yVWludDhBcnJheVRvQmFzZTY0ID0gKHZhbHVlKSA9PiBlbmNvZGVCYXNlNjQoc3RyaW5nT3JVaW50OEFycmF5VG9VaW50OEFycmF5KHZhbHVlKSk7XG4gIGNvbnN0IGlucHV0ID0gYXdhaXQgY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoXG4gICAgXCJyYXdcIixcbiAgICBzdHJpbmdPclVpbnQ4QXJyYXlUb1VpbnQ4QXJyYXkob3B0aW9ucy52YWx1ZSksXG4gICAgXCJQQktERjJcIixcbiAgICBmYWxzZSxcbiAgICBbXCJkZXJpdmVCaXRzXCJdXG4gICk7XG4gIHJldHVybiBuZXcgVWludDhBcnJheShhd2FpdCBjcnlwdG8uc3VidGxlLmRlcml2ZUJpdHMoe1xuICAgIG5hbWU6IFwiUEJLREYyXCIsXG4gICAgc2FsdDogbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKEpTT04uc3RyaW5naWZ5KFtcbiAgICAgIFwic3RhY2stY3J5cHRvLWhlbHBlci1pdGVyYXRlZC1oYXNoXCIsXG4gICAgICBvcHRpb25zLnB1cnBvc2UsXG4gICAgICBzdHJpbmdPclVpbnQ4QXJyYXlUb0Jhc2U2NChvcHRpb25zLnNhbHQgPz8gXCJcIiksXG4gICAgICBzdHJpbmdPclVpbnQ4QXJyYXlUb0Jhc2U2NChvcHRpb25zLmV4dHJhID8/IFwiXCIpXG4gICAgXSkpLFxuICAgIGl0ZXJhdGlvbnM6IG9wdGlvbnMuaXRlcmF0aW9ucyxcbiAgICBoYXNoOiBcIlNIQS0yNTZcIlxuICB9LCBpbnB1dCwgMjU2KSk7XG59XG5leHBvcnQge1xuICBkZWNyeXB0LFxuICBlbmNyeXB0LFxuICBnZW5lcmF0ZVJhbmRvbVZhbHVlcyxcbiAgZ2VuZXJhdGVTZWN1cmVSYW5kb21TdHJpbmcsXG4gIGhhc2gsXG4gIGl0ZXJhdGVkSGFzaFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyeXB0by5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/currency-constants.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/currency-constants.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SUPPORTED_CURRENCIES: () => (/* binding */ SUPPORTED_CURRENCIES)\n/* harmony export */ });\n// src/utils/currency-constants.tsx\nvar SUPPORTED_CURRENCIES = [\n  {\n    code: \"USD\",\n    decimals: 2,\n    stripeDecimals: 2\n  },\n  {\n    code: \"EUR\",\n    decimals: 2,\n    stripeDecimals: 2\n  },\n  {\n    code: \"GBP\",\n    decimals: 2,\n    stripeDecimals: 2\n  },\n  {\n    code: \"JPY\",\n    decimals: 0,\n    stripeDecimals: 0\n  },\n  {\n    code: \"INR\",\n    decimals: 2,\n    stripeDecimals: 2\n  },\n  {\n    code: \"AUD\",\n    decimals: 2,\n    stripeDecimals: 2\n  },\n  {\n    code: \"CAD\",\n    decimals: 2,\n    stripeDecimals: 2\n  }\n];\n\n//# sourceMappingURL=currency-constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvY3VycmVuY3ktY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXGVzbVxcdXRpbHNcXGN1cnJlbmN5LWNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvY3VycmVuY3ktY29uc3RhbnRzLnRzeFxudmFyIFNVUFBPUlRFRF9DVVJSRU5DSUVTID0gW1xuICB7XG4gICAgY29kZTogXCJVU0RcIixcbiAgICBkZWNpbWFsczogMixcbiAgICBzdHJpcGVEZWNpbWFsczogMlxuICB9LFxuICB7XG4gICAgY29kZTogXCJFVVJcIixcbiAgICBkZWNpbWFsczogMixcbiAgICBzdHJpcGVEZWNpbWFsczogMlxuICB9LFxuICB7XG4gICAgY29kZTogXCJHQlBcIixcbiAgICBkZWNpbWFsczogMixcbiAgICBzdHJpcGVEZWNpbWFsczogMlxuICB9LFxuICB7XG4gICAgY29kZTogXCJKUFlcIixcbiAgICBkZWNpbWFsczogMCxcbiAgICBzdHJpcGVEZWNpbWFsczogMFxuICB9LFxuICB7XG4gICAgY29kZTogXCJJTlJcIixcbiAgICBkZWNpbWFsczogMixcbiAgICBzdHJpcGVEZWNpbWFsczogMlxuICB9LFxuICB7XG4gICAgY29kZTogXCJBVURcIixcbiAgICBkZWNpbWFsczogMixcbiAgICBzdHJpcGVEZWNpbWFsczogMlxuICB9LFxuICB7XG4gICAgY29kZTogXCJDQURcIixcbiAgICBkZWNpbWFsczogMixcbiAgICBzdHJpcGVEZWNpbWFsczogMlxuICB9XG5dO1xuZXhwb3J0IHtcbiAgU1VQUE9SVEVEX0NVUlJFTkNJRVNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jdXJyZW5jeS1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/currency-constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/env.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/env.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnvVariable: () => (/* binding */ getEnvVariable),\n/* harmony export */   getNextRuntime: () => (/* binding */ getNextRuntime),\n/* harmony export */   getNodeEnvironment: () => (/* binding */ getNodeEnvironment),\n/* harmony export */   isBrowserLike: () => (/* binding */ isBrowserLike)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _strings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/utils/env.tsx\n\n\nfunction isBrowserLike() {\n  return typeof window !== \"undefined\" && typeof document !== \"undefined\" && typeof document.createElement !== \"undefined\";\n}\nvar ENV_VAR_RENAME = {\n  NEXT_PUBLIC_STACK_API_URL: [\"STACK_BASE_URL\", \"NEXT_PUBLIC_STACK_URL\"]\n};\nfunction getEnvVariable(name, defaultValue) {\n  if (isBrowserLike()) {\n    throw new Error((0,_strings_js__WEBPACK_IMPORTED_MODULE_1__.deindent)`\n      Can't use getEnvVariable on the client because Next.js transpiles expressions of the kind process.env.XYZ at build-time on the client.\n    \n      Use process.env.XYZ directly instead.\n    `);\n  }\n  if (name === \"NEXT_RUNTIME\") {\n    throw new Error((0,_strings_js__WEBPACK_IMPORTED_MODULE_1__.deindent)`\n      Can't use getEnvVariable to access the NEXT_RUNTIME environment variable because it's compiled into the client bundle.\n    \n      Use getNextRuntime() instead.\n    `);\n  }\n  for (const [newName, oldNames] of Object.entries(ENV_VAR_RENAME)) {\n    if (oldNames.includes(name)) {\n      (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Environment variable ${name} has been renamed to ${newName}. Please update your configuration to use the new name.`);\n    }\n  }\n  let value = process.env[name];\n  if (!value && ENV_VAR_RENAME[name]) {\n    for (const oldName of ENV_VAR_RENAME[name]) {\n      value = process.env[oldName];\n      if (value) break;\n    }\n  }\n  if (value === void 0) {\n    if (defaultValue !== void 0) {\n      value = defaultValue;\n    } else {\n      (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(`Missing environment variable: ${name}`);\n    }\n  }\n  return value;\n}\nfunction getNextRuntime() {\n  return  false || (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.throwErr)(\"Missing environment variable: NEXT_RUNTIME\");\n}\nfunction getNodeEnvironment() {\n  return getEnvVariable(\"NODE_ENV\", \"\");\n}\n\n//# sourceMappingURL=env.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvZW52LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUN1QztBQUNDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscURBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFEQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxvREFBUSx5QkFBeUIsTUFBTSxzQkFBc0IsUUFBUTtBQUMzRTtBQUNBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLE1BQU0sb0RBQVEsa0NBQWtDLEtBQUs7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsTUFBd0IsSUFBSSxvREFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxlc21cXHV0aWxzXFxlbnYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2Vudi50c3hcbmltcG9ydCB7IHRocm93RXJyIH0gZnJvbSBcIi4vZXJyb3JzLmpzXCI7XG5pbXBvcnQgeyBkZWluZGVudCB9IGZyb20gXCIuL3N0cmluZ3MuanNcIjtcbmZ1bmN0aW9uIGlzQnJvd3Nlckxpa2UoKSB7XG4gIHJldHVybiB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBkb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCAhPT0gXCJ1bmRlZmluZWRcIjtcbn1cbnZhciBFTlZfVkFSX1JFTkFNRSA9IHtcbiAgTkVYVF9QVUJMSUNfU1RBQ0tfQVBJX1VSTDogW1wiU1RBQ0tfQkFTRV9VUkxcIiwgXCJORVhUX1BVQkxJQ19TVEFDS19VUkxcIl1cbn07XG5mdW5jdGlvbiBnZXRFbnZWYXJpYWJsZShuYW1lLCBkZWZhdWx0VmFsdWUpIHtcbiAgaWYgKGlzQnJvd3Nlckxpa2UoKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihkZWluZGVudGBcbiAgICAgIENhbid0IHVzZSBnZXRFbnZWYXJpYWJsZSBvbiB0aGUgY2xpZW50IGJlY2F1c2UgTmV4dC5qcyB0cmFuc3BpbGVzIGV4cHJlc3Npb25zIG9mIHRoZSBraW5kIHByb2Nlc3MuZW52LlhZWiBhdCBidWlsZC10aW1lIG9uIHRoZSBjbGllbnQuXG4gICAgXG4gICAgICBVc2UgcHJvY2Vzcy5lbnYuWFlaIGRpcmVjdGx5IGluc3RlYWQuXG4gICAgYCk7XG4gIH1cbiAgaWYgKG5hbWUgPT09IFwiTkVYVF9SVU5USU1FXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoZGVpbmRlbnRgXG4gICAgICBDYW4ndCB1c2UgZ2V0RW52VmFyaWFibGUgdG8gYWNjZXNzIHRoZSBORVhUX1JVTlRJTUUgZW52aXJvbm1lbnQgdmFyaWFibGUgYmVjYXVzZSBpdCdzIGNvbXBpbGVkIGludG8gdGhlIGNsaWVudCBidW5kbGUuXG4gICAgXG4gICAgICBVc2UgZ2V0TmV4dFJ1bnRpbWUoKSBpbnN0ZWFkLlxuICAgIGApO1xuICB9XG4gIGZvciAoY29uc3QgW25ld05hbWUsIG9sZE5hbWVzXSBvZiBPYmplY3QuZW50cmllcyhFTlZfVkFSX1JFTkFNRSkpIHtcbiAgICBpZiAob2xkTmFtZXMuaW5jbHVkZXMobmFtZSkpIHtcbiAgICAgIHRocm93RXJyKGBFbnZpcm9ubWVudCB2YXJpYWJsZSAke25hbWV9IGhhcyBiZWVuIHJlbmFtZWQgdG8gJHtuZXdOYW1lfS4gUGxlYXNlIHVwZGF0ZSB5b3VyIGNvbmZpZ3VyYXRpb24gdG8gdXNlIHRoZSBuZXcgbmFtZS5gKTtcbiAgICB9XG4gIH1cbiAgbGV0IHZhbHVlID0gcHJvY2Vzcy5lbnZbbmFtZV07XG4gIGlmICghdmFsdWUgJiYgRU5WX1ZBUl9SRU5BTUVbbmFtZV0pIHtcbiAgICBmb3IgKGNvbnN0IG9sZE5hbWUgb2YgRU5WX1ZBUl9SRU5BTUVbbmFtZV0pIHtcbiAgICAgIHZhbHVlID0gcHJvY2Vzcy5lbnZbb2xkTmFtZV07XG4gICAgICBpZiAodmFsdWUpIGJyZWFrO1xuICAgIH1cbiAgfVxuICBpZiAodmFsdWUgPT09IHZvaWQgMCkge1xuICAgIGlmIChkZWZhdWx0VmFsdWUgIT09IHZvaWQgMCkge1xuICAgICAgdmFsdWUgPSBkZWZhdWx0VmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93RXJyKGBNaXNzaW5nIGVudmlyb25tZW50IHZhcmlhYmxlOiAke25hbWV9YCk7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGdldE5leHRSdW50aW1lKCkge1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FIHx8IHRocm93RXJyKFwiTWlzc2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZTogTkVYVF9SVU5USU1FXCIpO1xufVxuZnVuY3Rpb24gZ2V0Tm9kZUVudmlyb25tZW50KCkge1xuICByZXR1cm4gZ2V0RW52VmFyaWFibGUoXCJOT0RFX0VOVlwiLCBcIlwiKTtcbn1cbmV4cG9ydCB7XG4gIGdldEVudlZhcmlhYmxlLFxuICBnZXROZXh0UnVudGltZSxcbiAgZ2V0Tm9kZUVudmlyb25tZW50LFxuICBpc0Jyb3dzZXJMaWtlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/env.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js":
/*!************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackAssertionError: () => (/* binding */ StackAssertionError),\n/* harmony export */   StatusError: () => (/* binding */ StatusError),\n/* harmony export */   captureError: () => (/* binding */ captureError),\n/* harmony export */   concatStacktraces: () => (/* binding */ concatStacktraces),\n/* harmony export */   errorToNiceString: () => (/* binding */ errorToNiceString),\n/* harmony export */   registerErrorSink: () => (/* binding */ registerErrorSink),\n/* harmony export */   throwErr: () => (/* binding */ throwErr)\n/* harmony export */ });\n/* harmony import */ var _globals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globals.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./objects.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n/* harmony import */ var _strings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/utils/errors.tsx\n\n\n\nfunction throwErr(...args) {\n  if (typeof args[0] === \"string\") {\n    throw new StackAssertionError(args[0], args[1]);\n  } else if (args[0] instanceof Error) {\n    throw args[0];\n  } else {\n    throw new StatusError(...args);\n  }\n}\nfunction removeStacktraceNameLine(stack) {\n  const addsNameLine = new Error().stack?.startsWith(\"Error\\n\");\n  return stack.split(\"\\n\").slice(addsNameLine ? 1 : 0).join(\"\\n\");\n}\nfunction concatStacktraces(first, ...errors) {\n  const addsEmptyLineAtEnd = first.stack?.endsWith(\"\\n\");\n  const separator = removeStacktraceNameLine(new Error().stack ?? \"\").split(\"\\n\")[0];\n  for (const error of errors) {\n    const toAppend = removeStacktraceNameLine(error.stack ?? \"\");\n    first.stack += (addsEmptyLineAtEnd ? \"\" : \"\\n\") + separator + \"\\n\" + toAppend;\n  }\n}\nvar StackAssertionError = class extends Error {\n  constructor(message, extraData) {\n    const disclaimer = `\n\nThis is likely an error in Stack. Please make sure you are running the newest version and report it.`;\n    super(`${message}${message.endsWith(disclaimer) ? \"\" : disclaimer}`, (0,_objects_js__WEBPACK_IMPORTED_MODULE_1__.pick)(extraData ?? {}, [\"cause\"]));\n    this.extraData = extraData;\n    Object.defineProperty(this, \"customCaptureExtraArgs\", {\n      get() {\n        return [this.extraData];\n      },\n      enumerable: false\n    });\n    if (process.env.NEXT_PUBLIC_STACK_DEBUGGER_ON_ASSERTION_ERROR === \"true\") {\n      debugger;\n    }\n  }\n};\nStackAssertionError.prototype.name = \"StackAssertionError\";\nfunction errorToNiceString(error) {\n  if (!(error instanceof Error)) return `${typeof error}<${(0,_strings_js__WEBPACK_IMPORTED_MODULE_2__.nicify)(error)}>`;\n  return (0,_strings_js__WEBPACK_IMPORTED_MODULE_2__.nicify)(error, { maxDepth: 8 });\n}\nvar errorSinks = /* @__PURE__ */ new Set();\nfunction registerErrorSink(sink) {\n  if (errorSinks.has(sink)) {\n    return;\n  }\n  errorSinks.add(sink);\n}\nregisterErrorSink((location, error, ...extraArgs) => {\n  console.error(\n    `\\x1B[41mCaptured error in ${location}:`,\n    // HACK: Log a nicified version of the error to get around buggy Next.js pretty-printing\n    // https://www.reddit.com/r/nextjs/comments/1gkxdqe/comment/m19kxgn/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button\n    errorToNiceString(error),\n    ...extraArgs,\n    \"\\x1B[0m\"\n  );\n});\nregisterErrorSink((location, error, ...extraArgs) => {\n  _globals_js__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors = _globals_js__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors ?? [];\n  _globals_js__WEBPACK_IMPORTED_MODULE_0__.globalVar.stackCapturedErrors.push({ location, error, extraArgs });\n});\nfunction captureError(location, error) {\n  for (const sink of errorSinks) {\n    sink(\n      location,\n      error,\n      ...error && (typeof error === \"object\" || typeof error === \"function\") && \"customCaptureExtraArgs\" in error && Array.isArray(error.customCaptureExtraArgs) ? error.customCaptureExtraArgs : []\n    );\n  }\n}\nvar StatusError = class extends Error {\n  constructor(status, message) {\n    if (typeof status === \"object\") {\n      message ??= status.message;\n      status = status.statusCode;\n    }\n    super(message);\n    this.__stackStatusErrorBrand = \"stack-status-error-brand-sentinel\";\n    this.name = \"StatusError\";\n    this.statusCode = status;\n    if (!message) {\n      throw new StackAssertionError(\"StatusError always requires a message unless a Status object is passed\", { cause: this });\n    }\n  }\n  static isStatusError(error) {\n    return typeof error === \"object\" && error !== null && \"__stackStatusErrorBrand\" in error && error.__stackStatusErrorBrand === \"stack-status-error-brand-sentinel\";\n  }\n  isClientError() {\n    return this.statusCode >= 400 && this.statusCode < 500;\n  }\n  isServerError() {\n    return !this.isClientError();\n  }\n  getStatusCode() {\n    return this.statusCode;\n  }\n  getBody() {\n    return new TextEncoder().encode(this.message);\n  }\n  getHeaders() {\n    return {\n      \"Content-Type\": [\"text/plain; charset=utf-8\"]\n    };\n  }\n  toDescriptiveJson() {\n    return {\n      status_code: this.getStatusCode(),\n      message: this.message,\n      headers: this.getHeaders()\n    };\n  }\n  /**\n   * @deprecated this is not a good way to make status errors human-readable, use toDescriptiveJson instead\n   */\n  toHttpJson() {\n    return {\n      status_code: this.statusCode,\n      body: this.message,\n      headers: this.getHeaders()\n    };\n  }\n};\nStatusError.BadRequest = { statusCode: 400, message: \"Bad Request\" };\nStatusError.Unauthorized = { statusCode: 401, message: \"Unauthorized\" };\nStatusError.PaymentRequired = { statusCode: 402, message: \"Payment Required\" };\nStatusError.Forbidden = { statusCode: 403, message: \"Forbidden\" };\nStatusError.NotFound = { statusCode: 404, message: \"Not Found\" };\nStatusError.MethodNotAllowed = { statusCode: 405, message: \"Method Not Allowed\" };\nStatusError.NotAcceptable = { statusCode: 406, message: \"Not Acceptable\" };\nStatusError.ProxyAuthenticationRequired = { statusCode: 407, message: \"Proxy Authentication Required\" };\nStatusError.RequestTimeout = { statusCode: 408, message: \"Request Timeout\" };\nStatusError.Conflict = { statusCode: 409, message: \"Conflict\" };\nStatusError.Gone = { statusCode: 410, message: \"Gone\" };\nStatusError.LengthRequired = { statusCode: 411, message: \"Length Required\" };\nStatusError.PreconditionFailed = { statusCode: 412, message: \"Precondition Failed\" };\nStatusError.PayloadTooLarge = { statusCode: 413, message: \"Payload Too Large\" };\nStatusError.URITooLong = { statusCode: 414, message: \"URI Too Long\" };\nStatusError.UnsupportedMediaType = { statusCode: 415, message: \"Unsupported Media Type\" };\nStatusError.RangeNotSatisfiable = { statusCode: 416, message: \"Range Not Satisfiable\" };\nStatusError.ExpectationFailed = { statusCode: 417, message: \"Expectation Failed\" };\nStatusError.ImATeapot = { statusCode: 418, message: \"I'm a teapot\" };\nStatusError.MisdirectedRequest = { statusCode: 421, message: \"Misdirected Request\" };\nStatusError.UnprocessableEntity = { statusCode: 422, message: \"Unprocessable Entity\" };\nStatusError.Locked = { statusCode: 423, message: \"Locked\" };\nStatusError.FailedDependency = { statusCode: 424, message: \"Failed Dependency\" };\nStatusError.TooEarly = { statusCode: 425, message: \"Too Early\" };\nStatusError.UpgradeRequired = { statusCode: 426, message: \"Upgrade Required\" };\nStatusError.PreconditionRequired = { statusCode: 428, message: \"Precondition Required\" };\nStatusError.TooManyRequests = { statusCode: 429, message: \"Too Many Requests\" };\nStatusError.RequestHeaderFieldsTooLarge = { statusCode: 431, message: \"Request Header Fields Too Large\" };\nStatusError.UnavailableForLegalReasons = { statusCode: 451, message: \"Unavailable For Legal Reasons\" };\nStatusError.InternalServerError = { statusCode: 500, message: \"Internal Server Error\" };\nStatusError.NotImplemented = { statusCode: 501, message: \"Not Implemented\" };\nStatusError.BadGateway = { statusCode: 502, message: \"Bad Gateway\" };\nStatusError.ServiceUnavailable = { statusCode: 503, message: \"Service Unavailable\" };\nStatusError.GatewayTimeout = { statusCode: 504, message: \"Gateway Timeout\" };\nStatusError.HTTPVersionNotSupported = { statusCode: 505, message: \"HTTP Version Not Supported\" };\nStatusError.VariantAlsoNegotiates = { statusCode: 506, message: \"Variant Also Negotiates\" };\nStatusError.InsufficientStorage = { statusCode: 507, message: \"Insufficient Storage\" };\nStatusError.LoopDetected = { statusCode: 508, message: \"Loop Detected\" };\nStatusError.NotExtended = { statusCode: 510, message: \"Not Extended\" };\nStatusError.NetworkAuthenticationRequired = { statusCode: 511, message: \"Network Authentication Required\" };\nStatusError.prototype.name = \"StatusError\";\n\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/functions.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/functions.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identity: () => (/* binding */ identity),\n/* harmony export */   identityArgs: () => (/* binding */ identityArgs)\n/* harmony export */ });\n// src/utils/functions.tsx\nfunction identity(t) {\n  return t;\n}\nfunction identityArgs(...args) {\n  return args;\n}\n\n//# sourceMappingURL=functions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvZnVuY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcZXNtXFx1dGlsc1xcZnVuY3Rpb25zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9mdW5jdGlvbnMudHN4XG5mdW5jdGlvbiBpZGVudGl0eSh0KSB7XG4gIHJldHVybiB0O1xufVxuZnVuY3Rpb24gaWRlbnRpdHlBcmdzKC4uLmFyZ3MpIHtcbiAgcmV0dXJuIGFyZ3M7XG59XG5leHBvcnQge1xuICBpZGVudGl0eSxcbiAgaWRlbnRpdHlBcmdzXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnVuY3Rpb25zLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/functions.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGlobal: () => (/* binding */ createGlobal),\n/* harmony export */   globalVar: () => (/* binding */ globalVar)\n/* harmony export */ });\n// src/utils/globals.tsx\nvar globalVar = typeof globalThis !== \"undefined\" ? globalThis : typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof window !== \"undefined\" ? window : typeof self !== \"undefined\" ? self : {};\nif (typeof globalThis === \"undefined\") {\n  globalVar.globalThis = globalVar;\n}\nvar stackGlobalsSymbol = Symbol.for(\"__stack-globals\");\nglobalVar[stackGlobalsSymbol] ??= {};\nfunction createGlobal(key, init) {\n  if (!globalVar[stackGlobalsSymbol][key]) {\n    globalVar[stackGlobalsSymbol][key] = init();\n  }\n  return globalVar[stackGlobalsSymbol][key];\n}\n\n//# sourceMappingURL=globals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvZ2xvYmFscy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0Esd0VBQXdFLHFCQUFNLG1CQUFtQixxQkFBTTtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXGVzbVxcdXRpbHNcXGdsb2JhbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2dsb2JhbHMudHN4XG52YXIgZ2xvYmFsVmFyID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWxUaGlzIDogdHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbCA6IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiA/IHNlbGYgOiB7fTtcbmlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICBnbG9iYWxWYXIuZ2xvYmFsVGhpcyA9IGdsb2JhbFZhcjtcbn1cbnZhciBzdGFja0dsb2JhbHNTeW1ib2wgPSBTeW1ib2wuZm9yKFwiX19zdGFjay1nbG9iYWxzXCIpO1xuZ2xvYmFsVmFyW3N0YWNrR2xvYmFsc1N5bWJvbF0gPz89IHt9O1xuZnVuY3Rpb24gY3JlYXRlR2xvYmFsKGtleSwgaW5pdCkge1xuICBpZiAoIWdsb2JhbFZhcltzdGFja0dsb2JhbHNTeW1ib2xdW2tleV0pIHtcbiAgICBnbG9iYWxWYXJbc3RhY2tHbG9iYWxzU3ltYm9sXVtrZXldID0gaW5pdCgpO1xuICB9XG4gIHJldHVybiBnbG9iYWxWYXJbc3RhY2tHbG9iYWxzU3ltYm9sXVtrZXldO1xufVxuZXhwb3J0IHtcbiAgY3JlYXRlR2xvYmFsLFxuICBnbG9iYWxWYXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nbG9iYWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/http.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/http.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HTTP_METHODS: () => (/* binding */ HTTP_METHODS),\n/* harmony export */   decodeBasicAuthorizationHeader: () => (/* binding */ decodeBasicAuthorizationHeader),\n/* harmony export */   encodeBasicAuthorizationHeader: () => (/* binding */ encodeBasicAuthorizationHeader)\n/* harmony export */ });\n/* harmony import */ var _bytes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytes.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js\");\n// src/utils/http.tsx\n\nvar HTTP_METHODS = {\n  \"GET\": {\n    safe: true,\n    idempotent: true\n  },\n  \"POST\": {\n    safe: false,\n    idempotent: false\n  },\n  \"PUT\": {\n    safe: false,\n    idempotent: true\n  },\n  \"DELETE\": {\n    safe: false,\n    idempotent: true\n  },\n  \"PATCH\": {\n    safe: false,\n    idempotent: false\n  },\n  \"OPTIONS\": {\n    safe: true,\n    idempotent: true\n  },\n  \"HEAD\": {\n    safe: true,\n    idempotent: true\n  },\n  \"TRACE\": {\n    safe: true,\n    idempotent: true\n  },\n  \"CONNECT\": {\n    safe: false,\n    idempotent: false\n  }\n};\nfunction decodeBasicAuthorizationHeader(value) {\n  const [type, encoded, ...rest] = value.split(\" \");\n  if (rest.length > 0) return null;\n  if (!encoded) return null;\n  if (type !== \"Basic\") return null;\n  if (!(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.isBase64)(encoded)) return null;\n  const decoded = new TextDecoder().decode((0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.decodeBase64)(encoded));\n  const split = decoded.split(\":\");\n  return [split[0], split.slice(1).join(\":\")];\n}\nfunction encodeBasicAuthorizationHeader(id, password) {\n  if (id.includes(\":\")) throw new Error(\"Basic authorization header id cannot contain ':'\");\n  return `Basic ${(0,_bytes_js__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(new TextEncoder().encode(`${id}:${password}`))}`;\n}\n\n//# sourceMappingURL=http.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvaHR0cC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDa0U7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxtREFBUTtBQUNmLDJDQUEyQyx1REFBWTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVEQUFZLDZCQUE2QixHQUFHLEdBQUcsU0FBUyxJQUFJO0FBQzlFO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXGVzbVxcdXRpbHNcXGh0dHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2h0dHAudHN4XG5pbXBvcnQgeyBkZWNvZGVCYXNlNjQsIGVuY29kZUJhc2U2NCwgaXNCYXNlNjQgfSBmcm9tIFwiLi9ieXRlcy5qc1wiO1xudmFyIEhUVFBfTUVUSE9EUyA9IHtcbiAgXCJHRVRcIjoge1xuICAgIHNhZmU6IHRydWUsXG4gICAgaWRlbXBvdGVudDogdHJ1ZVxuICB9LFxuICBcIlBPU1RcIjoge1xuICAgIHNhZmU6IGZhbHNlLFxuICAgIGlkZW1wb3RlbnQ6IGZhbHNlXG4gIH0sXG4gIFwiUFVUXCI6IHtcbiAgICBzYWZlOiBmYWxzZSxcbiAgICBpZGVtcG90ZW50OiB0cnVlXG4gIH0sXG4gIFwiREVMRVRFXCI6IHtcbiAgICBzYWZlOiBmYWxzZSxcbiAgICBpZGVtcG90ZW50OiB0cnVlXG4gIH0sXG4gIFwiUEFUQ0hcIjoge1xuICAgIHNhZmU6IGZhbHNlLFxuICAgIGlkZW1wb3RlbnQ6IGZhbHNlXG4gIH0sXG4gIFwiT1BUSU9OU1wiOiB7XG4gICAgc2FmZTogdHJ1ZSxcbiAgICBpZGVtcG90ZW50OiB0cnVlXG4gIH0sXG4gIFwiSEVBRFwiOiB7XG4gICAgc2FmZTogdHJ1ZSxcbiAgICBpZGVtcG90ZW50OiB0cnVlXG4gIH0sXG4gIFwiVFJBQ0VcIjoge1xuICAgIHNhZmU6IHRydWUsXG4gICAgaWRlbXBvdGVudDogdHJ1ZVxuICB9LFxuICBcIkNPTk5FQ1RcIjoge1xuICAgIHNhZmU6IGZhbHNlLFxuICAgIGlkZW1wb3RlbnQ6IGZhbHNlXG4gIH1cbn07XG5mdW5jdGlvbiBkZWNvZGVCYXNpY0F1dGhvcml6YXRpb25IZWFkZXIodmFsdWUpIHtcbiAgY29uc3QgW3R5cGUsIGVuY29kZWQsIC4uLnJlc3RdID0gdmFsdWUuc3BsaXQoXCIgXCIpO1xuICBpZiAocmVzdC5sZW5ndGggPiAwKSByZXR1cm4gbnVsbDtcbiAgaWYgKCFlbmNvZGVkKSByZXR1cm4gbnVsbDtcbiAgaWYgKHR5cGUgIT09IFwiQmFzaWNcIikgcmV0dXJuIG51bGw7XG4gIGlmICghaXNCYXNlNjQoZW5jb2RlZCkpIHJldHVybiBudWxsO1xuICBjb25zdCBkZWNvZGVkID0gbmV3IFRleHREZWNvZGVyKCkuZGVjb2RlKGRlY29kZUJhc2U2NChlbmNvZGVkKSk7XG4gIGNvbnN0IHNwbGl0ID0gZGVjb2RlZC5zcGxpdChcIjpcIik7XG4gIHJldHVybiBbc3BsaXRbMF0sIHNwbGl0LnNsaWNlKDEpLmpvaW4oXCI6XCIpXTtcbn1cbmZ1bmN0aW9uIGVuY29kZUJhc2ljQXV0aG9yaXphdGlvbkhlYWRlcihpZCwgcGFzc3dvcmQpIHtcbiAgaWYgKGlkLmluY2x1ZGVzKFwiOlwiKSkgdGhyb3cgbmV3IEVycm9yKFwiQmFzaWMgYXV0aG9yaXphdGlvbiBoZWFkZXIgaWQgY2Fubm90IGNvbnRhaW4gJzonXCIpO1xuICByZXR1cm4gYEJhc2ljICR7ZW5jb2RlQmFzZTY0KG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShgJHtpZH06JHtwYXNzd29yZH1gKSl9YDtcbn1cbmV4cG9ydCB7XG4gIEhUVFBfTUVUSE9EUyxcbiAgZGVjb2RlQmFzaWNBdXRob3JpemF0aW9uSGVhZGVyLFxuICBlbmNvZGVCYXNpY0F1dGhvcml6YXRpb25IZWFkZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/http.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/locks.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/locks.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadWriteLock: () => (/* binding */ ReadWriteLock)\n/* harmony export */ });\n/* harmony import */ var async_mutex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! async-mutex */ \"(app-pages-browser)/./node_modules/async-mutex/index.mjs\");\n// src/utils/locks.tsx\n\nvar ReadWriteLock = class {\n  constructor() {\n    this.semaphore = new async_mutex__WEBPACK_IMPORTED_MODULE_0__.Semaphore(1);\n    this.readers = 0;\n    this.readersMutex = new async_mutex__WEBPACK_IMPORTED_MODULE_0__.Semaphore(1);\n  }\n  async withReadLock(callback) {\n    await this._acquireReadLock();\n    try {\n      return await callback();\n    } finally {\n      await this._releaseReadLock();\n    }\n  }\n  async withWriteLock(callback) {\n    await this._acquireWriteLock();\n    try {\n      return await callback();\n    } finally {\n      await this._releaseWriteLock();\n    }\n  }\n  async _acquireReadLock() {\n    await this.readersMutex.acquire();\n    try {\n      this.readers += 1;\n      if (this.readers === 1) {\n        await this.semaphore.acquire();\n      }\n    } finally {\n      this.readersMutex.release();\n    }\n  }\n  async _releaseReadLock() {\n    await this.readersMutex.acquire();\n    try {\n      this.readers -= 1;\n      if (this.readers === 0) {\n        this.semaphore.release();\n      }\n    } finally {\n      this.readersMutex.release();\n    }\n  }\n  async _acquireWriteLock() {\n    await this.semaphore.acquire();\n  }\n  async _releaseWriteLock() {\n    this.semaphore.release();\n  }\n};\n\n//# sourceMappingURL=locks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvbG9ja3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUN3QztBQUN4QztBQUNBO0FBQ0EseUJBQXlCLGtEQUFTO0FBQ2xDO0FBQ0EsNEJBQTRCLGtEQUFTO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcZXNtXFx1dGlsc1xcbG9ja3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL2xvY2tzLnRzeFxuaW1wb3J0IHsgU2VtYXBob3JlIH0gZnJvbSBcImFzeW5jLW11dGV4XCI7XG52YXIgUmVhZFdyaXRlTG9jayA9IGNsYXNzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5zZW1hcGhvcmUgPSBuZXcgU2VtYXBob3JlKDEpO1xuICAgIHRoaXMucmVhZGVycyA9IDA7XG4gICAgdGhpcy5yZWFkZXJzTXV0ZXggPSBuZXcgU2VtYXBob3JlKDEpO1xuICB9XG4gIGFzeW5jIHdpdGhSZWFkTG9jayhjYWxsYmFjaykge1xuICAgIGF3YWl0IHRoaXMuX2FjcXVpcmVSZWFkTG9jaygpO1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gYXdhaXQgY2FsbGJhY2soKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgYXdhaXQgdGhpcy5fcmVsZWFzZVJlYWRMb2NrKCk7XG4gICAgfVxuICB9XG4gIGFzeW5jIHdpdGhXcml0ZUxvY2soY2FsbGJhY2spIHtcbiAgICBhd2FpdCB0aGlzLl9hY3F1aXJlV3JpdGVMb2NrKCk7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBhd2FpdCBjYWxsYmFjaygpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBhd2FpdCB0aGlzLl9yZWxlYXNlV3JpdGVMb2NrKCk7XG4gICAgfVxuICB9XG4gIGFzeW5jIF9hY3F1aXJlUmVhZExvY2soKSB7XG4gICAgYXdhaXQgdGhpcy5yZWFkZXJzTXV0ZXguYWNxdWlyZSgpO1xuICAgIHRyeSB7XG4gICAgICB0aGlzLnJlYWRlcnMgKz0gMTtcbiAgICAgIGlmICh0aGlzLnJlYWRlcnMgPT09IDEpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5zZW1hcGhvcmUuYWNxdWlyZSgpO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLnJlYWRlcnNNdXRleC5yZWxlYXNlKCk7XG4gICAgfVxuICB9XG4gIGFzeW5jIF9yZWxlYXNlUmVhZExvY2soKSB7XG4gICAgYXdhaXQgdGhpcy5yZWFkZXJzTXV0ZXguYWNxdWlyZSgpO1xuICAgIHRyeSB7XG4gICAgICB0aGlzLnJlYWRlcnMgLT0gMTtcbiAgICAgIGlmICh0aGlzLnJlYWRlcnMgPT09IDApIHtcbiAgICAgICAgdGhpcy5zZW1hcGhvcmUucmVsZWFzZSgpO1xuICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICB0aGlzLnJlYWRlcnNNdXRleC5yZWxlYXNlKCk7XG4gICAgfVxuICB9XG4gIGFzeW5jIF9hY3F1aXJlV3JpdGVMb2NrKCkge1xuICAgIGF3YWl0IHRoaXMuc2VtYXBob3JlLmFjcXVpcmUoKTtcbiAgfVxuICBhc3luYyBfcmVsZWFzZVdyaXRlTG9jaygpIHtcbiAgICB0aGlzLnNlbWFwaG9yZS5yZWxlYXNlKCk7XG4gIH1cbn07XG5leHBvcnQge1xuICBSZWFkV3JpdGVMb2NrXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9ja3MuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/locks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DependenciesMap: () => (/* binding */ DependenciesMap),\n/* harmony export */   IterableWeakMap: () => (/* binding */ IterableWeakMap),\n/* harmony export */   MaybeWeakMap: () => (/* binding */ MaybeWeakMap),\n/* harmony export */   WeakRefIfAvailable: () => (/* binding */ WeakRefIfAvailable)\n/* harmony export */ });\n/* harmony import */ var _results_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./results.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n// src/utils/maps.tsx\n\nvar WeakRefIfAvailable = class {\n  constructor(value) {\n    if (typeof WeakRef === \"undefined\") {\n      this._ref = { deref: () => value };\n    } else {\n      this._ref = new WeakRef(value);\n    }\n  }\n  deref() {\n    return this._ref.deref();\n  }\n};\nvar _a, _b;\nvar IterableWeakMap = class {\n  constructor(entries) {\n    this[_a] = \"IterableWeakMap\";\n    const mappedEntries = entries?.map((e) => [e[0], { value: e[1], keyRef: new WeakRefIfAvailable(e[0]) }]);\n    this._weakMap = new WeakMap(mappedEntries ?? []);\n    this._keyRefs = new Set(mappedEntries?.map((e) => e[1].keyRef) ?? []);\n  }\n  get(key) {\n    return this._weakMap.get(key)?.value;\n  }\n  set(key, value) {\n    const existing = this._weakMap.get(key);\n    const updated = { value, keyRef: existing?.keyRef ?? new WeakRefIfAvailable(key) };\n    this._weakMap.set(key, updated);\n    this._keyRefs.add(updated.keyRef);\n    return this;\n  }\n  delete(key) {\n    const res = this._weakMap.get(key);\n    if (res) {\n      this._weakMap.delete(key);\n      this._keyRefs.delete(res.keyRef);\n      return true;\n    }\n    return false;\n  }\n  has(key) {\n    return this._weakMap.has(key) && this._keyRefs.has(this._weakMap.get(key).keyRef);\n  }\n  *[(_b = Symbol.iterator, _a = Symbol.toStringTag, _b)]() {\n    for (const keyRef of this._keyRefs) {\n      const key = keyRef.deref();\n      const existing = key ? this._weakMap.get(key) : void 0;\n      if (!key) {\n        this._keyRefs.delete(keyRef);\n      } else if (existing) {\n        yield [key, existing.value];\n      }\n    }\n  }\n};\nvar _a2, _b2;\nvar MaybeWeakMap = class {\n  constructor(entries) {\n    this[_a2] = \"MaybeWeakMap\";\n    const entriesArray = [...entries ?? []];\n    this._primitiveMap = new Map(entriesArray.filter((e) => !this._isAllowedInWeakMap(e[0])));\n    this._weakMap = new IterableWeakMap(entriesArray.filter((e) => this._isAllowedInWeakMap(e[0])));\n  }\n  _isAllowedInWeakMap(key) {\n    return typeof key === \"object\" && key !== null || typeof key === \"symbol\" && Symbol.keyFor(key) === void 0;\n  }\n  get(key) {\n    if (this._isAllowedInWeakMap(key)) {\n      return this._weakMap.get(key);\n    } else {\n      return this._primitiveMap.get(key);\n    }\n  }\n  set(key, value) {\n    if (this._isAllowedInWeakMap(key)) {\n      this._weakMap.set(key, value);\n    } else {\n      this._primitiveMap.set(key, value);\n    }\n    return this;\n  }\n  delete(key) {\n    if (this._isAllowedInWeakMap(key)) {\n      return this._weakMap.delete(key);\n    } else {\n      return this._primitiveMap.delete(key);\n    }\n  }\n  has(key) {\n    if (this._isAllowedInWeakMap(key)) {\n      return this._weakMap.has(key);\n    } else {\n      return this._primitiveMap.has(key);\n    }\n  }\n  *[(_b2 = Symbol.iterator, _a2 = Symbol.toStringTag, _b2)]() {\n    yield* this._primitiveMap;\n    yield* this._weakMap;\n  }\n};\nvar _a3, _b3;\nvar DependenciesMap = class {\n  constructor() {\n    this._inner = { map: new MaybeWeakMap(), hasValue: false, value: void 0 };\n    this[_a3] = \"DependenciesMap\";\n  }\n  _valueToResult(inner) {\n    if (inner.hasValue) {\n      return _results_js__WEBPACK_IMPORTED_MODULE_0__.Result.ok(inner.value);\n    } else {\n      return _results_js__WEBPACK_IMPORTED_MODULE_0__.Result.error(void 0);\n    }\n  }\n  _unwrapFromInner(dependencies, inner) {\n    if (dependencies.length === 0) {\n      return this._valueToResult(inner);\n    } else {\n      const [key, ...rest] = dependencies;\n      const newInner = inner.map.get(key);\n      if (!newInner) {\n        return _results_js__WEBPACK_IMPORTED_MODULE_0__.Result.error(void 0);\n      }\n      return this._unwrapFromInner(rest, newInner);\n    }\n  }\n  _setInInner(dependencies, value, inner) {\n    if (dependencies.length === 0) {\n      const res = this._valueToResult(inner);\n      if (value.status === \"ok\") {\n        inner.hasValue = true;\n        inner.value = value.data;\n      } else {\n        inner.hasValue = false;\n        inner.value = void 0;\n      }\n      return res;\n    } else {\n      const [key, ...rest] = dependencies;\n      let newInner = inner.map.get(key);\n      if (!newInner) {\n        inner.map.set(key, newInner = { map: new MaybeWeakMap(), hasValue: false, value: void 0 });\n      }\n      return this._setInInner(rest, value, newInner);\n    }\n  }\n  *_iterateInner(dependencies, inner) {\n    if (inner.hasValue) {\n      yield [dependencies, inner.value];\n    }\n    for (const [key, value] of inner.map) {\n      yield* this._iterateInner([...dependencies, key], value);\n    }\n  }\n  get(dependencies) {\n    return _results_js__WEBPACK_IMPORTED_MODULE_0__.Result.or(this._unwrapFromInner(dependencies, this._inner), void 0);\n  }\n  set(dependencies, value) {\n    this._setInInner(dependencies, _results_js__WEBPACK_IMPORTED_MODULE_0__.Result.ok(value), this._inner);\n    return this;\n  }\n  delete(dependencies) {\n    return this._setInInner(dependencies, _results_js__WEBPACK_IMPORTED_MODULE_0__.Result.error(void 0), this._inner).status === \"ok\";\n  }\n  has(dependencies) {\n    return this._unwrapFromInner(dependencies, this._inner).status === \"ok\";\n  }\n  clear() {\n    this._inner = { map: new MaybeWeakMap(), hasValue: false, value: void 0 };\n  }\n  *[(_b3 = Symbol.iterator, _a3 = Symbol.toStringTag, _b3)]() {\n    yield* this._iterateInner([], this._inner);\n  }\n};\n\n//# sourceMappingURL=maps.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/math.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/math.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remainder: () => (/* binding */ remainder)\n/* harmony export */ });\n// src/utils/math.tsx\nfunction remainder(n, d) {\n  return (n % d + Math.abs(d)) % d;\n}\n\n//# sourceMappingURL=math.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvbWF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcZXNtXFx1dGlsc1xcbWF0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvbWF0aC50c3hcbmZ1bmN0aW9uIHJlbWFpbmRlcihuLCBkKSB7XG4gIHJldHVybiAobiAlIGQgKyBNYXRoLmFicyhkKSkgJSBkO1xufVxuZXhwb3J0IHtcbiAgcmVtYWluZGVyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWF0aC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/math.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/oauth.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/oauth.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allProviders: () => (/* binding */ allProviders),\n/* harmony export */   sharedProviders: () => (/* binding */ sharedProviders),\n/* harmony export */   standardProviders: () => (/* binding */ standardProviders)\n/* harmony export */ });\n// src/utils/oauth.tsx\nvar standardProviders = [\"google\", \"github\", \"microsoft\", \"spotify\", \"facebook\", \"discord\", \"gitlab\", \"bitbucket\", \"linkedin\", \"apple\", \"x\", \"twitch\"];\nvar sharedProviders = [\"google\", \"github\", \"microsoft\", \"spotify\"];\nvar allProviders = standardProviders;\n\n//# sourceMappingURL=oauth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvb2F1dGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcZXNtXFx1dGlsc1xcb2F1dGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL29hdXRoLnRzeFxudmFyIHN0YW5kYXJkUHJvdmlkZXJzID0gW1wiZ29vZ2xlXCIsIFwiZ2l0aHViXCIsIFwibWljcm9zb2Z0XCIsIFwic3BvdGlmeVwiLCBcImZhY2Vib29rXCIsIFwiZGlzY29yZFwiLCBcImdpdGxhYlwiLCBcImJpdGJ1Y2tldFwiLCBcImxpbmtlZGluXCIsIFwiYXBwbGVcIiwgXCJ4XCIsIFwidHdpdGNoXCJdO1xudmFyIHNoYXJlZFByb3ZpZGVycyA9IFtcImdvb2dsZVwiLCBcImdpdGh1YlwiLCBcIm1pY3Jvc29mdFwiLCBcInNwb3RpZnlcIl07XG52YXIgYWxsUHJvdmlkZXJzID0gc3RhbmRhcmRQcm92aWRlcnM7XG5leHBvcnQge1xuICBhbGxQcm92aWRlcnMsXG4gIHNoYXJlZFByb3ZpZGVycyxcbiAgc3RhbmRhcmRQcm92aWRlcnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYXV0aC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/oauth.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deepFilterUndefined: () => (/* binding */ deepFilterUndefined),\n/* harmony export */   deepMerge: () => (/* binding */ deepMerge),\n/* harmony export */   deepPlainClone: () => (/* binding */ deepPlainClone),\n/* harmony export */   deepPlainEquals: () => (/* binding */ deepPlainEquals),\n/* harmony export */   deepSortKeys: () => (/* binding */ deepSortKeys),\n/* harmony export */   deleteKey: () => (/* binding */ deleteKey),\n/* harmony export */   filterUndefined: () => (/* binding */ filterUndefined),\n/* harmony export */   filterUndefinedOrNull: () => (/* binding */ filterUndefinedOrNull),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getOrUndefined: () => (/* binding */ getOrUndefined),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   hasAndNotUndefined: () => (/* binding */ hasAndNotUndefined),\n/* harmony export */   isCloneable: () => (/* binding */ isCloneable),\n/* harmony export */   isNotNull: () => (/* binding */ isNotNull),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   mapValues: () => (/* binding */ mapValues),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   shallowClone: () => (/* binding */ shallowClone),\n/* harmony export */   sortKeys: () => (/* binding */ sortKeys),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   typedAssign: () => (/* binding */ typedAssign),\n/* harmony export */   typedEntries: () => (/* binding */ typedEntries),\n/* harmony export */   typedFromEntries: () => (/* binding */ typedFromEntries),\n/* harmony export */   typedKeys: () => (/* binding */ typedKeys),\n/* harmony export */   typedValues: () => (/* binding */ typedValues)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functions.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/functions.js\");\n/* harmony import */ var _strings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/types.js\");\n// src/utils/objects.tsx\n\n\n\n\nfunction isNotNull(value) {\n  return value !== null && value !== void 0;\n}\nfunction deepPlainEquals(obj1, obj2, options = {}) {\n  if (typeof obj1 !== typeof obj2) return false;\n  if (obj1 === obj2) return true;\n  switch (typeof obj1) {\n    case \"object\": {\n      if (!obj1 || !obj2) return false;\n      if (Array.isArray(obj1) || Array.isArray(obj2)) {\n        if (!Array.isArray(obj1) || !Array.isArray(obj2)) return false;\n        if (obj1.length !== obj2.length) return false;\n        return obj1.every((v, i) => deepPlainEquals(v, obj2[i], options));\n      }\n      const entries1 = Object.entries(obj1).filter(([k, v]) => !options.ignoreUndefinedValues || v !== void 0);\n      const entries2 = Object.entries(obj2).filter(([k, v]) => !options.ignoreUndefinedValues || v !== void 0);\n      if (entries1.length !== entries2.length) return false;\n      return entries1.every(([k, v1]) => {\n        const e2 = entries2.find(([k2]) => k === k2);\n        if (!e2) return false;\n        return deepPlainEquals(v1, e2[1], options);\n      });\n    }\n    case \"undefined\":\n    case \"string\":\n    case \"number\":\n    case \"boolean\":\n    case \"bigint\":\n    case \"symbol\":\n    case \"function\": {\n      return false;\n    }\n    default: {\n      throw new Error(\"Unexpected typeof \" + typeof obj1);\n    }\n  }\n}\nfunction isCloneable(obj) {\n  return typeof obj !== \"symbol\" && typeof obj !== \"function\";\n}\nfunction shallowClone(obj) {\n  if (!isCloneable(obj)) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"shallowClone does not support symbols or functions\", { obj });\n  if (Array.isArray(obj)) return obj.map(_functions_js__WEBPACK_IMPORTED_MODULE_1__.identity);\n  return { ...obj };\n}\nfunction deepPlainClone(obj) {\n  if (typeof obj === \"function\") throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepPlainClone does not support functions\");\n  if (typeof obj === \"symbol\") throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepPlainClone does not support symbols\");\n  if (typeof obj !== \"object\" || !obj) return obj;\n  if (Array.isArray(obj)) return obj.map(deepPlainClone);\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, deepPlainClone(v)]));\n}\nfunction deepMerge(baseObj, mergeObj) {\n  if ([baseObj, mergeObj, ...Object.values(baseObj), ...Object.values(mergeObj)].some((o) => !isCloneable(o))) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"deepMerge does not support functions or symbols\", { baseObj, mergeObj });\n  const res = shallowClone(baseObj);\n  for (const [key, mergeValue] of Object.entries(mergeObj)) {\n    if (has(res, key)) {\n      const baseValue = get(res, key);\n      if (isObjectLike(baseValue) && isObjectLike(mergeValue)) {\n        set(res, key, deepMerge(baseValue, mergeValue));\n        continue;\n      }\n    }\n    set(res, key, mergeValue);\n  }\n  return res;\n}\nfunction typedEntries(obj) {\n  return Object.entries(obj);\n}\nfunction typedFromEntries(entries) {\n  return Object.fromEntries(entries);\n}\nfunction typedKeys(obj) {\n  return Object.keys(obj);\n}\nfunction typedValues(obj) {\n  return Object.values(obj);\n}\nfunction typedAssign(target, source) {\n  return Object.assign(target, source);\n}\nfunction filterUndefined(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(([, v]) => v !== void 0));\n}\nfunction filterUndefinedOrNull(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(([, v]) => v !== void 0 && v !== null));\n}\n(0,_types_js__WEBPACK_IMPORTED_MODULE_3__.typeAssertIs)()();\nfunction deepFilterUndefined(obj) {\n  return Object.fromEntries(Object.entries(obj).filter(([, v]) => v !== void 0).map(([k, v]) => [k, isObjectLike(v) ? deepFilterUndefined(v) : v]));\n}\nfunction pick(obj, keys) {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => keys.includes(k)));\n}\nfunction omit(obj, keys) {\n  if (!Array.isArray(keys)) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(\"omit: keys must be an array\", { obj, keys });\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n}\nfunction split(obj, keys) {\n  return [pick(obj, keys), omit(obj, keys)];\n}\nfunction mapValues(obj, fn) {\n  if (Array.isArray(obj)) {\n    return obj.map((v) => fn(v));\n  }\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, fn(v)]));\n}\nfunction sortKeys(obj) {\n  if (Array.isArray(obj)) {\n    return [...obj];\n  }\n  return Object.fromEntries(Object.entries(obj).sort(([a], [b]) => (0,_strings_js__WEBPACK_IMPORTED_MODULE_2__.stringCompare)(a, b)));\n}\nfunction deepSortKeys(obj) {\n  return sortKeys(mapValues(obj, (v) => isObjectLike(v) ? deepSortKeys(v) : v));\n}\nfunction set(obj, key, value) {\n  Object.defineProperty(obj, key, { value, writable: true, configurable: true, enumerable: true });\n}\nfunction get(obj, key) {\n  const descriptor = Object.getOwnPropertyDescriptor(obj, key);\n  if (!descriptor) throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`get: key ${String(key)} does not exist`, { obj, key });\n  return descriptor.value;\n}\nfunction getOrUndefined(obj, key) {\n  return has(obj, key) ? get(obj, key) : void 0;\n}\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction hasAndNotUndefined(obj, key) {\n  return has(obj, key) && get(obj, key) !== void 0;\n}\nfunction deleteKey(obj, key) {\n  if (has(obj, key)) {\n    Reflect.deleteProperty(obj, key);\n  } else {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`deleteKey: key ${String(key)} does not exist`, { obj, key });\n  }\n}\nfunction isObjectLike(value) {\n  return (typeof value === \"object\" || typeof value === \"function\") && value !== null;\n}\n\n//# sourceMappingURL=objects.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concatStacktracesIfRejected: () => (/* binding */ concatStacktracesIfRejected),\n/* harmony export */   createPromise: () => (/* binding */ createPromise),\n/* harmony export */   ignoreUnhandledRejection: () => (/* binding */ ignoreUnhandledRejection),\n/* harmony export */   neverResolve: () => (/* binding */ neverResolve),\n/* harmony export */   pending: () => (/* binding */ pending),\n/* harmony export */   rateLimited: () => (/* binding */ rateLimited),\n/* harmony export */   rejected: () => (/* binding */ rejected),\n/* harmony export */   resolved: () => (/* binding */ resolved),\n/* harmony export */   runAsynchronously: () => (/* binding */ runAsynchronously),\n/* harmony export */   runAsynchronouslyWithAlert: () => (/* binding */ runAsynchronouslyWithAlert),\n/* harmony export */   throttled: () => (/* binding */ throttled),\n/* harmony export */   timeout: () => (/* binding */ timeout),\n/* harmony export */   timeoutThrow: () => (/* binding */ timeoutThrow),\n/* harmony export */   wait: () => (/* binding */ wait),\n/* harmony export */   waitUntil: () => (/* binding */ waitUntil)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _maps_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./maps.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js\");\n/* harmony import */ var _results_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./results.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var _uuids_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uuids.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/utils/promises.tsx\n\n\n\n\n\nfunction createPromise(callback) {\n  let status = \"pending\";\n  let valueOrReason = void 0;\n  let resolve = null;\n  let reject = null;\n  const promise = new Promise((res, rej) => {\n    resolve = (value) => {\n      if (status !== \"pending\") return;\n      status = \"fulfilled\";\n      valueOrReason = value;\n      res(value);\n    };\n    reject = (reason) => {\n      if (status !== \"pending\") return;\n      status = \"rejected\";\n      valueOrReason = reason;\n      rej(reason);\n    };\n  });\n  callback(resolve, reject);\n  return Object.assign(promise, {\n    status,\n    ...status === \"fulfilled\" ? { value: valueOrReason } : {},\n    ...status === \"rejected\" ? { reason: valueOrReason } : {}\n  });\n}\nvar resolvedCache = null;\nfunction resolved(value) {\n  resolvedCache ??= new _maps_js__WEBPACK_IMPORTED_MODULE_2__.DependenciesMap();\n  if (resolvedCache.has([value])) {\n    return resolvedCache.get([value]);\n  }\n  const res = Object.assign(Promise.resolve(value), {\n    status: \"fulfilled\",\n    value\n  });\n  resolvedCache.set([value], res);\n  return res;\n}\nvar rejectedCache = null;\nfunction rejected(reason) {\n  rejectedCache ??= new _maps_js__WEBPACK_IMPORTED_MODULE_2__.DependenciesMap();\n  if (rejectedCache.has([reason])) {\n    return rejectedCache.get([reason]);\n  }\n  const promise = Promise.reject(reason);\n  ignoreUnhandledRejection(promise);\n  const res = Object.assign(promise, {\n    status: \"rejected\",\n    reason\n  });\n  rejectedCache.set([reason], res);\n  return res;\n}\nvar neverResolvePromise = pending(new Promise(() => {\n}));\nfunction neverResolve() {\n  return neverResolvePromise;\n}\nfunction pending(promise, options = {}) {\n  const res = promise.then(\n    (value) => {\n      res.status = \"fulfilled\";\n      res.value = value;\n      return value;\n    },\n    (actualReason) => {\n      res.status = \"rejected\";\n      res.reason = actualReason;\n      throw actualReason;\n    }\n  );\n  res.status = \"pending\";\n  return res;\n}\nfunction ignoreUnhandledRejection(promise) {\n  promise.catch(() => {\n  });\n}\nfunction concatStacktracesIfRejected(promise) {\n  const currentError = new Error();\n  promise.catch((error) => {\n    if (error instanceof Error) {\n      (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.concatStacktraces)(error, currentError);\n    } else {\n    }\n  });\n}\nasync function wait(ms) {\n  if (!Number.isFinite(ms) || ms < 0) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(`wait() requires a non-negative integer number of milliseconds to wait. (found: ${ms}ms)`);\n  }\n  if (ms >= 2 ** 31) {\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"The maximum timeout for wait() is 2147483647ms (2**31 - 1). (found: ${ms}ms)\");\n  }\n  return await new Promise((resolve) => setTimeout(resolve, ms));\n}\nasync function waitUntil(date) {\n  return await wait(date.getTime() - Date.now());\n}\nfunction runAsynchronouslyWithAlert(...args) {\n  return runAsynchronously(\n    args[0],\n    {\n      ...args[1],\n      onError: (error) => {\n        if (_index_js__WEBPACK_IMPORTED_MODULE_0__.KnownError.isKnownError(error) && typeof process !== \"undefined\" && \"development\"?.includes(\"production\")) {\n          alert(error.message);\n        } else {\n          alert(`An unhandled error occurred. Please ${ true ? `check the browser console for the full error.` : 0}\n\n${error}`);\n        }\n        args[1]?.onError?.(error);\n      }\n    },\n    ...args.slice(2)\n  );\n}\nfunction runAsynchronously(promiseOrFunc, options = {}) {\n  if (typeof promiseOrFunc === \"function\") {\n    promiseOrFunc = promiseOrFunc();\n  }\n  if (promiseOrFunc) {\n    concatStacktracesIfRejected(promiseOrFunc);\n    promiseOrFunc.catch((error) => {\n      options.onError?.(error);\n      const newError = new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\n        \"Uncaught error in asynchronous function: \" + (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.errorToNiceString)(error),\n        { cause: error }\n      );\n      if (!options.noErrorLogging) {\n        (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.captureError)(\"runAsynchronously\", newError);\n      }\n    });\n  }\n}\nvar TimeoutError = class extends Error {\n  constructor(ms) {\n    super(`Timeout after ${ms}ms`);\n    this.ms = ms;\n    this.name = \"TimeoutError\";\n  }\n};\nasync function timeout(promiseOrFunc, ms) {\n  const promise = typeof promiseOrFunc === \"function\" ? promiseOrFunc() : promiseOrFunc;\n  return await Promise.race([\n    promise.then((value) => _results_js__WEBPACK_IMPORTED_MODULE_3__.Result.ok(value)),\n    wait(ms).then(() => _results_js__WEBPACK_IMPORTED_MODULE_3__.Result.error(new TimeoutError(ms)))\n  ]);\n}\nasync function timeoutThrow(promise, ms) {\n  return _results_js__WEBPACK_IMPORTED_MODULE_3__.Result.orThrow(await timeout(promise, ms));\n}\nfunction rateLimited(func, options) {\n  let waitUntil2 = performance.now();\n  let queue = [];\n  let addedToQueueCallbacks = /* @__PURE__ */ new Map();\n  const next = async () => {\n    while (true) {\n      if (waitUntil2 > performance.now()) {\n        await wait(Math.max(1, waitUntil2 - performance.now() + 1));\n      } else if (queue.length === 0) {\n        const uuid = (0,_uuids_js__WEBPACK_IMPORTED_MODULE_4__.generateUuid)();\n        await new Promise((resolve) => {\n          addedToQueueCallbacks.set(uuid, resolve);\n        });\n        addedToQueueCallbacks.delete(uuid);\n      } else {\n        break;\n      }\n    }\n    const nextFuncs = options.batchCalls ? queue.splice(0, queue.length) : [queue.shift()];\n    const start = performance.now();\n    const value = await _results_js__WEBPACK_IMPORTED_MODULE_3__.Result.fromPromise(func());\n    const end = performance.now();\n    waitUntil2 = Math.max(\n      waitUntil2,\n      start + (options.throttleMs ?? 0),\n      end + (options.gapMs ?? 0)\n    );\n    for (const nextFunc of nextFuncs) {\n      if (value.status === \"ok\") {\n        nextFunc[0](value.data);\n      } else {\n        nextFunc[1](value.error);\n      }\n    }\n  };\n  runAsynchronously(async () => {\n    while (true) {\n      await next();\n    }\n  });\n  return () => {\n    return new Promise((resolve, reject) => {\n      waitUntil2 = Math.max(\n        waitUntil2,\n        performance.now() + (options.debounceMs ?? 0)\n      );\n      queue.push([resolve, reject]);\n      addedToQueueCallbacks.forEach((cb) => cb());\n    });\n  };\n}\nfunction throttled(func, delayMs) {\n  let timeout2 = null;\n  let nextAvailable = null;\n  return async (...args) => {\n    while (nextAvailable !== null) {\n      await nextAvailable;\n    }\n    nextAvailable = new Promise((resolve) => {\n      timeout2 = setTimeout(() => {\n        nextAvailable = null;\n        resolve(func(...args));\n      }, delayMs);\n    });\n    return await nextAvailable;\n  };\n}\n\n//# sourceMappingURL=promises.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvcHJvbWlzZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDeUM7QUFDNkQ7QUFDMUQ7QUFDTjtBQUNJO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsdUJBQXVCLElBQUk7QUFDN0QsaUNBQWlDLHdCQUF3QjtBQUN6RCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFEQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFEQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSw2REFBaUI7QUFDdkIsTUFBTTtBQUNOO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLGNBQWMsMkRBQW1CLG1GQUFtRixHQUFHO0FBQ3ZIO0FBQ0E7QUFDQSxjQUFjLDJEQUFtQix3RUFBd0UsR0FBRztBQUM1RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlEQUFVLCtCQUErQixPQUFPLG9CQUFvQixhQUFvQjtBQUNwRztBQUNBLFVBQVU7QUFDVix1REFBdUQsS0FBc0MscURBQXFELENBQStCOztBQUVqTCxFQUFFLE1BQU07QUFDUjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDJEQUFtQjtBQUM5QyxzREFBc0QsNkRBQWlCO0FBQ3ZFLFVBQVU7QUFDVjtBQUNBO0FBQ0EsUUFBUSx3REFBWTtBQUNwQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixHQUFHO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLCtDQUFNO0FBQ2xDLHdCQUF3QiwrQ0FBTTtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxTQUFTLCtDQUFNO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSLHFCQUFxQix1REFBWTtBQUNqQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsK0NBQU07QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBaUJFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxlc21cXHV0aWxzXFxwcm9taXNlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvcHJvbWlzZXMudHN4XG5pbXBvcnQgeyBLbm93bkVycm9yIH0gZnJvbSBcIi4uL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBTdGFja0Fzc2VydGlvbkVycm9yLCBjYXB0dXJlRXJyb3IsIGNvbmNhdFN0YWNrdHJhY2VzLCBlcnJvclRvTmljZVN0cmluZyB9IGZyb20gXCIuL2Vycm9ycy5qc1wiO1xuaW1wb3J0IHsgRGVwZW5kZW5jaWVzTWFwIH0gZnJvbSBcIi4vbWFwcy5qc1wiO1xuaW1wb3J0IHsgUmVzdWx0IH0gZnJvbSBcIi4vcmVzdWx0cy5qc1wiO1xuaW1wb3J0IHsgZ2VuZXJhdGVVdWlkIH0gZnJvbSBcIi4vdXVpZHMuanNcIjtcbmZ1bmN0aW9uIGNyZWF0ZVByb21pc2UoY2FsbGJhY2spIHtcbiAgbGV0IHN0YXR1cyA9IFwicGVuZGluZ1wiO1xuICBsZXQgdmFsdWVPclJlYXNvbiA9IHZvaWQgMDtcbiAgbGV0IHJlc29sdmUgPSBudWxsO1xuICBsZXQgcmVqZWN0ID0gbnVsbDtcbiAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXMsIHJlaikgPT4ge1xuICAgIHJlc29sdmUgPSAodmFsdWUpID0+IHtcbiAgICAgIGlmIChzdGF0dXMgIT09IFwicGVuZGluZ1wiKSByZXR1cm47XG4gICAgICBzdGF0dXMgPSBcImZ1bGZpbGxlZFwiO1xuICAgICAgdmFsdWVPclJlYXNvbiA9IHZhbHVlO1xuICAgICAgcmVzKHZhbHVlKTtcbiAgICB9O1xuICAgIHJlamVjdCA9IChyZWFzb24pID0+IHtcbiAgICAgIGlmIChzdGF0dXMgIT09IFwicGVuZGluZ1wiKSByZXR1cm47XG4gICAgICBzdGF0dXMgPSBcInJlamVjdGVkXCI7XG4gICAgICB2YWx1ZU9yUmVhc29uID0gcmVhc29uO1xuICAgICAgcmVqKHJlYXNvbik7XG4gICAgfTtcbiAgfSk7XG4gIGNhbGxiYWNrKHJlc29sdmUsIHJlamVjdCk7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKHByb21pc2UsIHtcbiAgICBzdGF0dXMsXG4gICAgLi4uc3RhdHVzID09PSBcImZ1bGZpbGxlZFwiID8geyB2YWx1ZTogdmFsdWVPclJlYXNvbiB9IDoge30sXG4gICAgLi4uc3RhdHVzID09PSBcInJlamVjdGVkXCIgPyB7IHJlYXNvbjogdmFsdWVPclJlYXNvbiB9IDoge31cbiAgfSk7XG59XG52YXIgcmVzb2x2ZWRDYWNoZSA9IG51bGw7XG5mdW5jdGlvbiByZXNvbHZlZCh2YWx1ZSkge1xuICByZXNvbHZlZENhY2hlID8/PSBuZXcgRGVwZW5kZW5jaWVzTWFwKCk7XG4gIGlmIChyZXNvbHZlZENhY2hlLmhhcyhbdmFsdWVdKSkge1xuICAgIHJldHVybiByZXNvbHZlZENhY2hlLmdldChbdmFsdWVdKTtcbiAgfVxuICBjb25zdCByZXMgPSBPYmplY3QuYXNzaWduKFByb21pc2UucmVzb2x2ZSh2YWx1ZSksIHtcbiAgICBzdGF0dXM6IFwiZnVsZmlsbGVkXCIsXG4gICAgdmFsdWVcbiAgfSk7XG4gIHJlc29sdmVkQ2FjaGUuc2V0KFt2YWx1ZV0sIHJlcyk7XG4gIHJldHVybiByZXM7XG59XG52YXIgcmVqZWN0ZWRDYWNoZSA9IG51bGw7XG5mdW5jdGlvbiByZWplY3RlZChyZWFzb24pIHtcbiAgcmVqZWN0ZWRDYWNoZSA/Pz0gbmV3IERlcGVuZGVuY2llc01hcCgpO1xuICBpZiAocmVqZWN0ZWRDYWNoZS5oYXMoW3JlYXNvbl0pKSB7XG4gICAgcmV0dXJuIHJlamVjdGVkQ2FjaGUuZ2V0KFtyZWFzb25dKTtcbiAgfVxuICBjb25zdCBwcm9taXNlID0gUHJvbWlzZS5yZWplY3QocmVhc29uKTtcbiAgaWdub3JlVW5oYW5kbGVkUmVqZWN0aW9uKHByb21pc2UpO1xuICBjb25zdCByZXMgPSBPYmplY3QuYXNzaWduKHByb21pc2UsIHtcbiAgICBzdGF0dXM6IFwicmVqZWN0ZWRcIixcbiAgICByZWFzb25cbiAgfSk7XG4gIHJlamVjdGVkQ2FjaGUuc2V0KFtyZWFzb25dLCByZXMpO1xuICByZXR1cm4gcmVzO1xufVxudmFyIG5ldmVyUmVzb2x2ZVByb21pc2UgPSBwZW5kaW5nKG5ldyBQcm9taXNlKCgpID0+IHtcbn0pKTtcbmZ1bmN0aW9uIG5ldmVyUmVzb2x2ZSgpIHtcbiAgcmV0dXJuIG5ldmVyUmVzb2x2ZVByb21pc2U7XG59XG5mdW5jdGlvbiBwZW5kaW5nKHByb21pc2UsIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCByZXMgPSBwcm9taXNlLnRoZW4oXG4gICAgKHZhbHVlKSA9PiB7XG4gICAgICByZXMuc3RhdHVzID0gXCJmdWxmaWxsZWRcIjtcbiAgICAgIHJlcy52YWx1ZSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgKGFjdHVhbFJlYXNvbikgPT4ge1xuICAgICAgcmVzLnN0YXR1cyA9IFwicmVqZWN0ZWRcIjtcbiAgICAgIHJlcy5yZWFzb24gPSBhY3R1YWxSZWFzb247XG4gICAgICB0aHJvdyBhY3R1YWxSZWFzb247XG4gICAgfVxuICApO1xuICByZXMuc3RhdHVzID0gXCJwZW5kaW5nXCI7XG4gIHJldHVybiByZXM7XG59XG5mdW5jdGlvbiBpZ25vcmVVbmhhbmRsZWRSZWplY3Rpb24ocHJvbWlzZSkge1xuICBwcm9taXNlLmNhdGNoKCgpID0+IHtcbiAgfSk7XG59XG5mdW5jdGlvbiBjb25jYXRTdGFja3RyYWNlc0lmUmVqZWN0ZWQocHJvbWlzZSkge1xuICBjb25zdCBjdXJyZW50RXJyb3IgPSBuZXcgRXJyb3IoKTtcbiAgcHJvbWlzZS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgY29uY2F0U3RhY2t0cmFjZXMoZXJyb3IsIGN1cnJlbnRFcnJvcik7XG4gICAgfSBlbHNlIHtcbiAgICB9XG4gIH0pO1xufVxuYXN5bmMgZnVuY3Rpb24gd2FpdChtcykge1xuICBpZiAoIU51bWJlci5pc0Zpbml0ZShtcykgfHwgbXMgPCAwKSB7XG4gICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoYHdhaXQoKSByZXF1aXJlcyBhIG5vbi1uZWdhdGl2ZSBpbnRlZ2VyIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gd2FpdC4gKGZvdW5kOiAke21zfW1zKWApO1xuICB9XG4gIGlmIChtcyA+PSAyICoqIDMxKSB7XG4gICAgdGhyb3cgbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXCJUaGUgbWF4aW11bSB0aW1lb3V0IGZvciB3YWl0KCkgaXMgMjE0NzQ4MzY0N21zICgyKiozMSAtIDEpLiAoZm91bmQ6ICR7bXN9bXMpXCIpO1xuICB9XG4gIHJldHVybiBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpO1xufVxuYXN5bmMgZnVuY3Rpb24gd2FpdFVudGlsKGRhdGUpIHtcbiAgcmV0dXJuIGF3YWl0IHdhaXQoZGF0ZS5nZXRUaW1lKCkgLSBEYXRlLm5vdygpKTtcbn1cbmZ1bmN0aW9uIHJ1bkFzeW5jaHJvbm91c2x5V2l0aEFsZXJ0KC4uLmFyZ3MpIHtcbiAgcmV0dXJuIHJ1bkFzeW5jaHJvbm91c2x5KFxuICAgIGFyZ3NbMF0sXG4gICAge1xuICAgICAgLi4uYXJnc1sxXSxcbiAgICAgIG9uRXJyb3I6IChlcnJvcikgPT4ge1xuICAgICAgICBpZiAoS25vd25FcnJvci5pc0tub3duRXJyb3IoZXJyb3IpICYmIHR5cGVvZiBwcm9jZXNzICE9PSBcInVuZGVmaW5lZFwiICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WPy5pbmNsdWRlcyhcInByb2R1Y3Rpb25cIikpIHtcbiAgICAgICAgICBhbGVydChlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBhbGVydChgQW4gdW5oYW5kbGVkIGVycm9yIG9jY3VycmVkLiBQbGVhc2UgJHtwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiID8gYGNoZWNrIHRoZSBicm93c2VyIGNvbnNvbGUgZm9yIHRoZSBmdWxsIGVycm9yLmAgOiBcInJlcG9ydCB0aGlzIHRvIHRoZSBkZXZlbG9wZXIuXCJ9XG5cbiR7ZXJyb3J9YCk7XG4gICAgICAgIH1cbiAgICAgICAgYXJnc1sxXT8ub25FcnJvcj8uKGVycm9yKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIC4uLmFyZ3Muc2xpY2UoMilcbiAgKTtcbn1cbmZ1bmN0aW9uIHJ1bkFzeW5jaHJvbm91c2x5KHByb21pc2VPckZ1bmMsIG9wdGlvbnMgPSB7fSkge1xuICBpZiAodHlwZW9mIHByb21pc2VPckZ1bmMgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHByb21pc2VPckZ1bmMgPSBwcm9taXNlT3JGdW5jKCk7XG4gIH1cbiAgaWYgKHByb21pc2VPckZ1bmMpIHtcbiAgICBjb25jYXRTdGFja3RyYWNlc0lmUmVqZWN0ZWQocHJvbWlzZU9yRnVuYyk7XG4gICAgcHJvbWlzZU9yRnVuYy5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIG9wdGlvbnMub25FcnJvcj8uKGVycm9yKTtcbiAgICAgIGNvbnN0IG5ld0Vycm9yID0gbmV3IFN0YWNrQXNzZXJ0aW9uRXJyb3IoXG4gICAgICAgIFwiVW5jYXVnaHQgZXJyb3IgaW4gYXN5bmNocm9ub3VzIGZ1bmN0aW9uOiBcIiArIGVycm9yVG9OaWNlU3RyaW5nKGVycm9yKSxcbiAgICAgICAgeyBjYXVzZTogZXJyb3IgfVxuICAgICAgKTtcbiAgICAgIGlmICghb3B0aW9ucy5ub0Vycm9yTG9nZ2luZykge1xuICAgICAgICBjYXB0dXJlRXJyb3IoXCJydW5Bc3luY2hyb25vdXNseVwiLCBuZXdFcnJvcik7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbnZhciBUaW1lb3V0RXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobXMpIHtcbiAgICBzdXBlcihgVGltZW91dCBhZnRlciAke21zfW1zYCk7XG4gICAgdGhpcy5tcyA9IG1zO1xuICAgIHRoaXMubmFtZSA9IFwiVGltZW91dEVycm9yXCI7XG4gIH1cbn07XG5hc3luYyBmdW5jdGlvbiB0aW1lb3V0KHByb21pc2VPckZ1bmMsIG1zKSB7XG4gIGNvbnN0IHByb21pc2UgPSB0eXBlb2YgcHJvbWlzZU9yRnVuYyA9PT0gXCJmdW5jdGlvblwiID8gcHJvbWlzZU9yRnVuYygpIDogcHJvbWlzZU9yRnVuYztcbiAgcmV0dXJuIGF3YWl0IFByb21pc2UucmFjZShbXG4gICAgcHJvbWlzZS50aGVuKCh2YWx1ZSkgPT4gUmVzdWx0Lm9rKHZhbHVlKSksXG4gICAgd2FpdChtcykudGhlbigoKSA9PiBSZXN1bHQuZXJyb3IobmV3IFRpbWVvdXRFcnJvcihtcykpKVxuICBdKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIHRpbWVvdXRUaHJvdyhwcm9taXNlLCBtcykge1xuICByZXR1cm4gUmVzdWx0Lm9yVGhyb3coYXdhaXQgdGltZW91dChwcm9taXNlLCBtcykpO1xufVxuZnVuY3Rpb24gcmF0ZUxpbWl0ZWQoZnVuYywgb3B0aW9ucykge1xuICBsZXQgd2FpdFVudGlsMiA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICBsZXQgcXVldWUgPSBbXTtcbiAgbGV0IGFkZGVkVG9RdWV1ZUNhbGxiYWNrcyA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgTWFwKCk7XG4gIGNvbnN0IG5leHQgPSBhc3luYyAoKSA9PiB7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGlmICh3YWl0VW50aWwyID4gcGVyZm9ybWFuY2Uubm93KCkpIHtcbiAgICAgICAgYXdhaXQgd2FpdChNYXRoLm1heCgxLCB3YWl0VW50aWwyIC0gcGVyZm9ybWFuY2Uubm93KCkgKyAxKSk7XG4gICAgICB9IGVsc2UgaWYgKHF1ZXVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBjb25zdCB1dWlkID0gZ2VuZXJhdGVVdWlkKCk7XG4gICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgYWRkZWRUb1F1ZXVlQ2FsbGJhY2tzLnNldCh1dWlkLCByZXNvbHZlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGFkZGVkVG9RdWV1ZUNhbGxiYWNrcy5kZWxldGUodXVpZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgbmV4dEZ1bmNzID0gb3B0aW9ucy5iYXRjaENhbGxzID8gcXVldWUuc3BsaWNlKDAsIHF1ZXVlLmxlbmd0aCkgOiBbcXVldWUuc2hpZnQoKV07XG4gICAgY29uc3Qgc3RhcnQgPSBwZXJmb3JtYW5jZS5ub3coKTtcbiAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IFJlc3VsdC5mcm9tUHJvbWlzZShmdW5jKCkpO1xuICAgIGNvbnN0IGVuZCA9IHBlcmZvcm1hbmNlLm5vdygpO1xuICAgIHdhaXRVbnRpbDIgPSBNYXRoLm1heChcbiAgICAgIHdhaXRVbnRpbDIsXG4gICAgICBzdGFydCArIChvcHRpb25zLnRocm90dGxlTXMgPz8gMCksXG4gICAgICBlbmQgKyAob3B0aW9ucy5nYXBNcyA/PyAwKVxuICAgICk7XG4gICAgZm9yIChjb25zdCBuZXh0RnVuYyBvZiBuZXh0RnVuY3MpIHtcbiAgICAgIGlmICh2YWx1ZS5zdGF0dXMgPT09IFwib2tcIikge1xuICAgICAgICBuZXh0RnVuY1swXSh2YWx1ZS5kYXRhKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5leHRGdW5jWzFdKHZhbHVlLmVycm9yKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIHJ1bkFzeW5jaHJvbm91c2x5KGFzeW5jICgpID0+IHtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgYXdhaXQgbmV4dCgpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHdhaXRVbnRpbDIgPSBNYXRoLm1heChcbiAgICAgICAgd2FpdFVudGlsMixcbiAgICAgICAgcGVyZm9ybWFuY2Uubm93KCkgKyAob3B0aW9ucy5kZWJvdW5jZU1zID8/IDApXG4gICAgICApO1xuICAgICAgcXVldWUucHVzaChbcmVzb2x2ZSwgcmVqZWN0XSk7XG4gICAgICBhZGRlZFRvUXVldWVDYWxsYmFja3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpO1xuICAgIH0pO1xuICB9O1xufVxuZnVuY3Rpb24gdGhyb3R0bGVkKGZ1bmMsIGRlbGF5TXMpIHtcbiAgbGV0IHRpbWVvdXQyID0gbnVsbDtcbiAgbGV0IG5leHRBdmFpbGFibGUgPSBudWxsO1xuICByZXR1cm4gYXN5bmMgKC4uLmFyZ3MpID0+IHtcbiAgICB3aGlsZSAobmV4dEF2YWlsYWJsZSAhPT0gbnVsbCkge1xuICAgICAgYXdhaXQgbmV4dEF2YWlsYWJsZTtcbiAgICB9XG4gICAgbmV4dEF2YWlsYWJsZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICB0aW1lb3V0MiA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBuZXh0QXZhaWxhYmxlID0gbnVsbDtcbiAgICAgICAgcmVzb2x2ZShmdW5jKC4uLmFyZ3MpKTtcbiAgICAgIH0sIGRlbGF5TXMpO1xuICAgIH0pO1xuICAgIHJldHVybiBhd2FpdCBuZXh0QXZhaWxhYmxlO1xuICB9O1xufVxuZXhwb3J0IHtcbiAgY29uY2F0U3RhY2t0cmFjZXNJZlJlamVjdGVkLFxuICBjcmVhdGVQcm9taXNlLFxuICBpZ25vcmVVbmhhbmRsZWRSZWplY3Rpb24sXG4gIG5ldmVyUmVzb2x2ZSxcbiAgcGVuZGluZyxcbiAgcmF0ZUxpbWl0ZWQsXG4gIHJlamVjdGVkLFxuICByZXNvbHZlZCxcbiAgcnVuQXN5bmNocm9ub3VzbHksXG4gIHJ1bkFzeW5jaHJvbm91c2x5V2l0aEFsZXJ0LFxuICB0aHJvdHRsZWQsXG4gIHRpbWVvdXQsXG4gIHRpbWVvdXRUaHJvdyxcbiAgd2FpdCxcbiAgd2FpdFVudGlsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvbWlzZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/react.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/react.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoSuspenseBoundaryError: () => (/* binding */ NoSuspenseBoundaryError),\n/* harmony export */   componentWrapper: () => (/* binding */ componentWrapper),\n/* harmony export */   forwardRefIfNeeded: () => (/* binding */ forwardRefIfNeeded),\n/* harmony export */   getNodeText: () => (/* binding */ getNodeText),\n/* harmony export */   mapRef: () => (/* binding */ mapRef),\n/* harmony export */   mapRefState: () => (/* binding */ mapRefState),\n/* harmony export */   suspend: () => (/* binding */ suspend),\n/* harmony export */   suspendIfSsr: () => (/* binding */ suspendIfSsr),\n/* harmony export */   useRefState: () => (/* binding */ useRefState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./env.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/env.js\");\n/* harmony import */ var _promises_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./promises.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\");\n/* harmony import */ var _strings_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n// src/utils/react.tsx\n\n\n\n\nfunction componentWrapper(displayName, render) {\n  const Component = forwardRefIfNeeded(render);\n  Component.displayName = displayName;\n  return Component;\n}\nfunction forwardRefIfNeeded(render) {\n  const version = (react__WEBPACK_IMPORTED_MODULE_0___default().version);\n  const major = parseInt(version.split(\".\")[0]);\n  if (major < 19) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(render);\n  } else {\n    return (props) => render(props, props.ref);\n  }\n}\nfunction getNodeText(node) {\n  if ([\"number\", \"string\"].includes(typeof node)) {\n    return `${node}`;\n  }\n  if (!node) {\n    return \"\";\n  }\n  if (Array.isArray(node)) {\n    return node.map(getNodeText).join(\"\");\n  }\n  if (typeof node === \"object\" && \"props\" in node) {\n    return getNodeText(node.props.children);\n  }\n  throw new Error(`Unknown node type: ${typeof node}`);\n}\nfunction suspend() {\n  react__WEBPACK_IMPORTED_MODULE_0___default().use((0,_promises_js__WEBPACK_IMPORTED_MODULE_2__.neverResolve)());\n  throw new Error(\"Somehow a Promise that never resolves was resolved?\");\n}\nfunction mapRef(ref, mapper) {\n  let last = null;\n  return {\n    get current() {\n      const input = ref.current;\n      if (last === null || input !== last[0]) {\n        last = [input, mapper(input)];\n      }\n      return last[1];\n    }\n  };\n}\nfunction useRefState(initialValue) {\n  const [, setState] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(initialValue);\n  const ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(initialValue);\n  const setValue = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback((updater) => {\n    const value = typeof updater === \"function\" ? updater(ref.current) : updater;\n    console.log(\"setValue\", ref.current);\n    ref.current = value;\n    console.log(\"setValue\", ref.current);\n    setState(value);\n  }, []);\n  const res = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => ({\n    get current() {\n      return ref.current;\n    },\n    set: setValue\n  }), [setValue]);\n  return res;\n}\nfunction mapRefState(refState, mapper, reverseMapper) {\n  let last = null;\n  return {\n    get current() {\n      const input = refState.current;\n      if (last === null || input !== last[0]) {\n        last = [input, mapper(input)];\n      }\n      return last[1];\n    },\n    set(updater) {\n      const value = typeof updater === \"function\" ? updater(this.current) : updater;\n      refState.set(reverseMapper(refState.current, value));\n    }\n  };\n}\nvar NoSuspenseBoundaryError = class extends Error {\n  constructor(options) {\n    super((0,_strings_js__WEBPACK_IMPORTED_MODULE_3__.deindent)`\n      ${options.caller ?? \"This code path\"} attempted to display a loading indicator, but didn't find a Suspense boundary above it. Please read the error message below carefully.\n      \n      The fix depends on which of the 3 scenarios caused it:\n      \n      1. You are missing a loading.tsx file in your app directory. Fix it by adding a loading.tsx file in your app directory.\n\n      2. The component is rendered in the root (outermost) layout.tsx or template.tsx file. Next.js does not wrap those files in a Suspense boundary, even if there is a loading.tsx file in the same folder. To fix it, wrap your layout inside a route group like this:\n\n        - app\n        - - layout.tsx  // contains <html> and <body>, alongside providers and other components that don't need ${options.caller ?? \"this code path\"}\n        - - loading.tsx  // required for suspense\n        - - (main)\n        - - - layout.tsx  // contains the main layout of your app, like a sidebar or a header, and can use ${options.caller ?? \"this code path\"}\n        - - - route.tsx  // your actual main page\n        - - - the rest of your app\n\n        For more information on this approach, see Next's documentation on route groups: https://nextjs.org/docs/app/building-your-application/routing/route-groups\n      \n      3. You caught this error with try-catch or a custom error boundary. Fix this by rethrowing the error or not catching it in the first place.\n\n      See: https://nextjs.org/docs/messages/missing-suspense-with-csr-bailout\n\n      More information on SSR and Suspense boundaries: https://react.dev/reference/react/Suspense#providing-a-fallback-for-server-errors-and-client-only-content\n    `);\n    this.name = \"NoSuspenseBoundaryError\";\n    this.reason = options.caller ?? \"suspendIfSsr()\";\n    this.digest = \"BAILOUT_TO_CLIENT_SIDE_RENDERING\";\n  }\n};\nfunction suspendIfSsr(caller) {\n  if (!(0,_env_js__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n    throw new NoSuspenseBoundaryError({ caller });\n  }\n}\n\n//# sourceMappingURL=react.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvcmVhY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUMwQjtBQUNlO0FBQ0k7QUFDTDtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0RBQWE7QUFDL0I7QUFDQTtBQUNBLFdBQVcsdURBQWdCO0FBQzNCLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxLQUFLO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQ7QUFDQTtBQUNBLEVBQUUsZ0RBQVMsQ0FBQywwREFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIscURBQWM7QUFDckMsY0FBYyxtREFBWTtBQUMxQixtQkFBbUIsd0RBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsY0FBYyxvREFBYTtBQUMzQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUscURBQVE7QUFDbEIsUUFBUSxvQ0FBb0M7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxrSEFBa0g7QUFDbEg7QUFDQTtBQUNBLDZHQUE2RztBQUM3RztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxzREFBYTtBQUNwQix3Q0FBd0MsUUFBUTtBQUNoRDtBQUNBO0FBV0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXGVzbVxcdXRpbHNcXHJlYWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy9yZWFjdC50c3hcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGlzQnJvd3Nlckxpa2UgfSBmcm9tIFwiLi9lbnYuanNcIjtcbmltcG9ydCB7IG5ldmVyUmVzb2x2ZSB9IGZyb20gXCIuL3Byb21pc2VzLmpzXCI7XG5pbXBvcnQgeyBkZWluZGVudCB9IGZyb20gXCIuL3N0cmluZ3MuanNcIjtcbmZ1bmN0aW9uIGNvbXBvbmVudFdyYXBwZXIoZGlzcGxheU5hbWUsIHJlbmRlcikge1xuICBjb25zdCBDb21wb25lbnQgPSBmb3J3YXJkUmVmSWZOZWVkZWQocmVuZGVyKTtcbiAgQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gIHJldHVybiBDb21wb25lbnQ7XG59XG5mdW5jdGlvbiBmb3J3YXJkUmVmSWZOZWVkZWQocmVuZGVyKSB7XG4gIGNvbnN0IHZlcnNpb24gPSBSZWFjdC52ZXJzaW9uO1xuICBjb25zdCBtYWpvciA9IHBhcnNlSW50KHZlcnNpb24uc3BsaXQoXCIuXCIpWzBdKTtcbiAgaWYgKG1ham9yIDwgMTkpIHtcbiAgICByZXR1cm4gUmVhY3QuZm9yd2FyZFJlZihyZW5kZXIpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAocHJvcHMpID0+IHJlbmRlcihwcm9wcywgcHJvcHMucmVmKTtcbiAgfVxufVxuZnVuY3Rpb24gZ2V0Tm9kZVRleHQobm9kZSkge1xuICBpZiAoW1wibnVtYmVyXCIsIFwic3RyaW5nXCJdLmluY2x1ZGVzKHR5cGVvZiBub2RlKSkge1xuICAgIHJldHVybiBgJHtub2RlfWA7XG4gIH1cbiAgaWYgKCFub2RlKSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkobm9kZSkpIHtcbiAgICByZXR1cm4gbm9kZS5tYXAoZ2V0Tm9kZVRleHQpLmpvaW4oXCJcIik7XG4gIH1cbiAgaWYgKHR5cGVvZiBub2RlID09PSBcIm9iamVjdFwiICYmIFwicHJvcHNcIiBpbiBub2RlKSB7XG4gICAgcmV0dXJuIGdldE5vZGVUZXh0KG5vZGUucHJvcHMuY2hpbGRyZW4pO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBub2RlIHR5cGU6ICR7dHlwZW9mIG5vZGV9YCk7XG59XG5mdW5jdGlvbiBzdXNwZW5kKCkge1xuICBSZWFjdC51c2UobmV2ZXJSZXNvbHZlKCkpO1xuICB0aHJvdyBuZXcgRXJyb3IoXCJTb21laG93IGEgUHJvbWlzZSB0aGF0IG5ldmVyIHJlc29sdmVzIHdhcyByZXNvbHZlZD9cIik7XG59XG5mdW5jdGlvbiBtYXBSZWYocmVmLCBtYXBwZXIpIHtcbiAgbGV0IGxhc3QgPSBudWxsO1xuICByZXR1cm4ge1xuICAgIGdldCBjdXJyZW50KCkge1xuICAgICAgY29uc3QgaW5wdXQgPSByZWYuY3VycmVudDtcbiAgICAgIGlmIChsYXN0ID09PSBudWxsIHx8IGlucHV0ICE9PSBsYXN0WzBdKSB7XG4gICAgICAgIGxhc3QgPSBbaW5wdXQsIG1hcHBlcihpbnB1dCldO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGxhc3RbMV07XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gdXNlUmVmU3RhdGUoaW5pdGlhbFZhbHVlKSB7XG4gIGNvbnN0IFssIHNldFN0YXRlXSA9IFJlYWN0LnVzZVN0YXRlKGluaXRpYWxWYWx1ZSk7XG4gIGNvbnN0IHJlZiA9IFJlYWN0LnVzZVJlZihpbml0aWFsVmFsdWUpO1xuICBjb25zdCBzZXRWYWx1ZSA9IFJlYWN0LnVzZUNhbGxiYWNrKCh1cGRhdGVyKSA9PiB7XG4gICAgY29uc3QgdmFsdWUgPSB0eXBlb2YgdXBkYXRlciA9PT0gXCJmdW5jdGlvblwiID8gdXBkYXRlcihyZWYuY3VycmVudCkgOiB1cGRhdGVyO1xuICAgIGNvbnNvbGUubG9nKFwic2V0VmFsdWVcIiwgcmVmLmN1cnJlbnQpO1xuICAgIHJlZi5jdXJyZW50ID0gdmFsdWU7XG4gICAgY29uc29sZS5sb2coXCJzZXRWYWx1ZVwiLCByZWYuY3VycmVudCk7XG4gICAgc2V0U3RhdGUodmFsdWUpO1xuICB9LCBbXSk7XG4gIGNvbnN0IHJlcyA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gKHtcbiAgICBnZXQgY3VycmVudCgpIHtcbiAgICAgIHJldHVybiByZWYuY3VycmVudDtcbiAgICB9LFxuICAgIHNldDogc2V0VmFsdWVcbiAgfSksIFtzZXRWYWx1ZV0pO1xuICByZXR1cm4gcmVzO1xufVxuZnVuY3Rpb24gbWFwUmVmU3RhdGUocmVmU3RhdGUsIG1hcHBlciwgcmV2ZXJzZU1hcHBlcikge1xuICBsZXQgbGFzdCA9IG51bGw7XG4gIHJldHVybiB7XG4gICAgZ2V0IGN1cnJlbnQoKSB7XG4gICAgICBjb25zdCBpbnB1dCA9IHJlZlN0YXRlLmN1cnJlbnQ7XG4gICAgICBpZiAobGFzdCA9PT0gbnVsbCB8fCBpbnB1dCAhPT0gbGFzdFswXSkge1xuICAgICAgICBsYXN0ID0gW2lucHV0LCBtYXBwZXIoaW5wdXQpXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBsYXN0WzFdO1xuICAgIH0sXG4gICAgc2V0KHVwZGF0ZXIpIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gdHlwZW9mIHVwZGF0ZXIgPT09IFwiZnVuY3Rpb25cIiA/IHVwZGF0ZXIodGhpcy5jdXJyZW50KSA6IHVwZGF0ZXI7XG4gICAgICByZWZTdGF0ZS5zZXQocmV2ZXJzZU1hcHBlcihyZWZTdGF0ZS5jdXJyZW50LCB2YWx1ZSkpO1xuICAgIH1cbiAgfTtcbn1cbnZhciBOb1N1c3BlbnNlQm91bmRhcnlFcnJvciA9IGNsYXNzIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgc3VwZXIoZGVpbmRlbnRgXG4gICAgICAke29wdGlvbnMuY2FsbGVyID8/IFwiVGhpcyBjb2RlIHBhdGhcIn0gYXR0ZW1wdGVkIHRvIGRpc3BsYXkgYSBsb2FkaW5nIGluZGljYXRvciwgYnV0IGRpZG4ndCBmaW5kIGEgU3VzcGVuc2UgYm91bmRhcnkgYWJvdmUgaXQuIFBsZWFzZSByZWFkIHRoZSBlcnJvciBtZXNzYWdlIGJlbG93IGNhcmVmdWxseS5cbiAgICAgIFxuICAgICAgVGhlIGZpeCBkZXBlbmRzIG9uIHdoaWNoIG9mIHRoZSAzIHNjZW5hcmlvcyBjYXVzZWQgaXQ6XG4gICAgICBcbiAgICAgIDEuIFlvdSBhcmUgbWlzc2luZyBhIGxvYWRpbmcudHN4IGZpbGUgaW4geW91ciBhcHAgZGlyZWN0b3J5LiBGaXggaXQgYnkgYWRkaW5nIGEgbG9hZGluZy50c3ggZmlsZSBpbiB5b3VyIGFwcCBkaXJlY3RvcnkuXG5cbiAgICAgIDIuIFRoZSBjb21wb25lbnQgaXMgcmVuZGVyZWQgaW4gdGhlIHJvb3QgKG91dGVybW9zdCkgbGF5b3V0LnRzeCBvciB0ZW1wbGF0ZS50c3ggZmlsZS4gTmV4dC5qcyBkb2VzIG5vdCB3cmFwIHRob3NlIGZpbGVzIGluIGEgU3VzcGVuc2UgYm91bmRhcnksIGV2ZW4gaWYgdGhlcmUgaXMgYSBsb2FkaW5nLnRzeCBmaWxlIGluIHRoZSBzYW1lIGZvbGRlci4gVG8gZml4IGl0LCB3cmFwIHlvdXIgbGF5b3V0IGluc2lkZSBhIHJvdXRlIGdyb3VwIGxpa2UgdGhpczpcblxuICAgICAgICAtIGFwcFxuICAgICAgICAtIC0gbGF5b3V0LnRzeCAgLy8gY29udGFpbnMgPGh0bWw+IGFuZCA8Ym9keT4sIGFsb25nc2lkZSBwcm92aWRlcnMgYW5kIG90aGVyIGNvbXBvbmVudHMgdGhhdCBkb24ndCBuZWVkICR7b3B0aW9ucy5jYWxsZXIgPz8gXCJ0aGlzIGNvZGUgcGF0aFwifVxuICAgICAgICAtIC0gbG9hZGluZy50c3ggIC8vIHJlcXVpcmVkIGZvciBzdXNwZW5zZVxuICAgICAgICAtIC0gKG1haW4pXG4gICAgICAgIC0gLSAtIGxheW91dC50c3ggIC8vIGNvbnRhaW5zIHRoZSBtYWluIGxheW91dCBvZiB5b3VyIGFwcCwgbGlrZSBhIHNpZGViYXIgb3IgYSBoZWFkZXIsIGFuZCBjYW4gdXNlICR7b3B0aW9ucy5jYWxsZXIgPz8gXCJ0aGlzIGNvZGUgcGF0aFwifVxuICAgICAgICAtIC0gLSByb3V0ZS50c3ggIC8vIHlvdXIgYWN0dWFsIG1haW4gcGFnZVxuICAgICAgICAtIC0gLSB0aGUgcmVzdCBvZiB5b3VyIGFwcFxuXG4gICAgICAgIEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIHRoaXMgYXBwcm9hY2gsIHNlZSBOZXh0J3MgZG9jdW1lbnRhdGlvbiBvbiByb3V0ZSBncm91cHM6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3JvdXRpbmcvcm91dGUtZ3JvdXBzXG4gICAgICBcbiAgICAgIDMuIFlvdSBjYXVnaHQgdGhpcyBlcnJvciB3aXRoIHRyeS1jYXRjaCBvciBhIGN1c3RvbSBlcnJvciBib3VuZGFyeS4gRml4IHRoaXMgYnkgcmV0aHJvd2luZyB0aGUgZXJyb3Igb3Igbm90IGNhdGNoaW5nIGl0IGluIHRoZSBmaXJzdCBwbGFjZS5cblxuICAgICAgU2VlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9taXNzaW5nLXN1c3BlbnNlLXdpdGgtY3NyLWJhaWxvdXRcblxuICAgICAgTW9yZSBpbmZvcm1hdGlvbiBvbiBTU1IgYW5kIFN1c3BlbnNlIGJvdW5kYXJpZXM6IGh0dHBzOi8vcmVhY3QuZGV2L3JlZmVyZW5jZS9yZWFjdC9TdXNwZW5zZSNwcm92aWRpbmctYS1mYWxsYmFjay1mb3Itc2VydmVyLWVycm9ycy1hbmQtY2xpZW50LW9ubHktY29udGVudFxuICAgIGApO1xuICAgIHRoaXMubmFtZSA9IFwiTm9TdXNwZW5zZUJvdW5kYXJ5RXJyb3JcIjtcbiAgICB0aGlzLnJlYXNvbiA9IG9wdGlvbnMuY2FsbGVyID8/IFwic3VzcGVuZElmU3NyKClcIjtcbiAgICB0aGlzLmRpZ2VzdCA9IFwiQkFJTE9VVF9UT19DTElFTlRfU0lERV9SRU5ERVJJTkdcIjtcbiAgfVxufTtcbmZ1bmN0aW9uIHN1c3BlbmRJZlNzcihjYWxsZXIpIHtcbiAgaWYgKCFpc0Jyb3dzZXJMaWtlKCkpIHtcbiAgICB0aHJvdyBuZXcgTm9TdXNwZW5zZUJvdW5kYXJ5RXJyb3IoeyBjYWxsZXIgfSk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIE5vU3VzcGVuc2VCb3VuZGFyeUVycm9yLFxuICBjb21wb25lbnRXcmFwcGVyLFxuICBmb3J3YXJkUmVmSWZOZWVkZWQsXG4gIGdldE5vZGVUZXh0LFxuICBtYXBSZWYsXG4gIG1hcFJlZlN0YXRlLFxuICBzdXNwZW5kLFxuICBzdXNwZW5kSWZTc3IsXG4gIHVzZVJlZlN0YXRlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhY3QuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/react.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncResult: () => (/* binding */ AsyncResult),\n/* harmony export */   Result: () => (/* binding */ Result)\n/* harmony export */ });\n/* harmony import */ var _promises_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./promises.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\");\n/* harmony import */ var _strings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n// src/utils/results.tsx\n\n\nvar Result = {\n  fromThrowing,\n  fromThrowingAsync,\n  fromPromise: promiseToResult,\n  ok(data) {\n    return {\n      status: \"ok\",\n      data\n    };\n  },\n  error(error) {\n    return {\n      status: \"error\",\n      error\n    };\n  },\n  map: mapResult,\n  or: (result, fallback) => {\n    return result.status === \"ok\" ? result.data : fallback;\n  },\n  orThrow: (result) => {\n    if (result.status === \"error\") {\n      throw result.error;\n    }\n    return result.data;\n  },\n  orThrowAsync: async (result) => {\n    return Result.orThrow(await result);\n  },\n  retry\n};\nvar AsyncResult = {\n  fromThrowing,\n  fromPromise: promiseToResult,\n  ok: Result.ok,\n  error: Result.error,\n  pending,\n  map: mapResult,\n  or: (result, fallback) => {\n    if (result.status === \"pending\") {\n      return fallback;\n    }\n    return Result.or(result, fallback);\n  },\n  orThrow: (result) => {\n    if (result.status === \"pending\") {\n      throw new Error(\"Result still pending\");\n    }\n    return Result.orThrow(result);\n  },\n  retry\n};\nfunction pending(progress) {\n  return {\n    status: \"pending\",\n    progress\n  };\n}\nasync function promiseToResult(promise) {\n  try {\n    const value = await promise;\n    return Result.ok(value);\n  } catch (error) {\n    return Result.error(error);\n  }\n}\nfunction fromThrowing(fn) {\n  try {\n    return Result.ok(fn());\n  } catch (error) {\n    return Result.error(error);\n  }\n}\nasync function fromThrowingAsync(fn) {\n  try {\n    return Result.ok(await fn());\n  } catch (error) {\n    return Result.error(error);\n  }\n}\nfunction mapResult(result, fn) {\n  if (result.status === \"error\") return {\n    status: \"error\",\n    error: result.error\n  };\n  if (result.status === \"pending\") return {\n    status: \"pending\",\n    ...\"progress\" in result ? { progress: result.progress } : {}\n  };\n  return Result.ok(fn(result.data));\n}\nvar RetryError = class extends AggregateError {\n  constructor(errors) {\n    const strings = errors.map((e) => (0,_strings_js__WEBPACK_IMPORTED_MODULE_1__.nicify)(e));\n    const isAllSame = strings.length > 1 && strings.every((s) => s === strings[0]);\n    super(\n      errors,\n      (0,_strings_js__WEBPACK_IMPORTED_MODULE_1__.deindent)`\n      Error after ${errors.length} attempts.\n      \n      ${isAllSame ? (0,_strings_js__WEBPACK_IMPORTED_MODULE_1__.deindent)`\n        Attempts 1-${errors.length}:\n          ${strings[0]}\n      ` : strings.map((s, i) => (0,_strings_js__WEBPACK_IMPORTED_MODULE_1__.deindent)`\n          Attempt ${i + 1}:\n            ${s}\n        `).join(\"\\n\\n\")}\n      `,\n      { cause: errors[errors.length - 1] }\n    );\n    this.errors = errors;\n    this.name = \"RetryError\";\n  }\n  get attempts() {\n    return this.errors.length;\n  }\n};\nRetryError.prototype.name = \"RetryError\";\nasync function retry(fn, totalAttempts, { exponentialDelayBase = 1e3 } = {}) {\n  const errors = [];\n  for (let i = 0; i < totalAttempts; i++) {\n    const res = await fn(i);\n    if (res.status === \"ok\") {\n      return Object.assign(Result.ok(res.data), { attempts: i + 1 });\n    } else {\n      errors.push(res.error);\n      if (i < totalAttempts - 1) {\n        await (0,_promises_js__WEBPACK_IMPORTED_MODULE_0__.wait)((Math.random() + 0.5) * exponentialDelayBase * 2 ** i);\n      }\n    }\n  }\n  return Object.assign(Result.error(new RetryError(errors)), { attempts: totalAttempts });\n}\n\n//# sourceMappingURL=results.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvcmVzdWx0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDcUM7QUFDVztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw0QkFBNEI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxtREFBTTtBQUM1QztBQUNBO0FBQ0E7QUFDQSxNQUFNLHFEQUFRO0FBQ2Qsb0JBQW9CLGVBQWU7QUFDbkM7QUFDQSxRQUFRLFlBQVkscURBQVE7QUFDNUIscUJBQXFCLGNBQWM7QUFDbkMsWUFBWTtBQUNaLGdDQUFnQyxxREFBUTtBQUN4QyxvQkFBb0IsTUFBTTtBQUMxQixjQUFjO0FBQ2Q7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsNkJBQTZCLElBQUk7QUFDM0U7QUFDQSxrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQSxrREFBa0QsaUJBQWlCO0FBQ25FLE1BQU07QUFDTjtBQUNBO0FBQ0EsY0FBYyxrREFBSTtBQUNsQjtBQUNBO0FBQ0E7QUFDQSwrREFBK0QseUJBQXlCO0FBQ3hGO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFjay1zaGFyZWRcXGRpc3RcXGVzbVxcdXRpbHNcXHJlc3VsdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL3Jlc3VsdHMudHN4XG5pbXBvcnQgeyB3YWl0IH0gZnJvbSBcIi4vcHJvbWlzZXMuanNcIjtcbmltcG9ydCB7IGRlaW5kZW50LCBuaWNpZnkgfSBmcm9tIFwiLi9zdHJpbmdzLmpzXCI7XG52YXIgUmVzdWx0ID0ge1xuICBmcm9tVGhyb3dpbmcsXG4gIGZyb21UaHJvd2luZ0FzeW5jLFxuICBmcm9tUHJvbWlzZTogcHJvbWlzZVRvUmVzdWx0LFxuICBvayhkYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogXCJva1wiLFxuICAgICAgZGF0YVxuICAgIH07XG4gIH0sXG4gIGVycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0YXR1czogXCJlcnJvclwiLFxuICAgICAgZXJyb3JcbiAgICB9O1xuICB9LFxuICBtYXA6IG1hcFJlc3VsdCxcbiAgb3I6IChyZXN1bHQsIGZhbGxiYWNrKSA9PiB7XG4gICAgcmV0dXJuIHJlc3VsdC5zdGF0dXMgPT09IFwib2tcIiA/IHJlc3VsdC5kYXRhIDogZmFsbGJhY2s7XG4gIH0sXG4gIG9yVGhyb3c6IChyZXN1bHQpID0+IHtcbiAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gXCJlcnJvclwiKSB7XG4gICAgICB0aHJvdyByZXN1bHQuZXJyb3I7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQuZGF0YTtcbiAgfSxcbiAgb3JUaHJvd0FzeW5jOiBhc3luYyAocmVzdWx0KSA9PiB7XG4gICAgcmV0dXJuIFJlc3VsdC5vclRocm93KGF3YWl0IHJlc3VsdCk7XG4gIH0sXG4gIHJldHJ5XG59O1xudmFyIEFzeW5jUmVzdWx0ID0ge1xuICBmcm9tVGhyb3dpbmcsXG4gIGZyb21Qcm9taXNlOiBwcm9taXNlVG9SZXN1bHQsXG4gIG9rOiBSZXN1bHQub2ssXG4gIGVycm9yOiBSZXN1bHQuZXJyb3IsXG4gIHBlbmRpbmcsXG4gIG1hcDogbWFwUmVzdWx0LFxuICBvcjogKHJlc3VsdCwgZmFsbGJhY2spID0+IHtcbiAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gXCJwZW5kaW5nXCIpIHtcbiAgICAgIHJldHVybiBmYWxsYmFjaztcbiAgICB9XG4gICAgcmV0dXJuIFJlc3VsdC5vcihyZXN1bHQsIGZhbGxiYWNrKTtcbiAgfSxcbiAgb3JUaHJvdzogKHJlc3VsdCkgPT4ge1xuICAgIGlmIChyZXN1bHQuc3RhdHVzID09PSBcInBlbmRpbmdcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVzdWx0IHN0aWxsIHBlbmRpbmdcIik7XG4gICAgfVxuICAgIHJldHVybiBSZXN1bHQub3JUaHJvdyhyZXN1bHQpO1xuICB9LFxuICByZXRyeVxufTtcbmZ1bmN0aW9uIHBlbmRpbmcocHJvZ3Jlc3MpIHtcbiAgcmV0dXJuIHtcbiAgICBzdGF0dXM6IFwicGVuZGluZ1wiLFxuICAgIHByb2dyZXNzXG4gIH07XG59XG5hc3luYyBmdW5jdGlvbiBwcm9taXNlVG9SZXN1bHQocHJvbWlzZSkge1xuICB0cnkge1xuICAgIGNvbnN0IHZhbHVlID0gYXdhaXQgcHJvbWlzZTtcbiAgICByZXR1cm4gUmVzdWx0Lm9rKHZhbHVlKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gUmVzdWx0LmVycm9yKGVycm9yKTtcbiAgfVxufVxuZnVuY3Rpb24gZnJvbVRocm93aW5nKGZuKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIFJlc3VsdC5vayhmbigpKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gUmVzdWx0LmVycm9yKGVycm9yKTtcbiAgfVxufVxuYXN5bmMgZnVuY3Rpb24gZnJvbVRocm93aW5nQXN5bmMoZm4pIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gUmVzdWx0Lm9rKGF3YWl0IGZuKCkpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiBSZXN1bHQuZXJyb3IoZXJyb3IpO1xuICB9XG59XG5mdW5jdGlvbiBtYXBSZXN1bHQocmVzdWx0LCBmbikge1xuICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gXCJlcnJvclwiKSByZXR1cm4ge1xuICAgIHN0YXR1czogXCJlcnJvclwiLFxuICAgIGVycm9yOiByZXN1bHQuZXJyb3JcbiAgfTtcbiAgaWYgKHJlc3VsdC5zdGF0dXMgPT09IFwicGVuZGluZ1wiKSByZXR1cm4ge1xuICAgIHN0YXR1czogXCJwZW5kaW5nXCIsXG4gICAgLi4uXCJwcm9ncmVzc1wiIGluIHJlc3VsdCA/IHsgcHJvZ3Jlc3M6IHJlc3VsdC5wcm9ncmVzcyB9IDoge31cbiAgfTtcbiAgcmV0dXJuIFJlc3VsdC5vayhmbihyZXN1bHQuZGF0YSkpO1xufVxudmFyIFJldHJ5RXJyb3IgPSBjbGFzcyBleHRlbmRzIEFnZ3JlZ2F0ZUVycm9yIHtcbiAgY29uc3RydWN0b3IoZXJyb3JzKSB7XG4gICAgY29uc3Qgc3RyaW5ncyA9IGVycm9ycy5tYXAoKGUpID0+IG5pY2lmeShlKSk7XG4gICAgY29uc3QgaXNBbGxTYW1lID0gc3RyaW5ncy5sZW5ndGggPiAxICYmIHN0cmluZ3MuZXZlcnkoKHMpID0+IHMgPT09IHN0cmluZ3NbMF0pO1xuICAgIHN1cGVyKFxuICAgICAgZXJyb3JzLFxuICAgICAgZGVpbmRlbnRgXG4gICAgICBFcnJvciBhZnRlciAke2Vycm9ycy5sZW5ndGh9IGF0dGVtcHRzLlxuICAgICAgXG4gICAgICAke2lzQWxsU2FtZSA/IGRlaW5kZW50YFxuICAgICAgICBBdHRlbXB0cyAxLSR7ZXJyb3JzLmxlbmd0aH06XG4gICAgICAgICAgJHtzdHJpbmdzWzBdfVxuICAgICAgYCA6IHN0cmluZ3MubWFwKChzLCBpKSA9PiBkZWluZGVudGBcbiAgICAgICAgICBBdHRlbXB0ICR7aSArIDF9OlxuICAgICAgICAgICAgJHtzfVxuICAgICAgICBgKS5qb2luKFwiXFxuXFxuXCIpfVxuICAgICAgYCxcbiAgICAgIHsgY2F1c2U6IGVycm9yc1tlcnJvcnMubGVuZ3RoIC0gMV0gfVxuICAgICk7XG4gICAgdGhpcy5lcnJvcnMgPSBlcnJvcnM7XG4gICAgdGhpcy5uYW1lID0gXCJSZXRyeUVycm9yXCI7XG4gIH1cbiAgZ2V0IGF0dGVtcHRzKCkge1xuICAgIHJldHVybiB0aGlzLmVycm9ycy5sZW5ndGg7XG4gIH1cbn07XG5SZXRyeUVycm9yLnByb3RvdHlwZS5uYW1lID0gXCJSZXRyeUVycm9yXCI7XG5hc3luYyBmdW5jdGlvbiByZXRyeShmbiwgdG90YWxBdHRlbXB0cywgeyBleHBvbmVudGlhbERlbGF5QmFzZSA9IDFlMyB9ID0ge30pIHtcbiAgY29uc3QgZXJyb3JzID0gW107XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdG90YWxBdHRlbXB0czsgaSsrKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZm4oaSk7XG4gICAgaWYgKHJlcy5zdGF0dXMgPT09IFwib2tcIikge1xuICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oUmVzdWx0Lm9rKHJlcy5kYXRhKSwgeyBhdHRlbXB0czogaSArIDEgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVycm9ycy5wdXNoKHJlcy5lcnJvcik7XG4gICAgICBpZiAoaSA8IHRvdGFsQXR0ZW1wdHMgLSAxKSB7XG4gICAgICAgIGF3YWl0IHdhaXQoKE1hdGgucmFuZG9tKCkgKyAwLjUpICogZXhwb25lbnRpYWxEZWxheUJhc2UgKiAyICoqIGkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gT2JqZWN0LmFzc2lnbihSZXN1bHQuZXJyb3IobmV3IFJldHJ5RXJyb3IoZXJyb3JzKSksIHsgYXR0ZW1wdHM6IHRvdGFsQXR0ZW1wdHMgfSk7XG59XG5leHBvcnQge1xuICBBc3luY1Jlc3VsdCxcbiAgUmVzdWx0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzdWx0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js":
/*!************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncStore: () => (/* binding */ AsyncStore),\n/* harmony export */   Store: () => (/* binding */ Store),\n/* harmony export */   storeLock: () => (/* binding */ storeLock)\n/* harmony export */ });\n/* harmony import */ var _locks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locks.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/locks.js\");\n/* harmony import */ var _promises_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./promises.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\");\n/* harmony import */ var _results_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./results.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var _uuids_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./uuids.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js\");\n// src/utils/stores.tsx\n\n\n\n\nvar Store = class {\n  constructor(_value) {\n    this._value = _value;\n    this._callbacks = /* @__PURE__ */ new Map();\n  }\n  get() {\n    return this._value;\n  }\n  set(value) {\n    const oldValue = this._value;\n    this._value = value;\n    this._callbacks.forEach((callback) => callback(value, oldValue));\n  }\n  update(updater) {\n    const value = updater(this._value);\n    this.set(value);\n    return value;\n  }\n  onChange(callback) {\n    const uuid = (0,_uuids_js__WEBPACK_IMPORTED_MODULE_3__.generateUuid)();\n    this._callbacks.set(uuid, callback);\n    return {\n      unsubscribe: () => {\n        this._callbacks.delete(uuid);\n      }\n    };\n  }\n  onceChange(callback) {\n    const { unsubscribe } = this.onChange((...args) => {\n      unsubscribe();\n      callback(...args);\n    });\n    return { unsubscribe };\n  }\n};\nvar storeLock = new _locks_js__WEBPACK_IMPORTED_MODULE_0__.ReadWriteLock();\nvar AsyncStore = class _AsyncStore {\n  constructor(...args) {\n    this._mostRecentOkValue = void 0;\n    this._isRejected = false;\n    this._waitingRejectFunctions = /* @__PURE__ */ new Map();\n    this._callbacks = /* @__PURE__ */ new Map();\n    this._updateCounter = 0;\n    this._lastSuccessfulUpdate = -1;\n    if (args.length === 0) {\n      this._isAvailable = false;\n    } else {\n      this._isAvailable = true;\n      this._mostRecentOkValue = args[0];\n    }\n  }\n  isAvailable() {\n    return this._isAvailable;\n  }\n  isRejected() {\n    return this._isRejected;\n  }\n  get() {\n    if (this.isRejected()) {\n      return _results_js__WEBPACK_IMPORTED_MODULE_2__.AsyncResult.error(this._rejectionError);\n    } else if (this.isAvailable()) {\n      return _results_js__WEBPACK_IMPORTED_MODULE_2__.AsyncResult.ok(this._mostRecentOkValue);\n    } else {\n      return _results_js__WEBPACK_IMPORTED_MODULE_2__.AsyncResult.pending();\n    }\n  }\n  getOrWait() {\n    const uuid = (0,_uuids_js__WEBPACK_IMPORTED_MODULE_3__.generateUuid)();\n    if (this.isRejected()) {\n      return (0,_promises_js__WEBPACK_IMPORTED_MODULE_1__.rejected)(this._rejectionError);\n    } else if (this.isAvailable()) {\n      return (0,_promises_js__WEBPACK_IMPORTED_MODULE_1__.resolved)(this._mostRecentOkValue);\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.onceChange((value) => {\n        resolve(value);\n      });\n      this._waitingRejectFunctions.set(uuid, reject);\n    });\n    const withFinally = promise.finally(() => {\n      this._waitingRejectFunctions.delete(uuid);\n    });\n    return (0,_promises_js__WEBPACK_IMPORTED_MODULE_1__.pending)(withFinally);\n  }\n  _setIfLatest(result, curCounter) {\n    const oldState = this.get();\n    const oldValue = this._mostRecentOkValue;\n    if (curCounter > this._lastSuccessfulUpdate) {\n      switch (result.status) {\n        case \"ok\": {\n          if (!this._isAvailable || this._isRejected || this._mostRecentOkValue !== result.data) {\n            this._lastSuccessfulUpdate = curCounter;\n            this._isAvailable = true;\n            this._isRejected = false;\n            this._mostRecentOkValue = result.data;\n            this._rejectionError = void 0;\n            this._callbacks.forEach((callback) => callback({\n              state: this.get(),\n              oldState,\n              lastOkValue: oldValue\n            }));\n            return true;\n          }\n          return false;\n        }\n        case \"error\": {\n          this._lastSuccessfulUpdate = curCounter;\n          this._isAvailable = false;\n          this._isRejected = true;\n          this._rejectionError = result.error;\n          this._waitingRejectFunctions.forEach((reject) => reject(result.error));\n          this._callbacks.forEach((callback) => callback({\n            state: this.get(),\n            oldState,\n            lastOkValue: oldValue\n          }));\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  set(value) {\n    this._setIfLatest(_results_js__WEBPACK_IMPORTED_MODULE_2__.Result.ok(value), ++this._updateCounter);\n  }\n  update(updater) {\n    const value = updater(this._mostRecentOkValue);\n    this.set(value);\n    return value;\n  }\n  async setAsync(promise) {\n    return await storeLock.withReadLock(async () => {\n      const curCounter = ++this._updateCounter;\n      const result = await _results_js__WEBPACK_IMPORTED_MODULE_2__.Result.fromPromise(promise);\n      return this._setIfLatest(result, curCounter);\n    });\n  }\n  setUnavailable() {\n    this._lastSuccessfulUpdate = ++this._updateCounter;\n    this._isAvailable = false;\n    this._isRejected = false;\n    this._rejectionError = void 0;\n  }\n  setRejected(error) {\n    this._setIfLatest(_results_js__WEBPACK_IMPORTED_MODULE_2__.Result.error(error), ++this._updateCounter);\n  }\n  map(mapper) {\n    const store = new _AsyncStore();\n    this.onChange((value) => {\n      store.set(mapper(value));\n    });\n    return store;\n  }\n  onChange(callback) {\n    return this.onStateChange(({ state, lastOkValue }) => {\n      if (state.status === \"ok\") {\n        callback(state.data, lastOkValue);\n      }\n    });\n  }\n  onStateChange(callback) {\n    const uuid = (0,_uuids_js__WEBPACK_IMPORTED_MODULE_3__.generateUuid)();\n    this._callbacks.set(uuid, callback);\n    return {\n      unsubscribe: () => {\n        this._callbacks.delete(uuid);\n      }\n    };\n  }\n  onceChange(callback) {\n    const { unsubscribe } = this.onChange((...args) => {\n      unsubscribe();\n      callback(...args);\n    });\n    return { unsubscribe };\n  }\n  onceStateChange(callback) {\n    const { unsubscribe } = this.onStateChange((...args) => {\n      unsubscribe();\n      callback(...args);\n    });\n    return { unsubscribe };\n  }\n};\n\n//# sourceMappingURL=stores.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deindent: () => (/* binding */ deindent),\n/* harmony export */   deindentTemplate: () => (/* binding */ deindentTemplate),\n/* harmony export */   escapeTemplateLiteral: () => (/* binding */ escapeTemplateLiteral),\n/* harmony export */   extractScopes: () => (/* binding */ extractScopes),\n/* harmony export */   getWhitespacePrefix: () => (/* binding */ getWhitespacePrefix),\n/* harmony export */   getWhitespaceSuffix: () => (/* binding */ getWhitespaceSuffix),\n/* harmony export */   mergeScopeStrings: () => (/* binding */ mergeScopeStrings),\n/* harmony export */   nicify: () => (/* binding */ nicify),\n/* harmony export */   replaceAll: () => (/* binding */ replaceAll),\n/* harmony export */   stringCompare: () => (/* binding */ stringCompare),\n/* harmony export */   templateIdentity: () => (/* binding */ templateIdentity),\n/* harmony export */   trimEmptyLinesEnd: () => (/* binding */ trimEmptyLinesEnd),\n/* harmony export */   trimEmptyLinesStart: () => (/* binding */ trimEmptyLinesStart),\n/* harmony export */   trimLines: () => (/* binding */ trimLines),\n/* harmony export */   typedCapitalize: () => (/* binding */ typedCapitalize),\n/* harmony export */   typedJoin: () => (/* binding */ typedJoin),\n/* harmony export */   typedToLowercase: () => (/* binding */ typedToLowercase),\n/* harmony export */   typedToUppercase: () => (/* binding */ typedToUppercase)\n/* harmony export */ });\n/* harmony import */ var _arrays_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrays.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/arrays.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./objects.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n// src/utils/strings.tsx\n\n\n\nfunction typedJoin(strings, separator) {\n  return strings.join(separator);\n}\nfunction typedToLowercase(s) {\n  if (typeof s !== \"string\") throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Expected a string for typedToLowercase\", { s });\n  return s.toLowerCase();\n}\nfunction typedToUppercase(s) {\n  if (typeof s !== \"string\") throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Expected a string for typedToUppercase\", { s });\n  return s.toUpperCase();\n}\nfunction typedCapitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\nfunction stringCompare(a, b) {\n  if (typeof a !== \"string\" || typeof b !== \"string\") throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(`Expected two strings for stringCompare, found ${typeof a} and ${typeof b}`, { a, b });\n  const cmp = (a2, b2) => a2 < b2 ? -1 : a2 > b2 ? 1 : 0;\n  return cmp(a.toUpperCase(), b.toUpperCase()) || cmp(b, a);\n}\nfunction getWhitespacePrefix(s) {\n  return s.substring(0, s.length - s.trimStart().length);\n}\nfunction getWhitespaceSuffix(s) {\n  return s.substring(s.trimEnd().length);\n}\nfunction trimEmptyLinesStart(s) {\n  const lines = s.split(\"\\n\");\n  const firstNonEmptyLineIndex = lines.findIndex((line) => line.trim() !== \"\");\n  if (firstNonEmptyLineIndex === -1) return \"\";\n  return lines.slice(firstNonEmptyLineIndex).join(\"\\n\");\n}\nfunction trimEmptyLinesEnd(s) {\n  const lines = s.split(\"\\n\");\n  const lastNonEmptyLineIndex = (0,_arrays_js__WEBPACK_IMPORTED_MODULE_0__.findLastIndex)(lines, (line) => line.trim() !== \"\");\n  return lines.slice(0, lastNonEmptyLineIndex + 1).join(\"\\n\");\n}\nfunction trimLines(s) {\n  return trimEmptyLinesEnd(trimEmptyLinesStart(s));\n}\nfunction templateIdentity(strings, ...values) {\n  if (values.length !== strings.length - 1) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Invalid number of values; must be one less than strings\", { strings, values });\n  return strings.reduce((result, str, i) => result + str + (values[i] ?? \"\"), \"\");\n}\nfunction deindent(strings, ...values) {\n  if (typeof strings === \"string\") return deindent([strings]);\n  return templateIdentity(...deindentTemplate(strings, ...values));\n}\nfunction deindentTemplate(strings, ...values) {\n  if (values.length !== strings.length - 1) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Invalid number of values; must be one less than strings\", { strings, values });\n  const trimmedStrings = [...strings];\n  trimmedStrings[0] = trimEmptyLinesStart(trimmedStrings[0] + \"+\").slice(0, -1);\n  trimmedStrings[trimmedStrings.length - 1] = trimEmptyLinesEnd(\"+\" + trimmedStrings[trimmedStrings.length - 1]).slice(1);\n  const indentation = trimmedStrings.join(\"${SOME_VALUE}\").split(\"\\n\").filter((line) => line.trim() !== \"\").map((line) => getWhitespacePrefix(line).length).reduce((min, current) => Math.min(min, current), Infinity);\n  const deindentedStrings = trimmedStrings.map((string, stringIndex) => {\n    return string.split(\"\\n\").map((line, lineIndex) => stringIndex !== 0 && lineIndex === 0 ? line : line.substring(indentation)).join(\"\\n\");\n  });\n  const indentedValues = values.map((value, i) => {\n    const firstLineIndentation = getWhitespacePrefix(deindentedStrings[i].split(\"\\n\").at(-1));\n    return `${value}`.replaceAll(\"\\n\", `\n${firstLineIndentation}`);\n  });\n  return [deindentedStrings, ...indentedValues];\n}\nfunction extractScopes(scope, removeDuplicates = true) {\n  const trimmedString = scope.trim();\n  const scopesArray = trimmedString.split(/\\s+/);\n  const filtered = scopesArray.filter((scope2) => scope2.length > 0);\n  return removeDuplicates ? [...new Set(filtered)] : filtered;\n}\nfunction mergeScopeStrings(...scopes) {\n  const allScope = scopes.map((s) => extractScopes(s)).flat().join(\" \");\n  return extractScopes(allScope).join(\" \");\n}\nfunction escapeTemplateLiteral(s) {\n  return s.replaceAll(\"`\", \"\\\\`\").replaceAll(\"\\\\\", \"\\\\\\\\\").replaceAll(\"$\", \"\\\\$\");\n}\nvar nicifiableClassNameOverrides = new Map(Object.entries({\n  Headers\n}).map(([k, v]) => [v, k]));\nfunction nicify(value, options = {}) {\n  const fullOptions = {\n    maxDepth: 5,\n    currentIndent: \"\",\n    lineIndent: \"  \",\n    multiline: true,\n    refs: /* @__PURE__ */ new Map(),\n    path: \"value\",\n    parent: null,\n    overrides: () => null,\n    keyInParent: null,\n    hideFields: [],\n    ...(0,_objects_js__WEBPACK_IMPORTED_MODULE_2__.filterUndefined)(options)\n  };\n  const {\n    maxDepth,\n    currentIndent,\n    lineIndent,\n    multiline,\n    refs,\n    path,\n    overrides,\n    hideFields\n  } = fullOptions;\n  const nl = `\n${currentIndent}`;\n  const overrideResult = overrides(value, options);\n  if (overrideResult !== null) return overrideResult;\n  if ([\"function\", \"object\", \"symbol\"].includes(typeof value) && value !== null) {\n    if (refs.has(value)) {\n      return `Ref<${refs.get(value)}>`;\n    }\n    refs.set(value, path);\n  }\n  const newOptions = {\n    maxDepth: maxDepth - 1,\n    currentIndent,\n    lineIndent,\n    multiline,\n    refs,\n    path: path + \"->[unknown property]\",\n    overrides,\n    parent: { value, options: fullOptions },\n    keyInParent: null,\n    hideFields: []\n  };\n  const nestedNicify = (newValue, newPath, keyInParent, options2 = {}) => {\n    return nicify(newValue, {\n      ...newOptions,\n      path: newPath,\n      currentIndent: currentIndent + lineIndent,\n      keyInParent,\n      ...options2\n    });\n  };\n  switch (typeof value) {\n    case \"boolean\":\n    case \"number\": {\n      return JSON.stringify(value);\n    }\n    case \"string\": {\n      const isDeindentable = (v) => deindent(v) === v && v.includes(\"\\n\");\n      const wrapInDeindent = (v) => deindent`\n        deindent\\`\n        ${currentIndent + lineIndent}${escapeTemplateLiteral(v).replaceAll(\"\\n\", nl + lineIndent)}\n        ${currentIndent}\\`\n      `;\n      if (isDeindentable(value)) {\n        return wrapInDeindent(value);\n      } else if (value.endsWith(\"\\n\") && isDeindentable(value.slice(0, -1))) {\n        return wrapInDeindent(value.slice(0, -1)) + ' + \"\\\\n\"';\n      } else {\n        return JSON.stringify(value);\n      }\n    }\n    case \"undefined\": {\n      return \"undefined\";\n    }\n    case \"symbol\": {\n      return value.toString();\n    }\n    case \"bigint\": {\n      return `${value}n`;\n    }\n    case \"function\": {\n      if (value.name) return `function ${value.name}(...) { ... }`;\n      return `(...) => { ... }`;\n    }\n    case \"object\": {\n      if (value === null) return \"null\";\n      if (Array.isArray(value)) {\n        const extraLines2 = getNicifiedObjectExtraLines(value);\n        const resValueLength2 = value.length + extraLines2.length;\n        if (maxDepth <= 0 && resValueLength2 === 0) return \"[...]\";\n        const resValues2 = value.map((v, i) => nestedNicify(v, `${path}[${i}]`, i));\n        resValues2.push(...extraLines2);\n        if (resValues2.length !== resValueLength2) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"nicify of object: resValues.length !== resValueLength\", { value, resValues: resValues2, resValueLength: resValueLength2 });\n        const shouldIndent2 = resValues2.length > 4 || resValues2.some((x) => resValues2.length > 1 && x.length > 4 || x.includes(\"\\n\"));\n        if (shouldIndent2) {\n          return `[${nl}${resValues2.map((x) => `${lineIndent}${x},${nl}`).join(\"\")}]`;\n        } else {\n          return `[${resValues2.join(\", \")}]`;\n        }\n      }\n      if (value instanceof URL) {\n        return `URL(${nestedNicify(value.toString(), `${path}.toString()`, null)})`;\n      }\n      if (ArrayBuffer.isView(value)) {\n        return `${value.constructor.name}([${value.toString()}])`;\n      }\n      if (value instanceof ArrayBuffer) {\n        return `ArrayBuffer [${new Uint8Array(value).toString()}]`;\n      }\n      if (value instanceof Error) {\n        let stack = value.stack ?? \"\";\n        const toString = value.toString();\n        if (!stack.startsWith(toString)) stack = `${toString}\n${stack}`;\n        stack = stack.trimEnd();\n        stack = stack.replace(/\\n\\s+/g, `\n${lineIndent}${lineIndent}`);\n        stack = stack.replace(\"\\n\", `\n${lineIndent}Stack:\n`);\n        if (Object.keys(value).length > 0) {\n          stack += `\n${lineIndent}Extra properties: ${nestedNicify(Object.fromEntries(Object.entries(value)), path, null)}`;\n        }\n        if (value.cause) {\n          stack += `\n${lineIndent}Cause:\n${lineIndent}${lineIndent}${nestedNicify(value.cause, path, null, { currentIndent: currentIndent + lineIndent + lineIndent })}`;\n        }\n        stack = stack.replaceAll(\"\\n\", `\n${currentIndent}`);\n        return stack;\n      }\n      const constructorName = [null, Object.prototype].includes(Object.getPrototypeOf(value)) ? null : nicifiableClassNameOverrides.get(value.constructor) ?? value.constructor.name;\n      const constructorString = constructorName ? `${constructorName} ` : \"\";\n      const entries = getNicifiableEntries(value).filter(([k]) => !hideFields.includes(k));\n      const extraLines = [\n        ...getNicifiedObjectExtraLines(value),\n        ...hideFields.length > 0 ? [`<some fields may have been hidden>`] : []\n      ];\n      const resValueLength = entries.length + extraLines.length;\n      if (resValueLength === 0) return `${constructorString}{}`;\n      if (maxDepth <= 0) return `${constructorString}{ ... }`;\n      const resValues = entries.map(([k, v], keyIndex) => {\n        const keyNicified = nestedNicify(k, `Object.keys(${path})[${keyIndex}]`, null);\n        const keyInObjectLiteral = typeof k === \"string\" ? nicifyPropertyString(k) : `[${keyNicified}]`;\n        if (typeof v === \"function\" && v.name === k) {\n          return `${keyInObjectLiteral}(...): { ... }`;\n        } else {\n          return `${keyInObjectLiteral}: ${nestedNicify(v, `${path}[${keyNicified}]`, k)}`;\n        }\n      });\n      resValues.push(...extraLines);\n      if (resValues.length !== resValueLength) throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"nicify of object: resValues.length !== resValueLength\", { value, resValues, resValueLength });\n      const shouldIndent = resValues.length > 1 || resValues.some((x) => x.includes(\"\\n\"));\n      if (resValues.length === 0) return `${constructorString}{}`;\n      if (shouldIndent) {\n        return `${constructorString}{${nl}${resValues.map((x) => `${lineIndent}${x},${nl}`).join(\"\")}}`;\n      } else {\n        return `${constructorString}{ ${resValues.join(\", \")} }`;\n      }\n    }\n    default: {\n      return `${typeof value}<${value}>`;\n    }\n  }\n}\nfunction replaceAll(input, searchValue, replaceValue) {\n  if (searchValue === \"\") throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"replaceAll: searchValue is empty\");\n  return input.split(searchValue).join(replaceValue);\n}\nfunction nicifyPropertyString(str) {\n  return JSON.stringify(str);\n}\nfunction getNicifiableKeys(value) {\n  const overridden = (\"getNicifiableKeys\" in value ? value.getNicifiableKeys?.bind(value) : null)?.();\n  if (overridden != null) return overridden;\n  if (value instanceof Response) {\n    return [\"status\", \"headers\"];\n  }\n  const keys = Object.keys(value).sort();\n  return (0,_arrays_js__WEBPACK_IMPORTED_MODULE_0__.unique)(keys);\n}\nfunction getNicifiableEntries(value) {\n  const recordLikes = [Headers];\n  function isRecordLike(value2) {\n    return recordLikes.some((x) => value2 instanceof x);\n  }\n  if (isRecordLike(value)) {\n    return [...value.entries()].sort(([a], [b]) => stringCompare(`${a}`, `${b}`));\n  }\n  const keys = getNicifiableKeys(value);\n  return keys.map((k) => [k, value[k]]);\n}\nfunction getNicifiedObjectExtraLines(value) {\n  return (\"getNicifiedObjectExtraLines\" in value ? value.getNicifiedObjectExtraLines : null)?.() ?? [];\n}\n\n//# sourceMappingURL=strings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/types.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/types.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   typeAssert: () => (/* binding */ typeAssert),\n/* harmony export */   typeAssertExtends: () => (/* binding */ typeAssertExtends),\n/* harmony export */   typeAssertIs: () => (/* binding */ typeAssertIs)\n/* harmony export */ });\n// src/utils/types.tsx\ntypeAssertIs()();\ntypeAssertIs()();\ntypeAssertIs()();\nfunction typeAssert() {\n  return () => void 0;\n}\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\nfunction typeAssertExtends() {\n  return () => void 0;\n}\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\nfunction typeAssertIs() {\n  return () => void 0;\n}\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\ntypeAssertExtends()();\n\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcZXNtXFx1dGlsc1xcdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3V0aWxzL3R5cGVzLnRzeFxudHlwZUFzc2VydElzKCkoKTtcbnR5cGVBc3NlcnRJcygpKCk7XG50eXBlQXNzZXJ0SXMoKSgpO1xuZnVuY3Rpb24gdHlwZUFzc2VydCgpIHtcbiAgcmV0dXJuICgpID0+IHZvaWQgMDtcbn1cbnR5cGVBc3NlcnRFeHRlbmRzKCkoKTtcbnR5cGVBc3NlcnRFeHRlbmRzKCkoKTtcbnR5cGVBc3NlcnRFeHRlbmRzKCkoKTtcbnR5cGVBc3NlcnRFeHRlbmRzKCkoKTtcbmZ1bmN0aW9uIHR5cGVBc3NlcnRFeHRlbmRzKCkge1xuICByZXR1cm4gKCkgPT4gdm9pZCAwO1xufVxudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xuZnVuY3Rpb24gdHlwZUFzc2VydElzKCkge1xuICByZXR1cm4gKCkgPT4gdm9pZCAwO1xufVxudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xudHlwZUFzc2VydEV4dGVuZHMoKSgpO1xuZXhwb3J0IHtcbiAgdHlwZUFzc2VydCxcbiAgdHlwZUFzc2VydEV4dGVuZHMsXG4gIHR5cGVBc3NlcnRJc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createUrlIfValid: () => (/* binding */ createUrlIfValid),\n/* harmony export */   getRelativePart: () => (/* binding */ getRelativePart),\n/* harmony export */   isLocalhost: () => (/* binding */ isLocalhost),\n/* harmony export */   isRelative: () => (/* binding */ isRelative),\n/* harmony export */   isValidHostname: () => (/* binding */ isValidHostname),\n/* harmony export */   isValidHostnameWithWildcards: () => (/* binding */ isValidHostnameWithWildcards),\n/* harmony export */   isValidUrl: () => (/* binding */ isValidUrl),\n/* harmony export */   matchHostnamePattern: () => (/* binding */ matchHostnamePattern),\n/* harmony export */   url: () => (/* binding */ url),\n/* harmony export */   urlString: () => (/* binding */ urlString)\n/* harmony export */ });\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crypto.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js\");\n/* harmony import */ var _strings_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./strings.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n// src/utils/urls.tsx\n\n\nfunction createUrlIfValid(...args) {\n  try {\n    return new URL(...args);\n  } catch (e) {\n    return null;\n  }\n}\nfunction isValidUrl(url2) {\n  return !!createUrlIfValid(url2);\n}\nfunction isValidHostname(hostname) {\n  if (!hostname || hostname.startsWith(\".\") || hostname.endsWith(\".\") || hostname.includes(\"..\")) {\n    return false;\n  }\n  const url2 = createUrlIfValid(`https://${hostname}`);\n  if (!url2) return false;\n  return url2.hostname === hostname;\n}\nfunction isValidHostnameWithWildcards(hostname) {\n  if (!hostname) return false;\n  const hasWildcard = hostname.includes(\"*\");\n  if (!hasWildcard) {\n    return isValidHostname(hostname);\n  }\n  if (hostname.startsWith(\".\") || hostname.endsWith(\".\")) {\n    return false;\n  }\n  if (hostname.includes(\"..\")) {\n    return false;\n  }\n  const testHostname = hostname.replace(/\\*+/g, \"wildcard\");\n  if (!/^[a-zA-Z0-9.-]+$/.test(testHostname)) {\n    return false;\n  }\n  const segments = hostname.split(/\\*+/);\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (segment === \"\") continue;\n    if (i === 0 && segment.startsWith(\".\")) {\n      return false;\n    }\n    if (i === segments.length - 1 && segment.endsWith(\".\")) {\n      return false;\n    }\n    if (segment.includes(\"..\")) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction matchHostnamePattern(pattern, hostname) {\n  if (!pattern.includes(\"*\")) {\n    return pattern === hostname;\n  }\n  let regexPattern = pattern.replace(/[.+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  const doubleWildcardPlaceholder = \"\\0DOUBLE_WILDCARD\\0\";\n  regexPattern = regexPattern.replace(/\\*\\*/g, doubleWildcardPlaceholder);\n  regexPattern = regexPattern.replace(/\\*/g, \"[^.]*\");\n  regexPattern = regexPattern.replace(new RegExp(doubleWildcardPlaceholder, \"g\"), \".*\");\n  regexPattern = \"^\" + regexPattern + \"$\";\n  try {\n    const regex = new RegExp(regexPattern);\n    return regex.test(hostname);\n  } catch {\n    return false;\n  }\n}\nfunction isLocalhost(urlOrString) {\n  const url2 = createUrlIfValid(urlOrString);\n  if (!url2) return false;\n  if (url2.hostname === \"localhost\" || url2.hostname.endsWith(\".localhost\")) return true;\n  if (url2.hostname.match(/^127\\.\\d+\\.\\d+\\.\\d+$/)) return true;\n  return false;\n}\nfunction isRelative(url2) {\n  const randomDomain = `${(0,_crypto_js__WEBPACK_IMPORTED_MODULE_0__.generateSecureRandomString)()}.stack-auth.example.com`;\n  const u = createUrlIfValid(url2, `https://${randomDomain}`);\n  if (!u) return false;\n  if (u.host !== randomDomain) return false;\n  if (u.protocol !== \"https:\") return false;\n  return true;\n}\nfunction getRelativePart(url2) {\n  return url2.pathname + url2.search + url2.hash;\n}\nfunction url(strings, ...values) {\n  return new URL(urlString(strings, ...values));\n}\nfunction urlString(strings, ...values) {\n  return (0,_strings_js__WEBPACK_IMPORTED_MODULE_1__.templateIdentity)(strings, ...values.map(encodeURIComponent));\n}\n\n//# sourceMappingURL=urls.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvdXJscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUN5RDtBQUNUO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxTQUFTO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscUJBQXFCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsc0VBQTBCLEdBQUc7QUFDdkQsOENBQThDLGFBQWE7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw2REFBZ0I7QUFDekI7QUFZRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrLXNoYXJlZFxcZGlzdFxcZXNtXFx1dGlsc1xcdXJscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvdXJscy50c3hcbmltcG9ydCB7IGdlbmVyYXRlU2VjdXJlUmFuZG9tU3RyaW5nIH0gZnJvbSBcIi4vY3J5cHRvLmpzXCI7XG5pbXBvcnQgeyB0ZW1wbGF0ZUlkZW50aXR5IH0gZnJvbSBcIi4vc3RyaW5ncy5qc1wiO1xuZnVuY3Rpb24gY3JlYXRlVXJsSWZWYWxpZCguLi5hcmdzKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIG5ldyBVUkwoLi4uYXJncyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuZnVuY3Rpb24gaXNWYWxpZFVybCh1cmwyKSB7XG4gIHJldHVybiAhIWNyZWF0ZVVybElmVmFsaWQodXJsMik7XG59XG5mdW5jdGlvbiBpc1ZhbGlkSG9zdG5hbWUoaG9zdG5hbWUpIHtcbiAgaWYgKCFob3N0bmFtZSB8fCBob3N0bmFtZS5zdGFydHNXaXRoKFwiLlwiKSB8fCBob3N0bmFtZS5lbmRzV2l0aChcIi5cIikgfHwgaG9zdG5hbWUuaW5jbHVkZXMoXCIuLlwiKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBjb25zdCB1cmwyID0gY3JlYXRlVXJsSWZWYWxpZChgaHR0cHM6Ly8ke2hvc3RuYW1lfWApO1xuICBpZiAoIXVybDIpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIHVybDIuaG9zdG5hbWUgPT09IGhvc3RuYW1lO1xufVxuZnVuY3Rpb24gaXNWYWxpZEhvc3RuYW1lV2l0aFdpbGRjYXJkcyhob3N0bmFtZSkge1xuICBpZiAoIWhvc3RuYW1lKSByZXR1cm4gZmFsc2U7XG4gIGNvbnN0IGhhc1dpbGRjYXJkID0gaG9zdG5hbWUuaW5jbHVkZXMoXCIqXCIpO1xuICBpZiAoIWhhc1dpbGRjYXJkKSB7XG4gICAgcmV0dXJuIGlzVmFsaWRIb3N0bmFtZShob3N0bmFtZSk7XG4gIH1cbiAgaWYgKGhvc3RuYW1lLnN0YXJ0c1dpdGgoXCIuXCIpIHx8IGhvc3RuYW1lLmVuZHNXaXRoKFwiLlwiKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAoaG9zdG5hbWUuaW5jbHVkZXMoXCIuLlwiKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBjb25zdCB0ZXN0SG9zdG5hbWUgPSBob3N0bmFtZS5yZXBsYWNlKC9cXCorL2csIFwid2lsZGNhcmRcIik7XG4gIGlmICghL15bYS16QS1aMC05Li1dKyQvLnRlc3QodGVzdEhvc3RuYW1lKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBjb25zdCBzZWdtZW50cyA9IGhvc3RuYW1lLnNwbGl0KC9cXCorLyk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2VnbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBzZWdtZW50ID0gc2VnbWVudHNbaV07XG4gICAgaWYgKHNlZ21lbnQgPT09IFwiXCIpIGNvbnRpbnVlO1xuICAgIGlmIChpID09PSAwICYmIHNlZ21lbnQuc3RhcnRzV2l0aChcIi5cIikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGkgPT09IHNlZ21lbnRzLmxlbmd0aCAtIDEgJiYgc2VnbWVudC5lbmRzV2l0aChcIi5cIikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKHNlZ21lbnQuaW5jbHVkZXMoXCIuLlwiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIG1hdGNoSG9zdG5hbWVQYXR0ZXJuKHBhdHRlcm4sIGhvc3RuYW1lKSB7XG4gIGlmICghcGF0dGVybi5pbmNsdWRlcyhcIipcIikpIHtcbiAgICByZXR1cm4gcGF0dGVybiA9PT0gaG9zdG5hbWU7XG4gIH1cbiAgbGV0IHJlZ2V4UGF0dGVybiA9IHBhdHRlcm4ucmVwbGFjZSgvWy4rP14ke30oKXxbXFxdXFxcXF0vZywgXCJcXFxcJCZcIik7XG4gIGNvbnN0IGRvdWJsZVdpbGRjYXJkUGxhY2Vob2xkZXIgPSBcIlxcMERPVUJMRV9XSUxEQ0FSRFxcMFwiO1xuICByZWdleFBhdHRlcm4gPSByZWdleFBhdHRlcm4ucmVwbGFjZSgvXFwqXFwqL2csIGRvdWJsZVdpbGRjYXJkUGxhY2Vob2xkZXIpO1xuICByZWdleFBhdHRlcm4gPSByZWdleFBhdHRlcm4ucmVwbGFjZSgvXFwqL2csIFwiW14uXSpcIik7XG4gIHJlZ2V4UGF0dGVybiA9IHJlZ2V4UGF0dGVybi5yZXBsYWNlKG5ldyBSZWdFeHAoZG91YmxlV2lsZGNhcmRQbGFjZWhvbGRlciwgXCJnXCIpLCBcIi4qXCIpO1xuICByZWdleFBhdHRlcm4gPSBcIl5cIiArIHJlZ2V4UGF0dGVybiArIFwiJFwiO1xuICB0cnkge1xuICAgIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChyZWdleFBhdHRlcm4pO1xuICAgIHJldHVybiByZWdleC50ZXN0KGhvc3RuYW1lKTtcbiAgfSBjYXRjaCB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5mdW5jdGlvbiBpc0xvY2FsaG9zdCh1cmxPclN0cmluZykge1xuICBjb25zdCB1cmwyID0gY3JlYXRlVXJsSWZWYWxpZCh1cmxPclN0cmluZyk7XG4gIGlmICghdXJsMikgcmV0dXJuIGZhbHNlO1xuICBpZiAodXJsMi5ob3N0bmFtZSA9PT0gXCJsb2NhbGhvc3RcIiB8fCB1cmwyLmhvc3RuYW1lLmVuZHNXaXRoKFwiLmxvY2FsaG9zdFwiKSkgcmV0dXJuIHRydWU7XG4gIGlmICh1cmwyLmhvc3RuYW1lLm1hdGNoKC9eMTI3XFwuXFxkK1xcLlxcZCtcXC5cXGQrJC8pKSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gaXNSZWxhdGl2ZSh1cmwyKSB7XG4gIGNvbnN0IHJhbmRvbURvbWFpbiA9IGAke2dlbmVyYXRlU2VjdXJlUmFuZG9tU3RyaW5nKCl9LnN0YWNrLWF1dGguZXhhbXBsZS5jb21gO1xuICBjb25zdCB1ID0gY3JlYXRlVXJsSWZWYWxpZCh1cmwyLCBgaHR0cHM6Ly8ke3JhbmRvbURvbWFpbn1gKTtcbiAgaWYgKCF1KSByZXR1cm4gZmFsc2U7XG4gIGlmICh1Lmhvc3QgIT09IHJhbmRvbURvbWFpbikgcmV0dXJuIGZhbHNlO1xuICBpZiAodS5wcm90b2NvbCAhPT0gXCJodHRwczpcIikgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIGdldFJlbGF0aXZlUGFydCh1cmwyKSB7XG4gIHJldHVybiB1cmwyLnBhdGhuYW1lICsgdXJsMi5zZWFyY2ggKyB1cmwyLmhhc2g7XG59XG5mdW5jdGlvbiB1cmwoc3RyaW5ncywgLi4udmFsdWVzKSB7XG4gIHJldHVybiBuZXcgVVJMKHVybFN0cmluZyhzdHJpbmdzLCAuLi52YWx1ZXMpKTtcbn1cbmZ1bmN0aW9uIHVybFN0cmluZyhzdHJpbmdzLCAuLi52YWx1ZXMpIHtcbiAgcmV0dXJuIHRlbXBsYXRlSWRlbnRpdHkoc3RyaW5ncywgLi4udmFsdWVzLm1hcChlbmNvZGVVUklDb21wb25lbnQpKTtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZVVybElmVmFsaWQsXG4gIGdldFJlbGF0aXZlUGFydCxcbiAgaXNMb2NhbGhvc3QsXG4gIGlzUmVsYXRpdmUsXG4gIGlzVmFsaWRIb3N0bmFtZSxcbiAgaXNWYWxpZEhvc3RuYW1lV2l0aFdpbGRjYXJkcyxcbiAgaXNWYWxpZFVybCxcbiAgbWF0Y2hIb3N0bmFtZVBhdHRlcm4sXG4gIHVybCxcbiAgdXJsU3RyaW5nXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateUuid: () => (/* binding */ generateUuid),\n/* harmony export */   isUuid: () => (/* binding */ isUuid)\n/* harmony export */ });\n/* harmony import */ var _crypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./crypto.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/crypto.js\");\n// src/utils/uuids.tsx\n\nfunction generateUuid() {\n  return \"10000000-1000-4000-8000-100000000000\".replace(\n    /[018]/g,\n    (c) => (+c ^ (0,_crypto_js__WEBPACK_IMPORTED_MODULE_0__.generateRandomValues)(new Uint8Array(1))[0] & 15 >> +c / 4).toString(16)\n  );\n}\nfunction isUuid(str) {\n  return /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/.test(str);\n}\n\n//# sourceMappingURL=uuids.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC9lc20vdXRpbHMvdXVpZHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdFQUFvQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLFVBQVUsR0FBRztBQUM5RTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2stc2hhcmVkXFxkaXN0XFxlc21cXHV0aWxzXFx1dWlkcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvdXVpZHMudHN4XG5pbXBvcnQgeyBnZW5lcmF0ZVJhbmRvbVZhbHVlcyB9IGZyb20gXCIuL2NyeXB0by5qc1wiO1xuZnVuY3Rpb24gZ2VuZXJhdGVVdWlkKCkge1xuICByZXR1cm4gXCIxMDAwMDAwMC0xMDAwLTQwMDAtODAwMC0xMDAwMDAwMDAwMDBcIi5yZXBsYWNlKFxuICAgIC9bMDE4XS9nLFxuICAgIChjKSA9PiAoK2MgXiBnZW5lcmF0ZVJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSgxKSlbMF0gJiAxNSA+PiArYyAvIDQpLnRvU3RyaW5nKDE2KVxuICApO1xufVxuZnVuY3Rpb24gaXNVdWlkKHN0cikge1xuICByZXR1cm4gL15bMC05YS1mXXs4fS1bMC05YS1mXXs0fS00WzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9JC8udGVzdChzdHIpO1xufVxuZXhwb3J0IHtcbiAgZ2VuZXJhdGVVdWlkLFxuICBpc1V1aWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dWlkcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js":
/*!*************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/auth.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addNewOAuthProviderOrScope: () => (/* binding */ addNewOAuthProviderOrScope),\n/* harmony export */   callOAuthCallback: () => (/* binding */ callOAuthCallback),\n/* harmony export */   signInWithOAuth: () => (/* binding */ signInWithOAuth)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n/* harmony import */ var _utils_url_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/url.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\");\n/* harmony import */ var _cookie_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cookie.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\");\n// src/lib/auth.ts\n\n\n\n\n\n\n\nasync function signInWithOAuth(iface, options, session) {\n  const { codeChallenge, state } = await (0,_cookie_js__WEBPACK_IMPORTED_MODULE_5__.saveVerifierAndState)();\n  const location = await iface.getOAuthUrl({\n    provider: options.provider,\n    redirectUrl: (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(options.redirectUrl, \"redirectUrl\"),\n    errorRedirectUrl: (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(options.errorRedirectUrl, \"errorRedirectUrl\"),\n    codeChallenge,\n    state,\n    type: \"authenticate\",\n    providerScope: options.providerScope,\n    session\n  });\n  window.location.assign(location);\n  await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.neverResolve)();\n}\nasync function addNewOAuthProviderOrScope(iface, options, session) {\n  const { codeChallenge, state } = await (0,_cookie_js__WEBPACK_IMPORTED_MODULE_5__.saveVerifierAndState)();\n  const location = await iface.getOAuthUrl({\n    provider: options.provider,\n    redirectUrl: (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(options.redirectUrl, \"redirectUrl\"),\n    errorRedirectUrl: (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(options.errorRedirectUrl, \"errorRedirectUrl\"),\n    afterCallbackRedirectUrl: (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(window.location.href, \"afterCallbackRedirectUrl\"),\n    codeChallenge,\n    state,\n    type: \"link\",\n    session,\n    providerScope: options.providerScope\n  });\n  window.location.assign(location);\n  await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.neverResolve)();\n}\nfunction consumeOAuthCallbackQueryParams() {\n  const requiredParams = [\"code\", \"state\"];\n  const originalUrl = new URL(window.location.href);\n  for (const param of requiredParams) {\n    if (!originalUrl.searchParams.has(param)) {\n      console.warn(new Error(`Missing required query parameter on OAuth callback: ${param}. Maybe you opened or reloaded the oauth-callback page from your history?`));\n      return null;\n    }\n  }\n  const expectedState = originalUrl.searchParams.get(\"state\") ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.throwErr)(\"This should never happen; isn't state required above?\");\n  const cookieResult = (0,_cookie_js__WEBPACK_IMPORTED_MODULE_5__.consumeVerifierAndStateCookie)(expectedState);\n  if (!cookieResult) {\n    console.warn((0,_stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_4__.deindent)`\n      Stack found an outer OAuth callback state in the query parameters, but not in cookies.\n      \n      This could have multiple reasons:\n        - The cookie expired, because the OAuth flow took too long.\n        - The user's browser deleted the cookie, either manually or because of a very strict cookie policy.\n        - The cookie was already consumed by this page, and the user already logged in.\n        - You are using another OAuth client library with the same callback URL as Stack.\n        - The user opened the OAuth callback page from their history.\n\n      Either way, it is probably safe to ignore this warning unless you are debugging an OAuth issue.\n    `);\n    return null;\n  }\n  const newUrl = new URL(originalUrl);\n  for (const param of requiredParams) {\n    newUrl.searchParams.delete(param);\n  }\n  window.history.replaceState({}, \"\", newUrl.toString());\n  return {\n    originalUrl,\n    codeVerifier: cookieResult.codeVerifier,\n    state: expectedState\n  };\n}\nasync function callOAuthCallback(iface, redirectUrl) {\n  const consumed = consumeOAuthCallbackQueryParams();\n  if (!consumed) return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(void 0);\n  try {\n    return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_3__.Result.ok(await iface.callOAuthCallback({\n      oauthParams: consumed.originalUrl.searchParams,\n      redirectUri: (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_6__.constructRedirectUrl)(redirectUrl, \"redirectUri\"),\n      codeVerifier: consumed.codeVerifier,\n      state: consumed.state\n    }));\n  } catch (e) {\n    if (_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownError.isKnownError(e)) {\n      throw e;\n    }\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"Error signing in during OAuth callback. Please try again.\", { cause: e });\n  }\n}\n\n//# sourceMappingURL=auth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvYXV0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDc0Q7QUFDcUM7QUFDZjtBQUNQO0FBQ0U7QUFDaEI7QUFDMkI7QUFDbEY7QUFDQSxVQUFVLHVCQUF1QixRQUFRLGdFQUFvQjtBQUM3RDtBQUNBO0FBQ0EsaUJBQWlCLG1FQUFvQjtBQUNyQyxzQkFBc0IsbUVBQW9CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxRQUFRLDBGQUFZO0FBQ3BCO0FBQ0E7QUFDQSxVQUFVLHVCQUF1QixRQUFRLGdFQUFvQjtBQUM3RDtBQUNBO0FBQ0EsaUJBQWlCLG1FQUFvQjtBQUNyQyxzQkFBc0IsbUVBQW9CO0FBQzFDLDhCQUE4QixtRUFBb0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLFFBQVEsMEZBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLE1BQU07QUFDMUY7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLG9GQUFRLDRCQUE0QjtBQUNyRyx1QkFBdUIseUVBQTZCO0FBQ3BEO0FBQ0EsaUJBQWlCLHFGQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtFQUFNO0FBQzlCO0FBQ0EsV0FBVywrRUFBTTtBQUNqQjtBQUNBLG1CQUFtQixtRUFBb0I7QUFDdkM7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0osUUFBUSxnRUFBVTtBQUNsQjtBQUNBO0FBQ0EsY0FBYywyRkFBbUIsZ0VBQWdFLFVBQVU7QUFDM0c7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxhdXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvYXV0aC50c1xuaW1wb3J0IHsgS25vd25FcnJvciB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWRcIjtcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IsIHRocm93RXJyIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL2Vycm9yc1wiO1xuaW1wb3J0IHsgbmV2ZXJSZXNvbHZlIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL3Byb21pc2VzXCI7XG5pbXBvcnQgeyBSZXN1bHQgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvcmVzdWx0c1wiO1xuaW1wb3J0IHsgZGVpbmRlbnQgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvc3RyaW5nc1wiO1xuaW1wb3J0IHsgY29uc3RydWN0UmVkaXJlY3RVcmwgfSBmcm9tIFwiLi4vdXRpbHMvdXJsLmpzXCI7XG5pbXBvcnQgeyBjb25zdW1lVmVyaWZpZXJBbmRTdGF0ZUNvb2tpZSwgc2F2ZVZlcmlmaWVyQW5kU3RhdGUgfSBmcm9tIFwiLi9jb29raWUuanNcIjtcbmFzeW5jIGZ1bmN0aW9uIHNpZ25JbldpdGhPQXV0aChpZmFjZSwgb3B0aW9ucywgc2Vzc2lvbikge1xuICBjb25zdCB7IGNvZGVDaGFsbGVuZ2UsIHN0YXRlIH0gPSBhd2FpdCBzYXZlVmVyaWZpZXJBbmRTdGF0ZSgpO1xuICBjb25zdCBsb2NhdGlvbiA9IGF3YWl0IGlmYWNlLmdldE9BdXRoVXJsKHtcbiAgICBwcm92aWRlcjogb3B0aW9ucy5wcm92aWRlcixcbiAgICByZWRpcmVjdFVybDogY29uc3RydWN0UmVkaXJlY3RVcmwob3B0aW9ucy5yZWRpcmVjdFVybCwgXCJyZWRpcmVjdFVybFwiKSxcbiAgICBlcnJvclJlZGlyZWN0VXJsOiBjb25zdHJ1Y3RSZWRpcmVjdFVybChvcHRpb25zLmVycm9yUmVkaXJlY3RVcmwsIFwiZXJyb3JSZWRpcmVjdFVybFwiKSxcbiAgICBjb2RlQ2hhbGxlbmdlLFxuICAgIHN0YXRlLFxuICAgIHR5cGU6IFwiYXV0aGVudGljYXRlXCIsXG4gICAgcHJvdmlkZXJTY29wZTogb3B0aW9ucy5wcm92aWRlclNjb3BlLFxuICAgIHNlc3Npb25cbiAgfSk7XG4gIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24obG9jYXRpb24pO1xuICBhd2FpdCBuZXZlclJlc29sdmUoKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGFkZE5ld09BdXRoUHJvdmlkZXJPclNjb3BlKGlmYWNlLCBvcHRpb25zLCBzZXNzaW9uKSB7XG4gIGNvbnN0IHsgY29kZUNoYWxsZW5nZSwgc3RhdGUgfSA9IGF3YWl0IHNhdmVWZXJpZmllckFuZFN0YXRlKCk7XG4gIGNvbnN0IGxvY2F0aW9uID0gYXdhaXQgaWZhY2UuZ2V0T0F1dGhVcmwoe1xuICAgIHByb3ZpZGVyOiBvcHRpb25zLnByb3ZpZGVyLFxuICAgIHJlZGlyZWN0VXJsOiBjb25zdHJ1Y3RSZWRpcmVjdFVybChvcHRpb25zLnJlZGlyZWN0VXJsLCBcInJlZGlyZWN0VXJsXCIpLFxuICAgIGVycm9yUmVkaXJlY3RVcmw6IGNvbnN0cnVjdFJlZGlyZWN0VXJsKG9wdGlvbnMuZXJyb3JSZWRpcmVjdFVybCwgXCJlcnJvclJlZGlyZWN0VXJsXCIpLFxuICAgIGFmdGVyQ2FsbGJhY2tSZWRpcmVjdFVybDogY29uc3RydWN0UmVkaXJlY3RVcmwod2luZG93LmxvY2F0aW9uLmhyZWYsIFwiYWZ0ZXJDYWxsYmFja1JlZGlyZWN0VXJsXCIpLFxuICAgIGNvZGVDaGFsbGVuZ2UsXG4gICAgc3RhdGUsXG4gICAgdHlwZTogXCJsaW5rXCIsXG4gICAgc2Vzc2lvbixcbiAgICBwcm92aWRlclNjb3BlOiBvcHRpb25zLnByb3ZpZGVyU2NvcGVcbiAgfSk7XG4gIHdpbmRvdy5sb2NhdGlvbi5hc3NpZ24obG9jYXRpb24pO1xuICBhd2FpdCBuZXZlclJlc29sdmUoKTtcbn1cbmZ1bmN0aW9uIGNvbnN1bWVPQXV0aENhbGxiYWNrUXVlcnlQYXJhbXMoKSB7XG4gIGNvbnN0IHJlcXVpcmVkUGFyYW1zID0gW1wiY29kZVwiLCBcInN0YXRlXCJdO1xuICBjb25zdCBvcmlnaW5hbFVybCA9IG5ldyBVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuICBmb3IgKGNvbnN0IHBhcmFtIG9mIHJlcXVpcmVkUGFyYW1zKSB7XG4gICAgaWYgKCFvcmlnaW5hbFVybC5zZWFyY2hQYXJhbXMuaGFzKHBhcmFtKSkge1xuICAgICAgY29uc29sZS53YXJuKG5ldyBFcnJvcihgTWlzc2luZyByZXF1aXJlZCBxdWVyeSBwYXJhbWV0ZXIgb24gT0F1dGggY2FsbGJhY2s6ICR7cGFyYW19LiBNYXliZSB5b3Ugb3BlbmVkIG9yIHJlbG9hZGVkIHRoZSBvYXV0aC1jYWxsYmFjayBwYWdlIGZyb20geW91ciBoaXN0b3J5P2ApKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuICBjb25zdCBleHBlY3RlZFN0YXRlID0gb3JpZ2luYWxVcmwuc2VhcmNoUGFyYW1zLmdldChcInN0YXRlXCIpID8/IHRocm93RXJyKFwiVGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuOyBpc24ndCBzdGF0ZSByZXF1aXJlZCBhYm92ZT9cIik7XG4gIGNvbnN0IGNvb2tpZVJlc3VsdCA9IGNvbnN1bWVWZXJpZmllckFuZFN0YXRlQ29va2llKGV4cGVjdGVkU3RhdGUpO1xuICBpZiAoIWNvb2tpZVJlc3VsdCkge1xuICAgIGNvbnNvbGUud2FybihkZWluZGVudGBcbiAgICAgIFN0YWNrIGZvdW5kIGFuIG91dGVyIE9BdXRoIGNhbGxiYWNrIHN0YXRlIGluIHRoZSBxdWVyeSBwYXJhbWV0ZXJzLCBidXQgbm90IGluIGNvb2tpZXMuXG4gICAgICBcbiAgICAgIFRoaXMgY291bGQgaGF2ZSBtdWx0aXBsZSByZWFzb25zOlxuICAgICAgICAtIFRoZSBjb29raWUgZXhwaXJlZCwgYmVjYXVzZSB0aGUgT0F1dGggZmxvdyB0b29rIHRvbyBsb25nLlxuICAgICAgICAtIFRoZSB1c2VyJ3MgYnJvd3NlciBkZWxldGVkIHRoZSBjb29raWUsIGVpdGhlciBtYW51YWxseSBvciBiZWNhdXNlIG9mIGEgdmVyeSBzdHJpY3QgY29va2llIHBvbGljeS5cbiAgICAgICAgLSBUaGUgY29va2llIHdhcyBhbHJlYWR5IGNvbnN1bWVkIGJ5IHRoaXMgcGFnZSwgYW5kIHRoZSB1c2VyIGFscmVhZHkgbG9nZ2VkIGluLlxuICAgICAgICAtIFlvdSBhcmUgdXNpbmcgYW5vdGhlciBPQXV0aCBjbGllbnQgbGlicmFyeSB3aXRoIHRoZSBzYW1lIGNhbGxiYWNrIFVSTCBhcyBTdGFjay5cbiAgICAgICAgLSBUaGUgdXNlciBvcGVuZWQgdGhlIE9BdXRoIGNhbGxiYWNrIHBhZ2UgZnJvbSB0aGVpciBoaXN0b3J5LlxuXG4gICAgICBFaXRoZXIgd2F5LCBpdCBpcyBwcm9iYWJseSBzYWZlIHRvIGlnbm9yZSB0aGlzIHdhcm5pbmcgdW5sZXNzIHlvdSBhcmUgZGVidWdnaW5nIGFuIE9BdXRoIGlzc3VlLlxuICAgIGApO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IG5ld1VybCA9IG5ldyBVUkwob3JpZ2luYWxVcmwpO1xuICBmb3IgKGNvbnN0IHBhcmFtIG9mIHJlcXVpcmVkUGFyYW1zKSB7XG4gICAgbmV3VXJsLnNlYXJjaFBhcmFtcy5kZWxldGUocGFyYW0pO1xuICB9XG4gIHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZSh7fSwgXCJcIiwgbmV3VXJsLnRvU3RyaW5nKCkpO1xuICByZXR1cm4ge1xuICAgIG9yaWdpbmFsVXJsLFxuICAgIGNvZGVWZXJpZmllcjogY29va2llUmVzdWx0LmNvZGVWZXJpZmllcixcbiAgICBzdGF0ZTogZXhwZWN0ZWRTdGF0ZVxuICB9O1xufVxuYXN5bmMgZnVuY3Rpb24gY2FsbE9BdXRoQ2FsbGJhY2soaWZhY2UsIHJlZGlyZWN0VXJsKSB7XG4gIGNvbnN0IGNvbnN1bWVkID0gY29uc3VtZU9BdXRoQ2FsbGJhY2tRdWVyeVBhcmFtcygpO1xuICBpZiAoIWNvbnN1bWVkKSByZXR1cm4gUmVzdWx0Lm9rKHZvaWQgMCk7XG4gIHRyeSB7XG4gICAgcmV0dXJuIFJlc3VsdC5vayhhd2FpdCBpZmFjZS5jYWxsT0F1dGhDYWxsYmFjayh7XG4gICAgICBvYXV0aFBhcmFtczogY29uc3VtZWQub3JpZ2luYWxVcmwuc2VhcmNoUGFyYW1zLFxuICAgICAgcmVkaXJlY3RVcmk6IGNvbnN0cnVjdFJlZGlyZWN0VXJsKHJlZGlyZWN0VXJsLCBcInJlZGlyZWN0VXJpXCIpLFxuICAgICAgY29kZVZlcmlmaWVyOiBjb25zdW1lZC5jb2RlVmVyaWZpZXIsXG4gICAgICBzdGF0ZTogY29uc3VtZWQuc3RhdGVcbiAgICB9KSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoS25vd25FcnJvci5pc0tub3duRXJyb3IoZSkpIHtcbiAgICAgIHRocm93IGU7XG4gICAgfVxuICAgIHRocm93IG5ldyBTdGFja0Fzc2VydGlvbkVycm9yKFwiRXJyb3Igc2lnbmluZyBpbiBkdXJpbmcgT0F1dGggY2FsbGJhY2suIFBsZWFzZSB0cnkgYWdhaW4uXCIsIHsgY2F1c2U6IGUgfSk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIGFkZE5ld09BdXRoUHJvdmlkZXJPclNjb3BlLFxuICBjYWxsT0F1dGhDYWxsYmFjayxcbiAgc2lnbkluV2l0aE9BdXRoXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js":
/*!***************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/cookie.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   consumeVerifierAndStateCookie: () => (/* binding */ consumeVerifierAndStateCookie),\n/* harmony export */   createBrowserCookieHelper: () => (/* binding */ createBrowserCookieHelper),\n/* harmony export */   createCookieHelper: () => (/* binding */ createCookieHelper),\n/* harmony export */   createPlaceholderCookieHelper: () => (/* binding */ createPlaceholderCookieHelper),\n/* harmony export */   deleteCookie: () => (/* binding */ deleteCookie),\n/* harmony export */   deleteCookieClient: () => (/* binding */ deleteCookieClient),\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   getCookieClient: () => (/* binding */ getCookieClient),\n/* harmony export */   saveVerifierAndState: () => (/* binding */ saveVerifierAndState),\n/* harmony export */   setCookie: () => (/* binding */ setCookie),\n/* harmony export */   setCookieClient: () => (/* binding */ setCookieClient),\n/* harmony export */   setOrDeleteCookie: () => (/* binding */ setOrDeleteCookie),\n/* harmony export */   setOrDeleteCookieClient: () => (/* binding */ setOrDeleteCookieClient)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-sc/force-react-server */ \"(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.react-server.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/env */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/env.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var oauth4webapi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! oauth4webapi */ \"(app-pages-browser)/./node_modules/oauth4webapi/build/index.js\");\n// src/lib/cookie.ts\n\n\n\n\n\nfunction ensureClient() {\n  if (!(0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n    throw new Error(\"cookieClient functions can only be called in a browser environment, yet window is undefined\");\n  }\n}\nasync function createPlaceholderCookieHelper() {\n  function throwError() {\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Throwing cookie helper is just a placeholder. This should never be called\");\n  }\n  return {\n    get: throwError,\n    set: throwError,\n    setOrDelete: throwError,\n    delete: throwError\n  };\n}\nasync function createCookieHelper() {\n  if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n    return createBrowserCookieHelper();\n  } else {\n    return createNextCookieHelper(\n      await (0,_stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__.cookies)(),\n      await (0,_stackframe_stack_sc_force_react_server__WEBPACK_IMPORTED_MODULE_0__.headers)()\n    );\n  }\n}\nfunction createBrowserCookieHelper() {\n  return {\n    get: getCookieClient,\n    set: setCookieClient,\n    setOrDelete: setOrDeleteCookieClient,\n    delete: deleteCookieClient\n  };\n}\nfunction handleCookieError(e, options) {\n  if (e instanceof Error && e.message.includes(\"Cookies can only be modified in\")) {\n    if (options.noOpIfServerComponent) {\n    } else {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Attempted to set cookie in server component. Pass { noOpIfServerComponent: true } in the options of Stack's cookie functions if this is intentional and you want to ignore this error. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options\");\n    }\n  } else {\n    throw e;\n  }\n}\nfunction createNextCookieHelper(rscCookiesAwaited, rscHeadersAwaited) {\n  const cookieHelper = {\n    get: (name) => {\n      try {\n        rscCookiesAwaited.set(\"stack-is-https\", \"true\", { secure: true });\n      } catch (e) {\n        if (typeof e === \"object\" && e !== null && \"message\" in e && typeof e.message === \"string\" && e.message.includes(\"Cookies can only be modified in a Server Action or Route Handler\")) {\n        } else {\n          throw e;\n        }\n      }\n      return rscCookiesAwaited.get(name)?.value ?? null;\n    },\n    set: (name, value, options) => {\n      let isSecureCookie = !!rscCookiesAwaited.get(\"stack-is-https\");\n      if (rscHeadersAwaited.get(\"x-forwarded-proto\") === \"https\") {\n        isSecureCookie = true;\n      }\n      try {\n        rscCookiesAwaited.set(name, value, {\n          secure: isSecureCookie,\n          maxAge: options.maxAge\n        });\n      } catch (e) {\n        handleCookieError(e, options);\n      }\n    },\n    setOrDelete(name, value, options = {}) {\n      if (value === null) {\n        this.delete(name, options);\n      } else {\n        this.set(name, value, options);\n      }\n    },\n    delete(name, options = {}) {\n      try {\n        rscCookiesAwaited.delete(name);\n      } catch (e) {\n        handleCookieError(e, options);\n      }\n    }\n  };\n  return cookieHelper;\n}\nfunction getCookieClient(name) {\n  ensureClient();\n  js_cookie__WEBPACK_IMPORTED_MODULE_3__[\"default\"].set(\"stack-is-https\", \"true\", { secure: true });\n  return js_cookie__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(name) ?? null;\n}\nasync function getCookie(name) {\n  const cookieHelper = await createCookieHelper();\n  return cookieHelper.get(name);\n}\nfunction setOrDeleteCookieClient(name, value, options = {}) {\n  ensureClient();\n  if (value === null) {\n    deleteCookieClient(name, options);\n  } else {\n    setCookieClient(name, value, options);\n  }\n}\nasync function setOrDeleteCookie(name, value, options = {}) {\n  const cookieHelper = await createCookieHelper();\n  cookieHelper.setOrDelete(name, value, options);\n}\nfunction deleteCookieClient(name, options = {}) {\n  ensureClient();\n  js_cookie__WEBPACK_IMPORTED_MODULE_3__[\"default\"].remove(name);\n}\nasync function deleteCookie(name, options = {}) {\n  const cookieHelper = await createCookieHelper();\n  cookieHelper.delete(name, options);\n}\nfunction setCookieClient(name, value, options = {}) {\n  ensureClient();\n  js_cookie__WEBPACK_IMPORTED_MODULE_3__[\"default\"].set(name, value, {\n    expires: options.maxAge === void 0 ? void 0 : new Date(Date.now() + options.maxAge * 1e3)\n  });\n}\nasync function setCookie(name, value, options = {}) {\n  const cookieHelper = await createCookieHelper();\n  cookieHelper.set(name, value, options);\n}\nasync function saveVerifierAndState() {\n  const codeVerifier = (0,oauth4webapi__WEBPACK_IMPORTED_MODULE_4__.generateRandomCodeVerifier)();\n  const codeChallenge = await (0,oauth4webapi__WEBPACK_IMPORTED_MODULE_4__.calculatePKCECodeChallenge)(codeVerifier);\n  const state = (0,oauth4webapi__WEBPACK_IMPORTED_MODULE_4__.generateRandomState)();\n  await setCookie(\"stack-oauth-outer-\" + state, codeVerifier, { maxAge: 60 * 60 });\n  return {\n    codeChallenge,\n    state\n  };\n}\nfunction consumeVerifierAndStateCookie(state) {\n  ensureClient();\n  const cookieName = \"stack-oauth-outer-\" + state;\n  const codeVerifier = getCookieClient(cookieName);\n  if (!codeVerifier) {\n    return null;\n  }\n  deleteCookieClient(cookieName);\n  return {\n    codeVerifier\n  };\n}\n\n//# sourceMappingURL=cookie.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/hooks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useStackApp: () => (/* binding */ useStackApp),\n/* harmony export */   useUser: () => (/* binding */ useUser)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _providers_stack_provider_client_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../providers/stack-provider-client.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js\");\n// src/lib/hooks.tsx\n\n\nfunction useUser(options = {}) {\n  const stackApp = useStackApp(options);\n  if (options.projectIdMustMatch && stackApp.projectId !== options.projectIdMustMatch) {\n    throw new Error(\"Unexpected project ID in useStackApp: \" + stackApp.projectId);\n  }\n  if (options.projectIdMustMatch === \"internal\") {\n    return stackApp.useUser(options);\n  } else {\n    return stackApp.useUser(options);\n  }\n}\nfunction useStackApp(options = {}) {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_providers_stack_provider_client_js__WEBPACK_IMPORTED_MODULE_1__.StackContext);\n  if (context === null) {\n    throw new Error(\"useStackApp must be used within a StackProvider\");\n  }\n  const stackApp = context.app;\n  if (options.projectIdMustMatch && stackApp.projectId !== options.projectIdMustMatch) {\n    throw new Error(\"Unexpected project ID in useStackApp: \" + stackApp.projectId);\n  }\n  return stackApp;\n}\n\n//# sourceMappingURL=hooks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvaG9va3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNtQztBQUNrQztBQUNyRSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyxrQkFBa0IsaURBQVUsQ0FBQyw2RUFBWTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcaG9va3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9ob29rcy50c3hcbmltcG9ydCB7IHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFN0YWNrQ29udGV4dCB9IGZyb20gXCIuLi9wcm92aWRlcnMvc3RhY2stcHJvdmlkZXItY2xpZW50LmpzXCI7XG5mdW5jdGlvbiB1c2VVc2VyKG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBzdGFja0FwcCA9IHVzZVN0YWNrQXBwKG9wdGlvbnMpO1xuICBpZiAob3B0aW9ucy5wcm9qZWN0SWRNdXN0TWF0Y2ggJiYgc3RhY2tBcHAucHJvamVjdElkICE9PSBvcHRpb25zLnByb2plY3RJZE11c3RNYXRjaCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlVuZXhwZWN0ZWQgcHJvamVjdCBJRCBpbiB1c2VTdGFja0FwcDogXCIgKyBzdGFja0FwcC5wcm9qZWN0SWQpO1xuICB9XG4gIGlmIChvcHRpb25zLnByb2plY3RJZE11c3RNYXRjaCA9PT0gXCJpbnRlcm5hbFwiKSB7XG4gICAgcmV0dXJuIHN0YWNrQXBwLnVzZVVzZXIob3B0aW9ucyk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHN0YWNrQXBwLnVzZVVzZXIob3B0aW9ucyk7XG4gIH1cbn1cbmZ1bmN0aW9uIHVzZVN0YWNrQXBwKG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBjb250ZXh0ID0gdXNlQ29udGV4dChTdGFja0NvbnRleHQpO1xuICBpZiAoY29udGV4dCA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInVzZVN0YWNrQXBwIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBTdGFja1Byb3ZpZGVyXCIpO1xuICB9XG4gIGNvbnN0IHN0YWNrQXBwID0gY29udGV4dC5hcHA7XG4gIGlmIChvcHRpb25zLnByb2plY3RJZE11c3RNYXRjaCAmJiBzdGFja0FwcC5wcm9qZWN0SWQgIT09IG9wdGlvbnMucHJvamVjdElkTXVzdE1hdGNoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVW5leHBlY3RlZCBwcm9qZWN0IElEIGluIHVzZVN0YWNrQXBwOiBcIiArIHN0YWNrQXBwLnByb2plY3RJZCk7XG4gIH1cbiAgcmV0dXJuIHN0YWNrQXBwO1xufVxuZXhwb3J0IHtcbiAgdXNlU3RhY2tBcHAsXG4gIHVzZVVzZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob29rcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiKeyCreationOptionsToCrud: () => (/* binding */ apiKeyCreationOptionsToCrud),\n/* harmony export */   apiKeyUpdateOptionsToCrud: () => (/* binding */ apiKeyUpdateOptionsToCrud)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n// src/lib/stack-app/api-keys/index.ts\n\nasync function apiKeyCreationOptionsToCrud(type, userIdOrTeamId, options) {\n  return {\n    description: options.description,\n    expires_at_millis: options.expiresAt == null ? options.expiresAt : options.expiresAt.getTime(),\n    is_public: options.isPublic,\n    ...type === \"user\" ? { user_id: userIdOrTeamId } : { team_id: userIdOrTeamId }\n  };\n}\nasync function apiKeyUpdateOptionsToCrud(type, options) {\n  return (0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_0__.filterUndefined)({\n    description: options.description,\n    expires_at_millis: options.expiresAt == null ? options.expiresAt : options.expiresAt.getTime(),\n    revoked: options.revoked\n  });\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwaS1rZXlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQzhFO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMEJBQTBCLElBQUk7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsU0FBUyw0RkFBZTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFJRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxhcGkta2V5c1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9zdGFjay1hcHAvYXBpLWtleXMvaW5kZXgudHNcbmltcG9ydCB7IGZpbHRlclVuZGVmaW5lZCB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9vYmplY3RzXCI7XG5hc3luYyBmdW5jdGlvbiBhcGlLZXlDcmVhdGlvbk9wdGlvbnNUb0NydWQodHlwZSwgdXNlcklkT3JUZWFtSWQsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkZXNjcmlwdGlvbjogb3B0aW9ucy5kZXNjcmlwdGlvbixcbiAgICBleHBpcmVzX2F0X21pbGxpczogb3B0aW9ucy5leHBpcmVzQXQgPT0gbnVsbCA/IG9wdGlvbnMuZXhwaXJlc0F0IDogb3B0aW9ucy5leHBpcmVzQXQuZ2V0VGltZSgpLFxuICAgIGlzX3B1YmxpYzogb3B0aW9ucy5pc1B1YmxpYyxcbiAgICAuLi50eXBlID09PSBcInVzZXJcIiA/IHsgdXNlcl9pZDogdXNlcklkT3JUZWFtSWQgfSA6IHsgdGVhbV9pZDogdXNlcklkT3JUZWFtSWQgfVxuICB9O1xufVxuYXN5bmMgZnVuY3Rpb24gYXBpS2V5VXBkYXRlT3B0aW9uc1RvQ3J1ZCh0eXBlLCBvcHRpb25zKSB7XG4gIHJldHVybiBmaWx0ZXJVbmRlZmluZWQoe1xuICAgIGRlc2NyaXB0aW9uOiBvcHRpb25zLmRlc2NyaXB0aW9uLFxuICAgIGV4cGlyZXNfYXRfbWlsbGlzOiBvcHRpb25zLmV4cGlyZXNBdCA9PSBudWxsID8gb3B0aW9ucy5leHBpcmVzQXQgOiBvcHRpb25zLmV4cGlyZXNBdC5nZXRUaW1lKCksXG4gICAgcmV2b2tlZDogb3B0aW9ucy5yZXZva2VkXG4gIH0pO1xufVxuZXhwb3J0IHtcbiAgYXBpS2V5Q3JlYXRpb25PcHRpb25zVG9DcnVkLFxuICBhcGlLZXlVcGRhdGVPcHRpb25zVG9DcnVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/admin-app-impl.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/admin-app-impl.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _StackAdminAppImplIncomplete: () => (/* binding */ _StackAdminAppImplIncomplete)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/helpers/production-mode */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/helpers/production-mode.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../common.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js\");\n/* harmony import */ var _internal_api_keys_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../internal-api-keys/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/internal-api-keys/index.js\");\n/* harmony import */ var _permissions_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../permissions/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/permissions/index.js\");\n/* harmony import */ var _projects_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../projects/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js\");\n/* harmony import */ var _server_app_impl_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./server-app-impl.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js\");\n// src/lib/stack-app/apps/implementations/admin-app-impl.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _StackAdminAppImplIncomplete = class extends _server_app_impl_js__WEBPACK_IMPORTED_MODULE_6__._StackServerAppImplIncomplete {\n  constructor(options) {\n    super({\n      interface: new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.StackAdminInterface({\n        getBaseUrl: () => (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getBaseUrl)(options.baseUrl),\n        projectId: options.projectId ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultProjectId)(),\n        extraRequestHeaders: options.extraRequestHeaders ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultExtraRequestHeaders)(),\n        clientVersion: _common_js__WEBPACK_IMPORTED_MODULE_7__.clientVersion,\n        ...\"projectOwnerSession\" in options ? {\n          projectOwnerSession: options.projectOwnerSession\n        } : {\n          publishableClientKey: options.publishableClientKey ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultPublishableClientKey)(),\n          secretServerKey: options.secretServerKey ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultSecretServerKey)(),\n          superSecretAdminKey: options.superSecretAdminKey ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultSuperSecretAdminKey)()\n        }\n      }),\n      baseUrl: options.baseUrl,\n      extraRequestHeaders: options.extraRequestHeaders,\n      projectId: options.projectId,\n      tokenStore: options.tokenStore,\n      urls: options.urls,\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn,\n      redirectMethod: options.redirectMethod\n    });\n    this._adminProjectCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.getProject();\n    });\n    this._internalApiKeysCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      const res = await this._interface.listInternalApiKeys();\n      return res;\n    });\n    this._adminEmailThemeCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([id]) => {\n      return await this._interface.getEmailTheme(id);\n    });\n    this._adminEmailThemesCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.listEmailThemes();\n    });\n    this._adminEmailTemplatesCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.listInternalEmailTemplates();\n    });\n    this._adminEmailDraftsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.listInternalEmailDrafts();\n    });\n    this._adminTeamPermissionDefinitionsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.listTeamPermissionDefinitions();\n    });\n    this._adminProjectPermissionDefinitionsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.listProjectPermissionDefinitions();\n    });\n    this._svixTokenCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.getSvixToken();\n    });\n    this._metricsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([includeAnonymous]) => {\n      return await this._interface.getMetrics(includeAnonymous);\n    });\n    this._emailPreviewCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([themeId, themeTsxSource, templateId, templateTsxSource]) => {\n      return await this._interface.renderEmailPreview({ themeId, themeTsxSource, templateId, templateTsxSource });\n    });\n    this._configOverridesCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      return await this._interface.getConfig();\n    });\n    this._stripeAccountInfoCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async () => {\n      try {\n        return await this._interface.getStripeAccountInfo();\n      } catch (error) {\n        if (error?.status === 404) {\n          return null;\n        }\n        throw error;\n      }\n    });\n    this._transactionsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([cursor, limit, type, customerType]) => {\n      return await this._interface.listTransactions({ cursor, limit, type, customerType });\n    });\n  }\n  _adminConfigFromCrud(data) {\n    return JSON.parse(data.config_string);\n  }\n  _adminOwnedProjectFromCrud(data, onRefresh) {\n    if (this._tokenStoreInit !== null) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Owned apps must always have tokenStore === null \\u2014 did you not create this project with app._createOwnedApp()?\");\n    }\n    return {\n      ...this._adminProjectFromCrud(data, onRefresh),\n      app: this\n    };\n  }\n  _adminProjectFromCrud(data, onRefresh) {\n    if (data.id !== this.projectId) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(`The project ID of the provided project JSON (${data.id}) does not match the project ID of the app (${this.projectId})!`);\n    }\n    const app = this;\n    return {\n      id: data.id,\n      displayName: data.display_name,\n      description: data.description,\n      createdAt: new Date(data.created_at_millis),\n      isProductionMode: data.is_production_mode,\n      ownerTeamId: data.owner_team_id,\n      logoUrl: data.logo_url,\n      fullLogoUrl: data.full_logo_url,\n      config: {\n        signUpEnabled: data.config.sign_up_enabled,\n        credentialEnabled: data.config.credential_enabled,\n        magicLinkEnabled: data.config.magic_link_enabled,\n        passkeyEnabled: data.config.passkey_enabled,\n        clientTeamCreationEnabled: data.config.client_team_creation_enabled,\n        clientUserDeletionEnabled: data.config.client_user_deletion_enabled,\n        allowLocalhost: data.config.allow_localhost,\n        oauthAccountMergeStrategy: data.config.oauth_account_merge_strategy,\n        allowUserApiKeys: data.config.allow_user_api_keys,\n        allowTeamApiKeys: data.config.allow_team_api_keys,\n        oauthProviders: data.config.oauth_providers.map((p) => p.type === \"shared\" ? {\n          id: p.id,\n          type: \"shared\"\n        } : {\n          id: p.id,\n          type: \"standard\",\n          clientId: p.client_id ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Client ID is missing\"),\n          clientSecret: p.client_secret ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Client secret is missing\"),\n          facebookConfigId: p.facebook_config_id,\n          microsoftTenantId: p.microsoft_tenant_id\n        }),\n        emailConfig: data.config.email_config.type === \"shared\" ? {\n          type: \"shared\"\n        } : {\n          type: \"standard\",\n          host: data.config.email_config.host ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email host is missing\"),\n          port: data.config.email_config.port ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email port is missing\"),\n          username: data.config.email_config.username ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email username is missing\"),\n          password: data.config.email_config.password ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email password is missing\"),\n          senderName: data.config.email_config.sender_name ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email sender name is missing\"),\n          senderEmail: data.config.email_config.sender_email ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email sender email is missing\")\n        },\n        emailTheme: data.config.email_theme,\n        domains: data.config.domains.map((d) => ({\n          domain: d.domain,\n          handlerPath: d.handler_path\n        })),\n        createTeamOnSignUp: data.config.create_team_on_sign_up,\n        teamCreatorDefaultPermissions: data.config.team_creator_default_permissions,\n        teamMemberDefaultPermissions: data.config.team_member_default_permissions,\n        userDefaultPermissions: data.config.user_default_permissions\n      },\n      async getConfig() {\n        return app._adminConfigFromCrud(await app._interface.getConfig());\n      },\n      useConfig() {\n        const config = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._configOverridesCache, [], \"useConfig()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => app._adminConfigFromCrud(config), [config]);\n      },\n      async updateConfig(configOverride) {\n        await app._interface.updateConfig({ configOverride });\n        await app._configOverridesCache.refresh([]);\n      },\n      async update(update) {\n        const updateOptions = (0,_projects_index_js__WEBPACK_IMPORTED_MODULE_8__.adminProjectUpdateOptionsToCrud)(update);\n        await app._interface.updateProject(updateOptions);\n        await onRefresh();\n      },\n      async delete() {\n        await app._interface.deleteProject();\n      },\n      async transfer(user, newTeamId) {\n        await app._interface.transferProject(user._internalSession, newTeamId);\n        await onRefresh();\n      },\n      async getProductionModeErrors() {\n        return (0,_stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_1__.getProductionModeErrors)(data);\n      },\n      useProductionModeErrors() {\n        return (0,_stackframe_stack_shared_dist_helpers_production_mode__WEBPACK_IMPORTED_MODULE_1__.getProductionModeErrors)(data);\n      }\n    };\n  }\n  _adminEmailTemplateFromCrud(data) {\n    return {\n      type: data.type,\n      subject: data.subject,\n      content: data.content,\n      isDefault: data.is_default\n    };\n  }\n  async getProject() {\n    return this._adminProjectFromCrud(\n      _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminProjectCache.getOrWait([], \"write-only\")),\n      () => this._refreshProject()\n    );\n  }\n  useProject() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminProjectCache, [], \"useProjectAdmin()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => this._adminProjectFromCrud(\n      crud,\n      () => this._refreshProject()\n    ), [crud]);\n  }\n  _createInternalApiKeyBaseFromCrud(data) {\n    const app = this;\n    return {\n      id: data.id,\n      description: data.description,\n      expiresAt: new Date(data.expires_at_millis),\n      manuallyRevokedAt: data.manually_revoked_at_millis ? new Date(data.manually_revoked_at_millis) : null,\n      createdAt: new Date(data.created_at_millis),\n      isValid() {\n        return this.whyInvalid() === null;\n      },\n      whyInvalid() {\n        if (this.expiresAt.getTime() < Date.now()) return \"expired\";\n        if (this.manuallyRevokedAt) return \"manually-revoked\";\n        return null;\n      },\n      async revoke() {\n        const res = await app._interface.revokeInternalApiKeyById(data.id);\n        await app._refreshInternalApiKeys();\n        return res;\n      }\n    };\n  }\n  _createInternalApiKeyFromCrud(data) {\n    return {\n      ...this._createInternalApiKeyBaseFromCrud(data),\n      publishableClientKey: data.publishable_client_key ? { lastFour: data.publishable_client_key.last_four } : null,\n      secretServerKey: data.secret_server_key ? { lastFour: data.secret_server_key.last_four } : null,\n      superSecretAdminKey: data.super_secret_admin_key ? { lastFour: data.super_secret_admin_key.last_four } : null\n    };\n  }\n  _createInternalApiKeyFirstViewFromCrud(data) {\n    return {\n      ...this._createInternalApiKeyBaseFromCrud(data),\n      publishableClientKey: data.publishable_client_key,\n      secretServerKey: data.secret_server_key,\n      superSecretAdminKey: data.super_secret_admin_key\n    };\n  }\n  async listInternalApiKeys() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._internalApiKeysCache.getOrWait([], \"write-only\"));\n    return crud.map((j) => this._createInternalApiKeyFromCrud(j));\n  }\n  useInternalApiKeys() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._internalApiKeysCache, [], \"useInternalApiKeys()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((j) => this._createInternalApiKeyFromCrud(j));\n    }, [crud]);\n  }\n  async createInternalApiKey(options) {\n    const crud = await this._interface.createInternalApiKey((0,_internal_api_keys_index_js__WEBPACK_IMPORTED_MODULE_9__.internalApiKeyCreateOptionsToCrud)(options));\n    await this._refreshInternalApiKeys();\n    return this._createInternalApiKeyFirstViewFromCrud(crud);\n  }\n  useEmailThemes() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminEmailThemesCache, [], \"useEmailThemes()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((theme) => ({\n        id: theme.id,\n        displayName: theme.display_name\n      }));\n    }, [crud]);\n  }\n  useEmailTemplates() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminEmailTemplatesCache, [], \"useEmailTemplates()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((template) => ({\n        id: template.id,\n        displayName: template.display_name,\n        themeId: template.theme_id,\n        tsxSource: template.tsx_source\n      }));\n    }, [crud]);\n  }\n  useEmailDrafts() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminEmailDraftsCache, [], \"useEmailDrafts()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((draft) => ({\n        id: draft.id,\n        displayName: draft.display_name,\n        themeId: draft.theme_id,\n        tsxSource: draft.tsx_source,\n        sentAt: draft.sent_at_millis ? new Date(draft.sent_at_millis) : null\n      }));\n    }, [crud]);\n  }\n  async listEmailThemes() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminEmailThemesCache.getOrWait([], \"write-only\"));\n    return crud.map((theme) => ({\n      id: theme.id,\n      displayName: theme.display_name\n    }));\n  }\n  async listEmailTemplates() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminEmailTemplatesCache.getOrWait([], \"write-only\"));\n    return crud.map((template) => ({\n      id: template.id,\n      displayName: template.display_name,\n      themeId: template.theme_id,\n      tsxSource: template.tsx_source\n    }));\n  }\n  async listEmailDrafts() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminEmailDraftsCache.getOrWait([], \"write-only\"));\n    return crud.map((draft) => ({\n      id: draft.id,\n      displayName: draft.display_name,\n      themeId: draft.theme_id,\n      tsxSource: draft.tsx_source,\n      sentAt: draft.sent_at_millis ? new Date(draft.sent_at_millis) : null\n    }));\n  }\n  async createTeamPermissionDefinition(data) {\n    const crud = await this._interface.createTeamPermissionDefinition((0,_permissions_index_js__WEBPACK_IMPORTED_MODULE_10__.adminTeamPermissionDefinitionCreateOptionsToCrud)(data));\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n    return this._serverTeamPermissionDefinitionFromCrud(crud);\n  }\n  async updateTeamPermissionDefinition(permissionId, data) {\n    await this._interface.updateTeamPermissionDefinition(permissionId, (0,_permissions_index_js__WEBPACK_IMPORTED_MODULE_10__.adminTeamPermissionDefinitionUpdateOptionsToCrud)(data));\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n  }\n  async deleteTeamPermissionDefinition(permissionId) {\n    await this._interface.deleteTeamPermissionDefinition(permissionId);\n    await this._adminTeamPermissionDefinitionsCache.refresh([]);\n  }\n  async listTeamPermissionDefinitions() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminTeamPermissionDefinitionsCache.getOrWait([], \"write-only\"));\n    return crud.map((p) => this._serverTeamPermissionDefinitionFromCrud(p));\n  }\n  useTeamPermissionDefinitions() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminTeamPermissionDefinitionsCache, [], \"usePermissions()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((p) => this._serverTeamPermissionDefinitionFromCrud(p));\n    }, [crud]);\n  }\n  async createProjectPermissionDefinition(data) {\n    const crud = await this._interface.createProjectPermissionDefinition((0,_permissions_index_js__WEBPACK_IMPORTED_MODULE_10__.adminProjectPermissionDefinitionCreateOptionsToCrud)(data));\n    await this._adminProjectPermissionDefinitionsCache.refresh([]);\n    return this._serverProjectPermissionDefinitionFromCrud(crud);\n  }\n  async updateProjectPermissionDefinition(permissionId, data) {\n    await this._interface.updateProjectPermissionDefinition(permissionId, (0,_permissions_index_js__WEBPACK_IMPORTED_MODULE_10__.adminProjectPermissionDefinitionUpdateOptionsToCrud)(data));\n    await this._adminProjectPermissionDefinitionsCache.refresh([]);\n  }\n  async deleteProjectPermissionDefinition(permissionId) {\n    await this._interface.deleteProjectPermissionDefinition(permissionId);\n    await this._adminProjectPermissionDefinitionsCache.refresh([]);\n  }\n  async listProjectPermissionDefinitions() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._adminProjectPermissionDefinitionsCache.getOrWait([], \"write-only\"));\n    return crud.map((p) => this._serverProjectPermissionDefinitionFromCrud(p));\n  }\n  useProjectPermissionDefinitions() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminProjectPermissionDefinitionsCache, [], \"useProjectPermissions()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud.map((p) => this._serverProjectPermissionDefinitionFromCrud(p));\n    }, [crud]);\n  }\n  useSvixToken() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._svixTokenCache, [], \"useSvixToken()\");\n    return crud.token;\n  }\n  async _refreshProject() {\n    await Promise.all([\n      super._refreshProject(),\n      this._adminProjectCache.refresh([])\n    ]);\n  }\n  async _refreshInternalApiKeys() {\n    await this._internalApiKeysCache.refresh([]);\n  }\n  get [_common_js__WEBPACK_IMPORTED_MODULE_11__.stackAppInternalsSymbol]() {\n    return {\n      ...super[_common_js__WEBPACK_IMPORTED_MODULE_11__.stackAppInternalsSymbol],\n      useMetrics: (includeAnonymous = false) => {\n        return (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._metricsCache, [includeAnonymous], \"useMetrics()\");\n      }\n    };\n  }\n  async sendTestEmail(options) {\n    const response = await this._interface.sendTestEmail({\n      recipient_email: options.recipientEmail,\n      email_config: {\n        ...(0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_3__.pick)(options.emailConfig, [\"host\", \"port\", \"username\", \"password\"]),\n        sender_email: options.emailConfig.senderEmail,\n        sender_name: options.emailConfig.senderName\n      }\n    });\n    if (response.success) {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.error({ errorMessage: response.error_message ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(\"Email test error not specified\") });\n    }\n  }\n  async listSentEmails() {\n    const response = await this._interface.listSentEmails();\n    return response.items.map((email) => ({\n      id: email.id,\n      to: email.to ?? [],\n      subject: email.subject,\n      recipient: email.to?.[0] ?? \"\",\n      sentAt: new Date(email.sent_at_millis),\n      error: email.error\n    }));\n  }\n  async sendSignInInvitationEmail(email, callbackUrl) {\n    await this._interface.sendSignInInvitationEmail(email, callbackUrl);\n  }\n  async createEmailTemplate(displayName) {\n    const result = await this._interface.createEmailTemplate(displayName);\n    await this._adminEmailTemplatesCache.refresh([]);\n    return result;\n  }\n  async createEmailDraft(options) {\n    const result = await this._interface.createEmailDraft({\n      display_name: options.displayName,\n      theme_id: options.themeId,\n      tsx_source: options.tsxSource\n    });\n    await this._adminEmailDraftsCache.refresh([]);\n    return result;\n  }\n  async updateEmailDraft(id, data) {\n    await this._interface.updateEmailDraft(id, {\n      display_name: data.displayName,\n      theme_id: data.themeId,\n      tsx_source: data.tsxSource\n    });\n    await this._adminEmailDraftsCache.refresh([]);\n  }\n  async sendChatMessage(threadId, contextType, messages, abortSignal) {\n    return await this._interface.sendChatMessage(threadId, contextType, messages, abortSignal);\n  }\n  async saveChatMessage(threadId, message) {\n    await this._interface.saveChatMessage(threadId, message);\n  }\n  async listChatMessages(threadId) {\n    return await this._interface.listChatMessages(threadId);\n  }\n  async createEmailTheme(displayName) {\n    const result = await this._interface.createEmailTheme(displayName);\n    await this._adminEmailThemesCache.refresh([]);\n    return result;\n  }\n  async getEmailPreview(options) {\n    return (await this._interface.renderEmailPreview(options)).html;\n  }\n  useEmailPreview(options) {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._emailPreviewCache, [options.themeId, options.themeTsxSource, options.templateId, options.templateTsxSource], \"useEmailPreview()\");\n    return crud.html;\n  }\n  useEmailTheme(id) {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._adminEmailThemeCache, [id], \"useEmailTheme()\");\n    return {\n      displayName: crud.display_name,\n      tsxSource: crud.tsx_source\n    };\n  }\n  async updateEmailTheme(id, tsxSource) {\n    await this._interface.updateEmailTheme(id, tsxSource);\n  }\n  async updateEmailTemplate(id, tsxSource, themeId) {\n    const result = await this._interface.updateEmailTemplate(id, tsxSource, themeId);\n    await this._adminEmailTemplatesCache.refresh([]);\n    return { renderedHtml: result.rendered_html };\n  }\n  async setupPayments() {\n    return await this._interface.setupPayments();\n  }\n  async createStripeWidgetAccountSession() {\n    return await this._interface.createStripeWidgetAccountSession();\n  }\n  async createItemQuantityChange(options) {\n    await this._interface.updateItemQuantity(\n      { itemId: options.itemId, ...\"userId\" in options ? { userId: options.userId } : \"teamId\" in options ? { teamId: options.teamId } : { customCustomerId: options.customCustomerId } },\n      {\n        delta: options.quantity,\n        expires_at: options.expiresAt,\n        description: options.description\n      }\n    );\n  }\n  async testModePurchase(options) {\n    await this._interface.testModePurchase({ price_id: options.priceId, full_code: options.fullCode, quantity: options.quantity });\n  }\n  async listTransactions(params) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._transactionsCache.getOrWait([params.cursor, params.limit, params.type, params.customerType], \"write-only\"));\n    return crud;\n  }\n  useTransactions(params) {\n    const data = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._transactionsCache, [params.cursor, params.limit, params.type, params.customerType], \"useTransactions()\");\n    return data;\n  }\n  async getStripeAccountInfo() {\n    return await this._interface.getStripeAccountInfo();\n  }\n  useStripeAccountInfo() {\n    const data = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._stripeAccountInfoCache, [], \"useStripeAccountInfo()\");\n    return data;\n  }\n};\n\n//# sourceMappingURL=admin-app-impl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/admin-app-impl.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _StackClientAppImplIncomplete: () => (/* binding */ _StackClientAppImplIncomplete)\n/* harmony export */ });\n/* harmony import */ var _simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @simplewebauthn/browser */ \"(app-pages-browser)/./node_modules/@simplewebauthn/browser/dist/bundle/index.js\");\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_sessions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/sessions */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/sessions.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/compile-time */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/compile-time.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/env */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/env.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_maps__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/maps */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/maps.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/react */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/react.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/stores */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/strings */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/strings.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/urls */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/urls.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_uuids__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/uuids */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/uuids.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! cookie */ \"(app-pages-browser)/./node_modules/cookie/index.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _utils_url_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../../utils/url.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\");\n/* harmony import */ var _auth_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../auth.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/auth.js\");\n/* harmony import */ var _cookie_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../cookie.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/cookie.js\");\n/* harmony import */ var _api_keys_index_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../../api-keys/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../../common.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js\");\n/* harmony import */ var _contact_channels_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../contact-channels/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js\");\n/* harmony import */ var _projects_index_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../../projects/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js\");\n/* harmony import */ var _teams_index_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../teams/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js\");\n/* harmony import */ var _users_index_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../users/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./common.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js\");\n/* harmony import */ var _stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @stackframe/stack-sc */ \"(app-pages-browser)/./node_modules/@stackframe/stack-sc/dist/index.default.js\");\n// src/lib/stack-app/apps/implementations/client-app-impl.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar isReactServer2 = false;\nisReactServer2 = _stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_18__.isReactServer;\nvar NextNavigation = (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_3__.scrambleDuringCompileTime)(next_navigation__WEBPACK_IMPORTED_MODULE_16__);\nvar allClientApps = /* @__PURE__ */ new Map();\nvar __StackClientAppImplIncomplete = class __StackClientAppImplIncomplete {\n  constructor(_options) {\n    this._options = _options;\n    this._uniqueIdentifier = void 0;\n    this.__DEMO_ENABLE_SLIGHT_FETCH_DELAY = false;\n    this._ownedAdminApps = new _stackframe_stack_shared_dist_utils_maps__WEBPACK_IMPORTED_MODULE_6__.DependenciesMap();\n    this._currentUserCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session) => {\n      if (this.__DEMO_ENABLE_SLIGHT_FETCH_DELAY) {\n        await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.wait)(2e3);\n      }\n      if (session.isKnownToBeInvalid()) {\n        return null;\n      }\n      return await this._interface.getClientUserByToken(session);\n    });\n    this._currentProjectCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCache)(async () => {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._interface.getClientProject());\n    });\n    this._ownedProjectsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session) => {\n      return await this._interface.listProjects(session);\n    });\n    this._currentUserPermissionsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session, [teamId, recursive]) => {\n      return await this._interface.listCurrentUserTeamPermissions({ teamId, recursive }, session);\n    });\n    this._currentUserProjectPermissionsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session, [recursive]) => {\n      return await this._interface.listCurrentUserProjectPermissions({ recursive }, session);\n    });\n    this._currentUserTeamsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(async (session) => {\n      return await this._interface.listCurrentUserTeams(session);\n    });\n    this._currentUserOAuthConnectionAccessTokensCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [providerId, scope]) => {\n        try {\n          const result = await this._interface.createProviderAccessToken(providerId, scope || \"\", session);\n          return { accessToken: result.access_token };\n        } catch (err) {\n          if (!(_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthConnectionDoesNotHaveRequiredScope.isInstance(err) || _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthConnectionNotConnectedToUser.isInstance(err))) {\n            throw err;\n          }\n        }\n        return null;\n      }\n    );\n    this._currentUserOAuthConnectionCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [providerId, scope, redirect]) => {\n        return await this._getUserOAuthConnectionCacheFn({\n          getUser: async () => _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._currentUserCache.getOrWait([session], \"write-only\")),\n          getOrWaitOAuthToken: async () => _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._currentUserOAuthConnectionAccessTokensCache.getOrWait([session, providerId, scope || \"\"], \"write-only\")),\n          useOAuthToken: () => (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._currentUserOAuthConnectionAccessTokensCache, [session, providerId, scope || \"\"], \"useOAuthToken\"),\n          providerId,\n          scope,\n          redirect,\n          session\n        });\n      }\n    );\n    this._teamMemberProfilesCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId]) => {\n        return await this._interface.listTeamMemberProfiles({ teamId }, session);\n      }\n    );\n    this._teamInvitationsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId]) => {\n        return await this._interface.listTeamInvitations({ teamId }, session);\n      }\n    );\n    this._currentUserTeamProfileCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId]) => {\n        return await this._interface.getTeamMemberProfile({ teamId, userId: \"me\" }, session);\n      }\n    );\n    this._clientContactChannelsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session) => {\n        return await this._interface.listClientContactChannels(session);\n      }\n    );\n    this._userApiKeysCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session) => {\n        const results = await this._interface.listProjectApiKeys({ user_id: \"me\" }, session, \"client\");\n        return results;\n      }\n    );\n    this._teamApiKeysCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId]) => {\n        const results = await this._interface.listProjectApiKeys({ team_id: teamId }, session, \"client\");\n        return results;\n      }\n    );\n    this._notificationCategoriesCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session) => {\n        const results = await this._interface.listNotificationCategories(session);\n        return results;\n      }\n    );\n    this._currentUserOAuthProvidersCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session) => {\n        return await this._interface.listOAuthProviders({ user_id: \"me\" }, session);\n      }\n    );\n    this._userItemCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [userId, itemId]) => {\n        return await this._interface.getItem({ userId, itemId }, session);\n      }\n    );\n    this._teamItemCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [teamId, itemId]) => {\n        return await this._interface.getItem({ teamId, itemId }, session);\n      }\n    );\n    this._customItemCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCacheBySession)(\n      async (session, [customCustomerId, itemId]) => {\n        return await this._interface.getItem({ customCustomerId, itemId }, session);\n      }\n    );\n    this._convexPartialUserCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createCache)(\n      async ([ctx]) => await this._getPartialUserFromConvex(ctx)\n    );\n    this._anonymousSignUpInProgress = null;\n    this._memoryTokenStore = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createEmptyTokenStore)();\n    this._nextServerCookiesTokenStores = /* @__PURE__ */ new WeakMap();\n    this._requestTokenStores = /* @__PURE__ */ new WeakMap();\n    this._storedBrowserCookieTokenStore = null;\n    /**\n     * A map from token stores and session keys to sessions.\n     *\n     * This isn't just a map from session keys to sessions for two reasons:\n     *\n     * - So we can garbage-collect Session objects when the token store is garbage-collected\n     * - So different token stores are separated and don't leak information between each other, eg. if the same user sends two requests to the same server they should get a different session object\n     */\n    this._sessionsByTokenStoreAndSessionKey = /* @__PURE__ */ new WeakMap();\n    if (!__StackClientAppImplIncomplete.LazyStackAdminAppImpl.value) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Admin app implementation not initialized. Did you import the _StackClientApp from stack-app/apps/implementations/index.ts? You can't import it directly from ./apps/implementations/client-app-impl.ts as that causes a circular dependency (see the comment at _LazyStackAdminAppImpl for more details).\");\n    }\n    if (\"interface\" in _options) {\n      this._interface = _options.interface;\n    } else {\n      this._interface = new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.StackClientInterface({\n        getBaseUrl: () => (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.getBaseUrl)(_options.baseUrl),\n        extraRequestHeaders: _options.extraRequestHeaders ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.getDefaultExtraRequestHeaders)(),\n        projectId: _options.projectId ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.getDefaultProjectId)(),\n        clientVersion: _common_js__WEBPACK_IMPORTED_MODULE_19__.clientVersion,\n        publishableClientKey: _options.publishableClientKey ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.getDefaultPublishableClientKey)(),\n        prepareRequest: async () => {\n          await (0,_stackframe_stack_sc__WEBPACK_IMPORTED_MODULE_18__.cookies)?.();\n        }\n      });\n    }\n    this._tokenStoreInit = _options.tokenStore;\n    this._redirectMethod = _options.redirectMethod || \"none\";\n    this._redirectMethod = _options.redirectMethod || \"nextjs\";\n    this._urlOptions = _options.urls ?? {};\n    this._oauthScopesOnSignIn = _options.oauthScopesOnSignIn ?? {};\n    if (_options.uniqueIdentifier) {\n      this._uniqueIdentifier = _options.uniqueIdentifier;\n      this._initUniqueIdentifier();\n    }\n  }\n  async _createCookieHelper() {\n    if (this._tokenStoreInit === \"nextjs-cookie\" || this._tokenStoreInit === \"cookie\") {\n      return await (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.createCookieHelper)();\n    } else {\n      return await (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.createPlaceholderCookieHelper)();\n    }\n  }\n  async _getUserOAuthConnectionCacheFn(options) {\n    const user = await options.getUser();\n    let hasConnection = true;\n    if (!user || !user.oauth_providers.find((p) => p.id === options.providerId)) {\n      hasConnection = false;\n    }\n    const token = await options.getOrWaitOAuthToken();\n    if (!token) {\n      hasConnection = false;\n    }\n    if (!hasConnection && options.redirect) {\n      if (!options.session) {\n        throw new Error((0,_stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_12__.deindent)`\n          Cannot add new scopes to a user that is not a CurrentUser. Please ensure that you are calling this function on a CurrentUser object, or remove the 'or: redirect' option.\n\n          Often, you can solve this by calling this function in the browser instead, or by removing the 'or: redirect' option and dealing with the case where the user doesn't have enough permissions.\n        `);\n      }\n      await (0,_auth_js__WEBPACK_IMPORTED_MODULE_21__.addNewOAuthProviderOrScope)(\n        this._interface,\n        {\n          provider: options.providerId,\n          redirectUrl: this.urls.oauthCallback,\n          errorRedirectUrl: this.urls.error,\n          providerScope: (0,_stackframe_stack_shared_dist_utils_strings__WEBPACK_IMPORTED_MODULE_12__.mergeScopeStrings)(options.scope || \"\", (this._oauthScopesOnSignIn[options.providerId] ?? []).join(\" \"))\n        },\n        options.session\n      );\n      return await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.neverResolve)();\n    } else if (!hasConnection) {\n      return null;\n    }\n    return {\n      id: options.providerId,\n      async getAccessToken() {\n        const result = await options.getOrWaitOAuthToken();\n        if (!result) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"No access token available\");\n        }\n        return result;\n      },\n      useAccessToken() {\n        const result = options.useOAuthToken();\n        if (!result) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"No access token available\");\n        }\n        return result;\n      }\n    };\n  }\n  _initUniqueIdentifier() {\n    if (!this._uniqueIdentifier) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Unique identifier not initialized\");\n    }\n    if (allClientApps.has(this._uniqueIdentifier)) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"A Stack client app with the same unique identifier already exists\");\n    }\n    allClientApps.set(this._uniqueIdentifier, [this._options.checkString ?? void 0, this]);\n  }\n  /**\n   * Cloudflare workers does not allow use of randomness on the global scope (on which the Stack app is probably\n   * initialized). For that reason, we generate the unique identifier lazily when it is first needed instead of in the\n   * constructor.\n   */\n  _getUniqueIdentifier() {\n    if (!this._uniqueIdentifier) {\n      this._uniqueIdentifier = (0,_stackframe_stack_shared_dist_utils_uuids__WEBPACK_IMPORTED_MODULE_14__.generateUuid)();\n      this._initUniqueIdentifier();\n    }\n    return this._uniqueIdentifier;\n  }\n  async _checkFeatureSupport(name, options) {\n    return await this._interface.checkFeatureSupport({ ...options, name });\n  }\n  _useCheckFeatureSupport(name, options) {\n    (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(this._checkFeatureSupport(name, options));\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(`${name} is not currently supported. Please reach out to Stack support for more information.`);\n  }\n  get _refreshTokenCookieName() {\n    return `stack-refresh-${this.projectId}`;\n  }\n  _getTokensFromCookies(cookies2) {\n    const refreshToken = cookies2.refreshTokenCookie;\n    const accessTokenObject = cookies2.accessTokenCookie?.startsWith('[\"') ? JSON.parse(cookies2.accessTokenCookie) : null;\n    const accessToken = accessTokenObject && refreshToken === accessTokenObject[0] ? accessTokenObject[1] : null;\n    return {\n      refreshToken,\n      accessToken\n    };\n  }\n  get _accessTokenCookieName() {\n    return `stack-access`;\n  }\n  _getBrowserCookieTokenStore() {\n    if (!(0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_4__.isBrowserLike)()) {\n      throw new Error(\"Cannot use cookie token store on the server!\");\n    }\n    if (this._storedBrowserCookieTokenStore === null) {\n      const getCurrentValue = (old) => {\n        const tokens = this._getTokensFromCookies({\n          refreshTokenCookie: (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.getCookieClient)(this._refreshTokenCookieName) ?? (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.getCookieClient)(\"stack-refresh\"),\n          // keep old cookie name for backwards-compatibility\n          accessTokenCookie: (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.getCookieClient)(this._accessTokenCookieName)\n        });\n        return {\n          refreshToken: tokens.refreshToken,\n          accessToken: tokens.accessToken ?? (old?.refreshToken === tokens.refreshToken ? old.accessToken : null)\n        };\n      };\n      this._storedBrowserCookieTokenStore = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.Store(getCurrentValue(null));\n      let hasSucceededInWriting = true;\n      setInterval(() => {\n        if (hasSucceededInWriting) {\n          const oldValue = this._storedBrowserCookieTokenStore.get();\n          const currentValue = getCurrentValue(oldValue);\n          if (!(0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_7__.deepPlainEquals)(currentValue, oldValue)) {\n            this._storedBrowserCookieTokenStore.set(currentValue);\n          }\n        }\n      }, 100);\n      this._storedBrowserCookieTokenStore.onChange((value) => {\n        try {\n          (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.setOrDeleteCookieClient)(this._refreshTokenCookieName, value.refreshToken, { maxAge: 60 * 60 * 24 * 365 });\n          (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.setOrDeleteCookieClient)(this._accessTokenCookieName, value.accessToken ? JSON.stringify([value.refreshToken, value.accessToken]) : null, { maxAge: 60 * 60 * 24 });\n          (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.deleteCookieClient)(\"stack-refresh\");\n          hasSucceededInWriting = true;\n        } catch (e) {\n          if (!(0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_4__.isBrowserLike)()) {\n            hasSucceededInWriting = false;\n          } else {\n            throw e;\n          }\n        }\n      });\n    }\n    return this._storedBrowserCookieTokenStore;\n  }\n  _getOrCreateTokenStore(cookieHelper, overrideTokenStoreInit) {\n    const tokenStoreInit = overrideTokenStoreInit === void 0 ? this._tokenStoreInit : overrideTokenStoreInit;\n    switch (tokenStoreInit) {\n      case \"cookie\": {\n        return this._getBrowserCookieTokenStore();\n      }\n      case \"nextjs-cookie\": {\n        if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_4__.isBrowserLike)()) {\n          return this._getBrowserCookieTokenStore();\n        } else {\n          const tokens = this._getTokensFromCookies({\n            refreshTokenCookie: cookieHelper.get(this._refreshTokenCookieName) ?? cookieHelper.get(\"stack-refresh\"),\n            // keep old cookie name for backwards-compatibility\n            accessTokenCookie: cookieHelper.get(this._accessTokenCookieName)\n          });\n          const store = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.Store(tokens);\n          store.onChange((value) => {\n            (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(async () => {\n              await Promise.all([\n                (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.setOrDeleteCookie)(this._refreshTokenCookieName, value.refreshToken, { maxAge: 60 * 60 * 24 * 365, noOpIfServerComponent: true }),\n                (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.setOrDeleteCookie)(this._accessTokenCookieName, value.accessToken ? JSON.stringify([value.refreshToken, value.accessToken]) : null, { maxAge: 60 * 60 * 24, noOpIfServerComponent: true })\n              ]);\n            });\n          });\n          return store;\n        }\n      }\n      case \"memory\": {\n        return this._memoryTokenStore;\n      }\n      default: {\n        if (tokenStoreInit === null) {\n          return (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.createEmptyTokenStore)();\n        } else if (typeof tokenStoreInit === \"object\" && \"headers\" in tokenStoreInit) {\n          if (this._requestTokenStores.has(tokenStoreInit)) return this._requestTokenStores.get(tokenStoreInit);\n          const stackAuthHeader = tokenStoreInit.headers.get(\"x-stack-auth\");\n          if (stackAuthHeader) {\n            let parsed2;\n            try {\n              parsed2 = JSON.parse(stackAuthHeader);\n              if (typeof parsed2 !== \"object\") throw new Error(\"x-stack-auth header must be a JSON object\");\n              if (parsed2 === null) throw new Error(\"x-stack-auth header must not be null\");\n            } catch (e) {\n              throw new Error(`Invalid x-stack-auth header: ${stackAuthHeader}`, { cause: e });\n            }\n            return this._getOrCreateTokenStore(cookieHelper, {\n              accessToken: parsed2.accessToken ?? null,\n              refreshToken: parsed2.refreshToken ?? null\n            });\n          }\n          const cookieHeader = tokenStoreInit.headers.get(\"cookie\");\n          const parsed = cookie__WEBPACK_IMPORTED_MODULE_15__.parse(cookieHeader || \"\");\n          const res = new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.Store({\n            refreshToken: parsed[this._refreshTokenCookieName] || parsed[\"stack-refresh\"] || null,\n            // keep old cookie name for backwards-compatibility\n            accessToken: parsed[this._accessTokenCookieName] || null\n          });\n          this._requestTokenStores.set(tokenStoreInit, res);\n          return res;\n        } else if (\"accessToken\" in tokenStoreInit || \"refreshToken\" in tokenStoreInit) {\n          return new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.Store({\n            refreshToken: tokenStoreInit.refreshToken,\n            accessToken: tokenStoreInit.accessToken\n          });\n        }\n        throw new Error(`Invalid token store ${tokenStoreInit}`);\n      }\n    }\n  }\n  _useTokenStore(overrideTokenStoreInit) {\n    (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_9__.suspendIfSsr)();\n    const cookieHelper = (0,_cookie_js__WEBPACK_IMPORTED_MODULE_20__.createBrowserCookieHelper)();\n    const tokenStore = this._getOrCreateTokenStore(cookieHelper, overrideTokenStoreInit);\n    return tokenStore;\n  }\n  _getSessionFromTokenStore(tokenStore) {\n    const tokenObj = tokenStore.get();\n    const sessionKey = _stackframe_stack_shared_dist_sessions__WEBPACK_IMPORTED_MODULE_2__.InternalSession.calculateSessionKey(tokenObj);\n    const existing = sessionKey ? this._sessionsByTokenStoreAndSessionKey.get(tokenStore)?.get(sessionKey) : null;\n    if (existing) return existing;\n    const session = this._interface.createSession({\n      refreshToken: tokenObj.refreshToken,\n      accessToken: tokenObj.accessToken\n    });\n    session.onAccessTokenChange((newAccessToken) => {\n      tokenStore.update((old) => ({\n        ...old,\n        accessToken: newAccessToken?.token ?? null\n      }));\n    });\n    session.onInvalidate(() => {\n      tokenStore.update((old) => ({\n        ...old,\n        accessToken: null,\n        refreshToken: null\n      }));\n    });\n    let sessionsBySessionKey = this._sessionsByTokenStoreAndSessionKey.get(tokenStore) ?? /* @__PURE__ */ new Map();\n    this._sessionsByTokenStoreAndSessionKey.set(tokenStore, sessionsBySessionKey);\n    sessionsBySessionKey.set(sessionKey, session);\n    return session;\n  }\n  async _getSession(overrideTokenStoreInit) {\n    const tokenStore = this._getOrCreateTokenStore(await this._createCookieHelper(), overrideTokenStoreInit);\n    const session = this._getSessionFromTokenStore(tokenStore);\n    return session;\n  }\n  _useSession(overrideTokenStoreInit) {\n    const tokenStore = this._useTokenStore(overrideTokenStoreInit);\n    const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_17__.useCallback)((cb) => {\n      const { unsubscribe } = tokenStore.onChange(() => {\n        cb();\n      });\n      return unsubscribe;\n    }, [tokenStore]);\n    const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_17__.useCallback)(() => this._getSessionFromTokenStore(tokenStore), [tokenStore]);\n    return react__WEBPACK_IMPORTED_MODULE_17___default().useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  }\n  async _signInToAccountWithTokens(tokens) {\n    if (!(\"accessToken\" in tokens) || !(\"refreshToken\" in tokens)) {\n      throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Invalid tokens object; can't sign in with this\", { tokens });\n    }\n    const tokenStore = this._getOrCreateTokenStore(await this._createCookieHelper());\n    tokenStore.set(tokens);\n  }\n  _hasPersistentTokenStore(overrideTokenStoreInit) {\n    return (overrideTokenStoreInit !== void 0 ? overrideTokenStoreInit : this._tokenStoreInit) !== null;\n  }\n  _ensurePersistentTokenStore(overrideTokenStoreInit) {\n    if (!this._hasPersistentTokenStore(overrideTokenStoreInit)) {\n      throw new Error(\"Cannot call this function on a Stack app without a persistent token store. Make sure the tokenStore option on the constructor is set to a non-null value when initializing Stack.\\n\\nStack uses token stores to access access tokens of the current user. For example, on web frontends it is commonly the string value 'cookies' for cookie storage.\");\n    }\n  }\n  _isInternalProject() {\n    return this.projectId === \"internal\";\n  }\n  _ensureInternalProject() {\n    if (!this._isInternalProject()) {\n      throw new Error(\"Cannot call this function on a Stack app with a project ID other than 'internal'.\");\n    }\n  }\n  _clientProjectFromCrud(crud) {\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      config: {\n        signUpEnabled: crud.config.sign_up_enabled,\n        credentialEnabled: crud.config.credential_enabled,\n        magicLinkEnabled: crud.config.magic_link_enabled,\n        passkeyEnabled: crud.config.passkey_enabled,\n        clientTeamCreationEnabled: crud.config.client_team_creation_enabled,\n        clientUserDeletionEnabled: crud.config.client_user_deletion_enabled,\n        allowTeamApiKeys: crud.config.allow_team_api_keys,\n        allowUserApiKeys: crud.config.allow_user_api_keys,\n        oauthProviders: crud.config.enabled_oauth_providers.map((p) => ({\n          id: p.id\n        }))\n      }\n    };\n  }\n  _clientPermissionFromCrud(crud) {\n    return {\n      id: crud.id\n    };\n  }\n  _clientTeamUserFromCrud(crud) {\n    return {\n      id: crud.user_id,\n      teamProfile: {\n        displayName: crud.display_name,\n        profileImageUrl: crud.profile_image_url\n      }\n    };\n  }\n  _clientTeamInvitationFromCrud(session, crud) {\n    return {\n      id: crud.id,\n      recipientEmail: crud.recipient_email,\n      expiresAt: new Date(crud.expires_at_millis),\n      revoke: async () => {\n        await this._interface.revokeTeamInvitation(crud.id, crud.team_id, session);\n        await this._teamInvitationsCache.refresh([session, crud.team_id]);\n      }\n    };\n  }\n  _baseApiKeyFromCrud(crud) {\n    return {\n      id: crud.id,\n      description: crud.description,\n      expiresAt: crud.expires_at_millis ? new Date(crud.expires_at_millis) : void 0,\n      manuallyRevokedAt: crud.manually_revoked_at_millis ? new Date(crud.manually_revoked_at_millis) : null,\n      createdAt: new Date(crud.created_at_millis),\n      ...crud.type === \"team\" ? { type: \"team\", teamId: crud.team_id } : { type: \"user\", userId: crud.user_id },\n      value: typeof crud.value === \"string\" ? crud.value : {\n        lastFour: crud.value.last_four\n      },\n      isValid: function() {\n        return this.whyInvalid() === null;\n      },\n      whyInvalid: function() {\n        if (this.manuallyRevokedAt) {\n          return \"manually-revoked\";\n        }\n        if (this.expiresAt && this.expiresAt < /* @__PURE__ */ new Date()) {\n          return \"expired\";\n        }\n        return null;\n      }\n    };\n  }\n  _clientApiKeyFromCrud(session, crud) {\n    return {\n      ...this._baseApiKeyFromCrud(crud),\n      async revoke() {\n        await this.update({ revoked: true });\n      },\n      update: async (options) => {\n        await this._interface.updateProjectApiKey(crud.type === \"team\" ? { team_id: crud.team_id } : { user_id: crud.user_id }, crud.id, options, session, \"client\");\n        if (crud.type === \"team\") {\n          await this._teamApiKeysCache.refresh([session, crud.team_id]);\n        } else {\n          await this._userApiKeysCache.refresh([session]);\n        }\n      }\n    };\n  }\n  _clientTeamFromCrud(crud, session) {\n    const app = this;\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      clientMetadata: crud.client_metadata,\n      clientReadOnlyMetadata: crud.client_read_only_metadata,\n      ...this._createCustomer(crud.id, \"team\", session),\n      async inviteUser(options) {\n        await app._interface.sendTeamInvitation({\n          teamId: crud.id,\n          email: options.email,\n          session,\n          callbackUrl: options.callbackUrl ?? (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(app.urls.teamInvitation, \"callbackUrl\")\n        });\n        await app._teamInvitationsCache.refresh([session, crud.id]);\n      },\n      async listUsers() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._teamMemberProfilesCache.getOrWait([session, crud.id], \"write-only\"));\n        return result.map((crud2) => app._clientTeamUserFromCrud(crud2));\n      },\n      useUsers() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._teamMemberProfilesCache, [session, crud.id], \"team.useUsers()\");\n        return result.map((crud2) => app._clientTeamUserFromCrud(crud2));\n      },\n      async listInvitations() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._teamInvitationsCache.getOrWait([session, crud.id], \"write-only\"));\n        return result.map((crud2) => app._clientTeamInvitationFromCrud(session, crud2));\n      },\n      useInvitations() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._teamInvitationsCache, [session, crud.id], \"team.useInvitations()\");\n        return result.map((crud2) => app._clientTeamInvitationFromCrud(session, crud2));\n      },\n      async update(data) {\n        await app._interface.updateTeam({ data: (0,_teams_index_js__WEBPACK_IMPORTED_MODULE_23__.teamUpdateOptionsToCrud)(data), teamId: crud.id }, session);\n        await app._currentUserTeamsCache.refresh([session]);\n      },\n      async delete() {\n        await app._interface.deleteTeam(crud.id, session);\n        await app._currentUserTeamsCache.refresh([session]);\n      },\n      useApiKeys() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._teamApiKeysCache, [session, crud.id], \"team.useApiKeys()\");\n        return result.map((crud2) => app._clientApiKeyFromCrud(session, crud2));\n      },\n      async listApiKeys() {\n        const results = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._teamApiKeysCache.getOrWait([session, crud.id], \"write-only\"));\n        return results.map((crud2) => app._clientApiKeyFromCrud(session, crud2));\n      },\n      async createApiKey(options) {\n        const result = await app._interface.createProjectApiKey(\n          await (0,_api_keys_index_js__WEBPACK_IMPORTED_MODULE_24__.apiKeyCreationOptionsToCrud)(\"team\", crud.id, options),\n          session,\n          \"client\"\n        );\n        await app._teamApiKeysCache.refresh([session, crud.id]);\n        return app._clientApiKeyFromCrud(session, result);\n      }\n    };\n  }\n  _clientContactChannelFromCrud(crud, session) {\n    const app = this;\n    return {\n      id: crud.id,\n      value: crud.value,\n      type: crud.type,\n      isVerified: crud.is_verified,\n      isPrimary: crud.is_primary,\n      usedForAuth: crud.used_for_auth,\n      async sendVerificationEmail(options) {\n        await app._interface.sendCurrentUserContactChannelVerificationEmail(\n          crud.id,\n          options?.callbackUrl || (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(app.urls.emailVerification, \"callbackUrl\"),\n          session\n        );\n      },\n      async update(data) {\n        await app._interface.updateClientContactChannel(crud.id, (0,_contact_channels_index_js__WEBPACK_IMPORTED_MODULE_25__.contactChannelUpdateOptionsToCrud)(data), session);\n        await app._clientContactChannelsCache.refresh([session]);\n      },\n      async delete() {\n        await app._interface.deleteClientContactChannel(crud.id, session);\n        await app._clientContactChannelsCache.refresh([session]);\n      }\n    };\n  }\n  _clientNotificationCategoryFromCrud(crud, session) {\n    const app = this;\n    return {\n      id: crud.notification_category_id,\n      name: crud.notification_category_name,\n      enabled: crud.enabled,\n      canDisable: crud.can_disable,\n      async setEnabled(enabled) {\n        await app._interface.setNotificationsEnabled(crud.notification_category_id, enabled, session);\n        await app._notificationCategoriesCache.refresh([session]);\n      }\n    };\n  }\n  _clientOAuthProviderFromCrud(crud, session) {\n    const app = this;\n    return {\n      id: crud.id,\n      type: crud.type,\n      userId: crud.user_id,\n      email: crud.email,\n      allowSignIn: crud.allow_sign_in,\n      allowConnectedAccounts: crud.allow_connected_accounts,\n      async update(data) {\n        try {\n          await app._interface.updateOAuthProvider(\n            crud.user_id,\n            crud.id,\n            {\n              allow_sign_in: data.allowSignIn,\n              allow_connected_accounts: data.allowConnectedAccounts\n            },\n            session\n          );\n          await app._currentUserOAuthProvidersCache.refresh([session]);\n          return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n        } catch (error) {\n          if (_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.OAuthProviderAccountIdAlreadyUsedForSignIn.isInstance(error)) {\n            return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(error);\n          }\n          throw error;\n        }\n      },\n      async delete() {\n        await app._interface.deleteOAuthProvider(crud.user_id, crud.id, session);\n        await app._currentUserOAuthProvidersCache.refresh([session]);\n      }\n    };\n  }\n  _clientItemFromCrud(crud) {\n    const app = this;\n    return {\n      displayName: crud.display_name,\n      quantity: crud.quantity,\n      nonNegativeQuantity: Math.max(0, crud.quantity)\n    };\n  }\n  _createAuth(session) {\n    const app = this;\n    return {\n      _internalSession: session,\n      currentSession: {\n        async getTokens() {\n          const tokens = await session.getOrFetchLikelyValidTokens(2e4);\n          return {\n            accessToken: tokens?.accessToken.token ?? null,\n            refreshToken: tokens?.refreshToken?.token ?? null\n          };\n        }\n      },\n      async getAuthHeaders() {\n        return {\n          \"x-stack-auth\": JSON.stringify(await this.getAuthJson())\n        };\n      },\n      async getAuthJson() {\n        const tokens = await this.currentSession.getTokens();\n        return tokens;\n      },\n      async registerPasskey(options) {\n        const hostname = (await app._getCurrentUrl())?.hostname;\n        if (!hostname) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"hostname must be provided if the Stack App does not have a redirect method\");\n        }\n        const initiationResult = await app._interface.initiatePasskeyRegistration({}, session);\n        if (initiationResult.status !== \"ok\") {\n          return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyRegistrationFailed(\"Failed to get initiation options for passkey registration\"));\n        }\n        const { options_json, code } = initiationResult.data;\n        if (options_json.rp.id !== \"THIS_VALUE_WILL_BE_REPLACED.example.com\") {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(`Expected returned RP ID from server to equal sentinel, but found ${options_json.rp.id}`);\n        }\n        options_json.rp.id = hostname;\n        let attResp;\n        try {\n          attResp = await (0,_simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__.startRegistration)({ optionsJSON: options_json });\n        } catch (error) {\n          if (error instanceof _simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__.WebAuthnError) {\n            return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyWebAuthnError(error.message, error.name));\n          } else {\n            (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.captureError)(\"passkey-registration-failed\", error);\n            return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyRegistrationFailed(\"Failed to start passkey registration due to unknown error\"));\n          }\n        }\n        const registrationResult = await app._interface.registerPasskey({ credential: attResp, code }, session);\n        await app._refreshUser(session);\n        return registrationResult;\n      },\n      signOut(options) {\n        return app._signOut(session, options);\n      }\n    };\n  }\n  _editableTeamProfileFromCrud(crud, session) {\n    const app = this;\n    return {\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      async update(update) {\n        await app._interface.updateTeamMemberProfile({\n          teamId: crud.team_id,\n          userId: crud.user_id,\n          profile: {\n            display_name: update.displayName,\n            profile_image_url: update.profileImageUrl\n          }\n        }, session);\n        await app._currentUserTeamProfileCache.refresh([session, crud.team_id]);\n      }\n    };\n  }\n  _createBaseUser(crud) {\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      primaryEmail: crud.primary_email,\n      primaryEmailVerified: crud.primary_email_verified,\n      profileImageUrl: crud.profile_image_url,\n      signedUpAt: new Date(crud.signed_up_at_millis),\n      clientMetadata: crud.client_metadata,\n      clientReadOnlyMetadata: crud.client_read_only_metadata,\n      hasPassword: crud.has_password,\n      emailAuthEnabled: crud.auth_with_email,\n      otpAuthEnabled: crud.otp_auth_enabled,\n      oauthProviders: crud.oauth_providers,\n      passkeyAuthEnabled: crud.passkey_auth_enabled,\n      isMultiFactorRequired: crud.requires_totp_mfa,\n      isAnonymous: crud.is_anonymous,\n      toClientJson() {\n        return crud;\n      }\n    };\n  }\n  _createUserExtraFromCurrent(crud, session) {\n    const app = this;\n    async function getConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserOAuthConnectionCache.getOrWait([session, id, scopeString || \"\", options?.or === \"redirect\"], \"write-only\"));\n    }\n    function useConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserOAuthConnectionCache, [session, id, scopeString || \"\", options?.or === \"redirect\"], \"user.useConnectedAccount()\");\n    }\n    return {\n      async getActiveSessions() {\n        const sessions = await app._interface.listSessions(session);\n        return sessions.items.map((crud2) => app._clientSessionFromCrud(crud2));\n      },\n      async revokeSession(sessionId) {\n        await app._interface.deleteSession(sessionId, session);\n      },\n      setDisplayName(displayName) {\n        return this.update({ displayName });\n      },\n      setClientMetadata(metadata) {\n        return this.update({ clientMetadata: metadata });\n      },\n      async setSelectedTeam(team) {\n        await this.update({ selectedTeamId: team?.id ?? null });\n      },\n      getConnectedAccount,\n      useConnectedAccount,\n      // THIS_LINE_PLATFORM react-like\n      async getTeam(teamId) {\n        const teams = await this.listTeams();\n        return teams.find((t) => t.id === teamId) ?? null;\n      },\n      useTeam(teamId) {\n        const teams = this.useTeams();\n        return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => {\n          return teams.find((t) => t.id === teamId) ?? null;\n        }, [teams, teamId]);\n      },\n      async listTeams() {\n        const teams = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserTeamsCache.getOrWait([session], \"write-only\"));\n        return teams.map((crud2) => app._clientTeamFromCrud(crud2, session));\n      },\n      useTeams() {\n        const teams = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserTeamsCache, [session], \"user.useTeams()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => teams.map((crud2) => app._clientTeamFromCrud(crud2, session)), [teams]);\n      },\n      async createTeam(data) {\n        const crud2 = await app._interface.createClientTeam((0,_teams_index_js__WEBPACK_IMPORTED_MODULE_23__.teamCreateOptionsToCrud)(data, \"me\"), session);\n        await app._currentUserTeamsCache.refresh([session]);\n        await this.update({ selectedTeamId: crud2.id });\n        return app._clientTeamFromCrud(crud2, session);\n      },\n      async leaveTeam(team) {\n        await app._interface.leaveTeam(team.id, session);\n      },\n      async listPermissions(scopeOrOptions, options) {\n        if (scopeOrOptions && \"id\" in scopeOrOptions) {\n          const scope = scopeOrOptions;\n          const recursive = options?.recursive ?? true;\n          const permissions = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserPermissionsCache.getOrWait([session, scope.id, recursive], \"write-only\"));\n          return permissions.map((crud2) => app._clientPermissionFromCrud(crud2));\n        } else {\n          const opts = scopeOrOptions;\n          const recursive = opts?.recursive ?? true;\n          const permissions = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserProjectPermissionsCache.getOrWait([session, recursive], \"write-only\"));\n          return permissions.map((crud2) => app._clientPermissionFromCrud(crud2));\n        }\n      },\n      usePermissions(scopeOrOptions, options) {\n        if (scopeOrOptions && \"id\" in scopeOrOptions) {\n          const scope = scopeOrOptions;\n          const recursive = options?.recursive ?? true;\n          const permissions = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserPermissionsCache, [session, scope.id, recursive], \"user.usePermissions()\");\n          return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => permissions.map((crud2) => app._clientPermissionFromCrud(crud2)), [permissions]);\n        } else {\n          const opts = scopeOrOptions;\n          const recursive = opts?.recursive ?? true;\n          const permissions = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserProjectPermissionsCache, [session, recursive], \"user.usePermissions()\");\n          return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => permissions.map((crud2) => app._clientPermissionFromCrud(crud2)), [permissions]);\n        }\n      },\n      usePermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          const permissions = this.usePermissions(scope);\n          return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => permissions.find((p) => p.id === permissionId) ?? null, [permissions, permissionId]);\n        } else {\n          const pid = scopeOrPermissionId;\n          const permissions = this.usePermissions();\n          return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => permissions.find((p) => p.id === pid) ?? null, [permissions, pid]);\n        }\n      },\n      async getPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          const permissions = await this.listPermissions(scope);\n          return permissions.find((p) => p.id === permissionId) ?? null;\n        } else {\n          const pid = scopeOrPermissionId;\n          const permissions = await this.listPermissions();\n          return permissions.find((p) => p.id === pid) ?? null;\n        }\n      },\n      async hasPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          return await this.getPermission(scope, permissionId) !== null;\n        } else {\n          const pid = scopeOrPermissionId;\n          return await this.getPermission(pid) !== null;\n        }\n      },\n      async update(update) {\n        return await app._updateClientUser(update, session);\n      },\n      async sendVerificationEmail(options) {\n        if (!crud.primary_email) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"User does not have a primary email\");\n        }\n        return await app._interface.sendVerificationEmail(\n          crud.primary_email,\n          options?.callbackUrl ?? (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(app.urls.emailVerification, \"callbackUrl\"),\n          session\n        );\n      },\n      async updatePassword(options) {\n        const result = await app._interface.updatePassword(options, session);\n        await app._currentUserCache.refresh([session]);\n        return result;\n      },\n      async setPassword(options) {\n        const result = await app._interface.setPassword(options, session);\n        await app._currentUserCache.refresh([session]);\n        return result;\n      },\n      selectedTeam: crud.selected_team && this._clientTeamFromCrud(crud.selected_team, session),\n      async getTeamProfile(team) {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserTeamProfileCache.getOrWait([session, team.id], \"write-only\"));\n        return app._editableTeamProfileFromCrud(result, session);\n      },\n      useTeamProfile(team) {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserTeamProfileCache, [session, team.id], \"user.useTeamProfile()\");\n        return app._editableTeamProfileFromCrud(result, session);\n      },\n      async delete() {\n        await app._interface.deleteCurrentUser(session);\n        session.markInvalid();\n      },\n      async listContactChannels() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._clientContactChannelsCache.getOrWait([session], \"write-only\"));\n        return result.map((crud2) => app._clientContactChannelFromCrud(crud2, session));\n      },\n      useContactChannels() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._clientContactChannelsCache, [session], \"user.useContactChannels()\");\n        return result.map((crud2) => app._clientContactChannelFromCrud(crud2, session));\n      },\n      async createContactChannel(data) {\n        const crud2 = await app._interface.createClientContactChannel((0,_contact_channels_index_js__WEBPACK_IMPORTED_MODULE_25__.contactChannelCreateOptionsToCrud)(\"me\", data), session);\n        await app._clientContactChannelsCache.refresh([session]);\n        return app._clientContactChannelFromCrud(crud2, session);\n      },\n      useNotificationCategories() {\n        const results = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._notificationCategoriesCache, [session], \"user.useNotificationCategories()\");\n        return results.map((crud2) => app._clientNotificationCategoryFromCrud(crud2, session));\n      },\n      async listNotificationCategories() {\n        const results = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._notificationCategoriesCache.getOrWait([session], \"write-only\"));\n        return results.map((crud2) => app._clientNotificationCategoryFromCrud(crud2, session));\n      },\n      useApiKeys() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._userApiKeysCache, [session], \"user.useApiKeys()\");\n        return result.map((crud2) => app._clientApiKeyFromCrud(session, crud2));\n      },\n      async listApiKeys() {\n        const results = await app._interface.listProjectApiKeys({ user_id: \"me\" }, session, \"client\");\n        return results.map((crud2) => app._clientApiKeyFromCrud(session, crud2));\n      },\n      async createApiKey(options) {\n        const result = await app._interface.createProjectApiKey(\n          await (0,_api_keys_index_js__WEBPACK_IMPORTED_MODULE_24__.apiKeyCreationOptionsToCrud)(\"user\", \"me\", options),\n          session,\n          \"client\"\n        );\n        await app._userApiKeysCache.refresh([session]);\n        return app._clientApiKeyFromCrud(session, result);\n      },\n      useOAuthProviders() {\n        const results = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(app._currentUserOAuthProvidersCache, [session], \"user.useOAuthProviders()\");\n        return results.map((crud2) => app._clientOAuthProviderFromCrud(crud2, session));\n      },\n      async listOAuthProviders() {\n        const results = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await app._currentUserOAuthProvidersCache.getOrWait([session], \"write-only\"));\n        return results.map((crud2) => app._clientOAuthProviderFromCrud(crud2, session));\n      },\n      useOAuthProvider(id) {\n        const providers = this.useOAuthProviders();\n        return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => providers.find((p) => p.id === id) ?? null, [providers, id]);\n      },\n      async getOAuthProvider(id) {\n        const providers = await this.listOAuthProviders();\n        return providers.find((p) => p.id === id) ?? null;\n      }\n    };\n  }\n  _createInternalUserExtra(session) {\n    const app = this;\n    this._ensureInternalProject();\n    return {\n      createProject(newProject) {\n        return app._createProject(session, newProject);\n      },\n      listOwnedProjects() {\n        return app._listOwnedProjects(session);\n      },\n      useOwnedProjects() {\n        return app._useOwnedProjects(session);\n      }\n    };\n  }\n  _createCustomer(userIdOrTeamId, type, session) {\n    const app = this;\n    const cache = type === \"user\" ? app._userItemCache : app._teamItemCache;\n    return {\n      async getItem(itemId) {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await cache.getOrWait([session, userIdOrTeamId, itemId], \"write-only\"));\n        return app._clientItemFromCrud(result);\n      },\n      useItem(itemId) {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(cache, [session, userIdOrTeamId, itemId], \"team.useItem()\");\n        return app._clientItemFromCrud(result);\n      },\n      async createCheckoutUrl(options) {\n        return await app._interface.createCheckoutUrl(type, userIdOrTeamId, options.offerId, session);\n      }\n    };\n  }\n  async getItem(options) {\n    const session = await this._getSession();\n    let crud;\n    if (\"userId\" in options) {\n      crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._userItemCache.getOrWait([session, options.userId, options.itemId], \"write-only\"));\n    } else if (\"teamId\" in options) {\n      crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._teamItemCache.getOrWait([session, options.teamId, options.itemId], \"write-only\"));\n    } else {\n      crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._customItemCache.getOrWait([session, options.customCustomerId, options.itemId], \"write-only\"));\n    }\n    return this._clientItemFromCrud(crud);\n  }\n  useItem(options) {\n    const session = this._useSession();\n    const [cache, ownerId] = \"userId\" in options ? [this._userItemCache, options.userId] : \"teamId\" in options ? [this._teamItemCache, options.teamId] : [this._customItemCache, options.customCustomerId];\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(cache, [session, ownerId, options.itemId], \"app.useItem()\");\n    return this._clientItemFromCrud(crud);\n  }\n  _currentUserFromCrud(crud, session) {\n    const currentUser = {\n      ...this._createBaseUser(crud),\n      ...this._createAuth(session),\n      ...this._createUserExtraFromCurrent(crud, session),\n      ...this._isInternalProject() ? this._createInternalUserExtra(session) : {},\n      ...this._createCustomer(crud.id, \"user\", session)\n    };\n    Object.freeze(currentUser);\n    return currentUser;\n  }\n  _clientSessionFromCrud(crud) {\n    return {\n      id: crud.id,\n      userId: crud.user_id,\n      createdAt: new Date(crud.created_at),\n      isImpersonation: crud.is_impersonation,\n      lastUsedAt: crud.last_used_at ? new Date(crud.last_used_at) : void 0,\n      isCurrentSession: crud.is_current_session ?? false,\n      geoInfo: crud.last_used_at_end_user_ip_info\n    };\n  }\n  _getOwnedAdminApp(forProjectId, session) {\n    if (!this._ownedAdminApps.has([session, forProjectId])) {\n      this._ownedAdminApps.set([session, forProjectId], new __StackClientAppImplIncomplete.LazyStackAdminAppImpl.value({\n        baseUrl: this._interface.options.getBaseUrl(),\n        projectId: forProjectId,\n        tokenStore: null,\n        projectOwnerSession: session,\n        noAutomaticPrefetch: true\n      }));\n    }\n    return this._ownedAdminApps.get([session, forProjectId]);\n  }\n  get projectId() {\n    return this._interface.projectId;\n  }\n  async _isTrusted(url) {\n    return (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_13__.isRelative)(url);\n  }\n  get urls() {\n    return (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.getUrls)(this._urlOptions);\n  }\n  async _getCurrentUrl() {\n    if (this._redirectMethod === \"none\") {\n      return null;\n    }\n    return new URL(window.location.href);\n  }\n  async _redirectTo(options) {\n    if (this._redirectMethod === \"none\") {\n      return;\n    } else if (isReactServer2 && this._redirectMethod === \"nextjs\") {\n      NextNavigation.redirect(options.url.toString(), options.replace ? NextNavigation.RedirectType.replace : NextNavigation.RedirectType.push);\n    } else if (typeof this._redirectMethod === \"object\" && this._redirectMethod.navigate) {\n      this._redirectMethod.navigate(options.url.toString());\n    } else {\n      if (options.replace) {\n        window.location.replace(options.url);\n      } else {\n        window.location.assign(options.url);\n      }\n    }\n    await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.wait)(2e3);\n  }\n  useNavigate() {\n    if (typeof this._redirectMethod === \"object\") {\n      return this._redirectMethod.useNavigate();\n    } else if (this._redirectMethod === \"window\") {\n      return (to) => window.location.assign(to);\n    } else if (this._redirectMethod === \"nextjs\") {\n      const router = NextNavigation.useRouter();\n      return (to) => router.push(to);\n    } else {\n      return (to) => {\n      };\n    }\n  }\n  async _redirectIfTrusted(url, options) {\n    if (!await this._isTrusted(url)) {\n      throw new Error(`Redirect URL ${url} is not trusted; should be relative.`);\n    }\n    return await this._redirectTo({ url, ...options });\n  }\n  async _redirectToHandler(handlerName, options) {\n    let url = this.urls[handlerName];\n    if (!url) {\n      throw new Error(`No URL for handler name ${handlerName}`);\n    }\n    if (!options?.noRedirectBack) {\n      if (handlerName === \"afterSignIn\" || handlerName === \"afterSignUp\") {\n        if (isReactServer2 || typeof window === \"undefined\") {\n        } else {\n          const queryParams = new URLSearchParams(window.location.search);\n          url = queryParams.get(\"after_auth_return_to\") || url;\n        }\n      } else if (handlerName === \"signIn\" || handlerName === \"signUp\") {\n        if (isReactServer2 || typeof window === \"undefined\") {\n        } else {\n          const currentUrl = new URL(window.location.href);\n          const nextUrl = new URL(url, currentUrl);\n          if (currentUrl.searchParams.has(\"after_auth_return_to\")) {\n            nextUrl.searchParams.set(\"after_auth_return_to\", currentUrl.searchParams.get(\"after_auth_return_to\"));\n          } else if (currentUrl.protocol === nextUrl.protocol && currentUrl.host === nextUrl.host) {\n            nextUrl.searchParams.set(\"after_auth_return_to\", (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_13__.getRelativePart)(currentUrl));\n          }\n          url = (0,_stackframe_stack_shared_dist_utils_urls__WEBPACK_IMPORTED_MODULE_13__.getRelativePart)(nextUrl);\n        }\n      }\n    }\n    await this._redirectIfTrusted(url, options);\n  }\n  async redirectToSignIn(options) {\n    return await this._redirectToHandler(\"signIn\", options);\n  }\n  async redirectToSignUp(options) {\n    return await this._redirectToHandler(\"signUp\", options);\n  }\n  async redirectToSignOut(options) {\n    return await this._redirectToHandler(\"signOut\", options);\n  }\n  async redirectToEmailVerification(options) {\n    return await this._redirectToHandler(\"emailVerification\", options);\n  }\n  async redirectToPasswordReset(options) {\n    return await this._redirectToHandler(\"passwordReset\", options);\n  }\n  async redirectToForgotPassword(options) {\n    return await this._redirectToHandler(\"forgotPassword\", options);\n  }\n  async redirectToHome(options) {\n    return await this._redirectToHandler(\"home\", options);\n  }\n  async redirectToOAuthCallback(options) {\n    return await this._redirectToHandler(\"oauthCallback\", options);\n  }\n  async redirectToMagicLinkCallback(options) {\n    return await this._redirectToHandler(\"magicLinkCallback\", options);\n  }\n  async redirectToAfterSignIn(options) {\n    return await this._redirectToHandler(\"afterSignIn\", options);\n  }\n  async redirectToAfterSignUp(options) {\n    return await this._redirectToHandler(\"afterSignUp\", options);\n  }\n  async redirectToAfterSignOut(options) {\n    return await this._redirectToHandler(\"afterSignOut\", options);\n  }\n  async redirectToAccountSettings(options) {\n    return await this._redirectToHandler(\"accountSettings\", options);\n  }\n  async redirectToError(options) {\n    return await this._redirectToHandler(\"error\", options);\n  }\n  async redirectToTeamInvitation(options) {\n    return await this._redirectToHandler(\"teamInvitation\", options);\n  }\n  async redirectToMfa(options) {\n    return await this._redirectToHandler(\"mfa\", options);\n  }\n  async sendForgotPasswordEmail(email, options) {\n    return await this._interface.sendForgotPasswordEmail(email, options?.callbackUrl ?? (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(this.urls.passwordReset, \"callbackUrl\"));\n  }\n  async sendMagicLinkEmail(email, options) {\n    return await this._interface.sendMagicLinkEmail(email, options?.callbackUrl ?? (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(this.urls.magicLinkCallback, \"callbackUrl\"));\n  }\n  async resetPassword(options) {\n    return await this._interface.resetPassword(options);\n  }\n  async verifyPasswordResetCode(code) {\n    return await this._interface.verifyPasswordResetCode(code);\n  }\n  async verifyTeamInvitationCode(code) {\n    return await this._interface.acceptTeamInvitation({\n      type: \"check\",\n      code,\n      session: await this._getSession()\n    });\n  }\n  async acceptTeamInvitation(code) {\n    const result = await this._interface.acceptTeamInvitation({\n      type: \"use\",\n      code,\n      session: await this._getSession()\n    });\n    if (result.status === \"ok\") {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async getTeamInvitationDetails(code) {\n    const result = await this._interface.acceptTeamInvitation({\n      type: \"details\",\n      code,\n      session: await this._getSession()\n    });\n    if (result.status === \"ok\") {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok({ teamDisplayName: result.data.team_display_name });\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async verifyEmail(code) {\n    const result = await this._interface.verifyEmail(code);\n    await this._currentUserCache.refresh([await this._getSession()]);\n    await this._clientContactChannelsCache.refresh([await this._getSession()]);\n    return result;\n  }\n  async getUser(options) {\n    this._ensurePersistentTokenStore(options?.tokenStore);\n    const session = await this._getSession(options?.tokenStore);\n    let crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._currentUserCache.getOrWait([session], \"write-only\"));\n    if (crud?.is_anonymous && options?.or !== \"anonymous\" && options?.or !== \"anonymous-if-exists[deprecated]\") {\n      crud = null;\n    }\n    if (crud === null) {\n      switch (options?.or) {\n        case \"redirect\": {\n          await this.redirectToSignIn({ replace: true });\n          break;\n        }\n        case \"throw\": {\n          throw new Error(\"User is not signed in but getUser was called with { or: 'throw' }\");\n        }\n        case \"anonymous\": {\n          const tokens = await this._signUpAnonymously();\n          return await this.getUser({ tokenStore: tokens, or: \"anonymous-if-exists[deprecated]\" }) ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.throwErr)(\"Something went wrong while signing up anonymously\");\n        }\n        case void 0:\n        case \"anonymous-if-exists[deprecated]\":\n        case \"return-null\": {\n          return null;\n        }\n      }\n    }\n    return crud && this._currentUserFromCrud(crud, session);\n  }\n  useUser(options) {\n    this._ensurePersistentTokenStore(options?.tokenStore);\n    const session = this._useSession(options?.tokenStore);\n    let crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._currentUserCache, [session], \"useUser()\");\n    if (crud?.is_anonymous && options?.or !== \"anonymous\" && options?.or !== \"anonymous-if-exists[deprecated]\") {\n      crud = null;\n    }\n    if (crud === null) {\n      switch (options?.or) {\n        case \"redirect\": {\n          (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(this.redirectToSignIn({ replace: true }));\n          (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_9__.suspend)();\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"suspend should never return\");\n        }\n        case \"throw\": {\n          throw new Error(\"User is not signed in but useUser was called with { or: 'throw' }\");\n        }\n        case \"anonymous\": {\n          (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(async () => {\n            await this._signUpAnonymously();\n            if (typeof window !== \"undefined\") {\n              window.location.reload();\n            }\n          });\n          (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_9__.suspend)();\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"suspend should never return\");\n        }\n        case void 0:\n        case \"anonymous-if-exists[deprecated]\":\n        case \"return-null\": {\n        }\n      }\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => {\n      return crud && this._currentUserFromCrud(crud, session);\n    }, [crud, session, options?.or]);\n  }\n  _getTokenPartialUserFromSession(session, options) {\n    const accessToken = session.getAccessTokenIfNotExpiredYet(0);\n    if (!accessToken) {\n      return null;\n    }\n    const isAnonymous = accessToken.payload.is_anonymous;\n    if (isAnonymous && options.or !== \"anonymous\") {\n      return null;\n    }\n    return {\n      id: accessToken.payload.sub,\n      primaryEmail: accessToken.payload.email,\n      displayName: accessToken.payload.name,\n      primaryEmailVerified: accessToken.payload.email_verified,\n      isAnonymous\n    };\n  }\n  async _getPartialUserFromConvex(ctx) {\n    const auth = await ctx.auth.getUserIdentity();\n    if (!auth) {\n      return null;\n    }\n    return {\n      id: auth.subject,\n      displayName: auth.name ?? null,\n      primaryEmail: auth.email ?? null,\n      primaryEmailVerified: auth.email_verified,\n      isAnonymous: auth.is_anonymous\n    };\n  }\n  async getPartialUser(options) {\n    switch (options.from) {\n      case \"token\": {\n        this._ensurePersistentTokenStore(options.tokenStore ?? this._tokenStoreInit);\n        const session = await this._getSession(options.tokenStore);\n        return this._getTokenPartialUserFromSession(session, options);\n      }\n      case \"convex\": {\n        return await this._getPartialUserFromConvex(options.ctx);\n      }\n      default: {\n        throw new Error(`Invalid 'from' option: ${options.from}`);\n      }\n    }\n  }\n  usePartialUser(options) {\n    switch (options.from) {\n      case \"token\": {\n        this._ensurePersistentTokenStore(options.tokenStore ?? this._tokenStoreInit);\n        const session = this._useSession(options.tokenStore);\n        return this._getTokenPartialUserFromSession(session, options);\n      }\n      case \"convex\": {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._convexPartialUserCache, [options.ctx], \"usePartialUser(convex)\");\n        return result;\n      }\n      default: {\n        throw new Error(`Invalid 'from' option: ${options.from}`);\n      }\n    }\n  }\n  getConvexClientAuth(options) {\n    return async (args) => {\n      const session = await this._getSession(options.tokenStore);\n      if (!args.forceRefreshToken) {\n        const tokens2 = await session.getOrFetchLikelyValidTokens(2e4);\n        return tokens2?.accessToken.token ?? null;\n      }\n      const tokens = await session.fetchNewTokens();\n      return tokens?.accessToken.token ?? null;\n    };\n  }\n  async getConvexHttpClientAuth(options) {\n    const session = await this._getSession(options.tokenStore);\n    const tokens = await session.getOrFetchLikelyValidTokens(2e4);\n    return tokens?.accessToken.token ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.throwErr)(\"No access token available\");\n  }\n  async _updateClientUser(update, session) {\n    const res = await this._interface.updateClientUser((0,_users_index_js__WEBPACK_IMPORTED_MODULE_26__.userUpdateOptionsToCrud)(update), session);\n    await this._refreshUser(session);\n    return res;\n  }\n  async signInWithOAuth(provider, options) {\n    if (typeof window === \"undefined\") {\n      throw new Error(\"signInWithOAuth can currently only be called in a browser environment\");\n    }\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    await (0,_auth_js__WEBPACK_IMPORTED_MODULE_21__.signInWithOAuth)(\n      this._interface,\n      {\n        provider,\n        redirectUrl: options?.returnTo ?? this.urls.oauthCallback,\n        errorRedirectUrl: this.urls.error,\n        providerScope: this._oauthScopesOnSignIn[provider]?.join(\" \")\n      },\n      session\n    );\n  }\n  /**\n   * Handles MFA verification by redirecting to the OTP page\n   */\n  async _experimentalMfa(error, session) {\n    if (typeof window !== \"undefined\") {\n      window.sessionStorage.setItem(\"stack_mfa_attempt_code\", error.details?.attempt_code ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.throwErr)(\"attempt code missing\"));\n    }\n    await this.redirectToMfa();\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"we should have redirected in redirectToMfa()\");\n  }\n  /**\n   * @deprecated\n   * TODO remove\n   */\n  async _catchMfaRequiredError(callback) {\n    try {\n      return await callback();\n    } catch (e) {\n      if (_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.MultiFactorAuthenticationRequired.isInstance(e)) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(await this._experimentalMfa(e, await this._getSession()));\n      }\n      throw e;\n    }\n  }\n  async signInWithCredential(options) {\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await this._interface.signInWithCredential(options.email, options.password, session);\n      });\n    } catch (e) {\n      if (_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode.isInstance(e)) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(e);\n      }\n      throw e;\n    }\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      if (!options.noRedirect) {\n        await this.redirectToAfterSignIn({ replace: true });\n      }\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async signUpWithCredential(options) {\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    const emailVerificationRedirectUrl = options.verificationCallbackUrl ?? (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_22__.constructRedirectUrl)(this.urls.emailVerification, \"verificationCallbackUrl\");\n    const result = await this._interface.signUpWithCredential(\n      options.email,\n      options.password,\n      emailVerificationRedirectUrl,\n      session\n    );\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      if (!options.noRedirect) {\n        await this.redirectToAfterSignUp({ replace: true });\n      }\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async _signUpAnonymously() {\n    this._ensurePersistentTokenStore();\n    if (!this._anonymousSignUpInProgress) {\n      this._anonymousSignUpInProgress = (async () => {\n        this._ensurePersistentTokenStore();\n        const session = await this._getSession();\n        const result = await this._interface.signUpAnonymously(session);\n        if (result.status === \"ok\") {\n          await this._signInToAccountWithTokens(result.data);\n        } else {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"signUpAnonymously() should never return an error\");\n        }\n        this._anonymousSignUpInProgress = null;\n        return result.data;\n      })();\n    }\n    return await this._anonymousSignUpInProgress;\n  }\n  async signInWithMagicLink(code, options) {\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await this._interface.signInWithMagicLink(code, session);\n      });\n    } catch (e) {\n      if (_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode.isInstance(e)) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(e);\n      }\n      throw e;\n    }\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      if (!options?.noRedirect) {\n        if (result.data.newUser) {\n          await this.redirectToAfterSignUp({ replace: true });\n        } else {\n          await this.redirectToAfterSignIn({ replace: true });\n        }\n      }\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  /**\n   * Initiates a CLI authentication process that allows a command line application\n   * to get a refresh token for a user's account.\n   *\n   * This process works as follows:\n   * 1. The CLI app calls this method, which initiates the auth process with the server\n   * 2. The server returns a polling code and a login code\n   * 3. The CLI app opens a browser window to the appUrl with the login code as a parameter\n   * 4. The user logs in through the browser and confirms the authorization\n   * 5. The CLI app polls for the refresh token using the polling code\n   *\n   * @param options Options for the CLI login\n   * @param options.appUrl The URL of the app that will handle the CLI auth confirmation\n   * @param options.expiresInMillis Optional duration in milliseconds before the auth attempt expires (default: 2 hours)\n   * @param options.maxAttempts Optional maximum number of polling attempts (default: Infinity)\n   * @param options.waitTimeMillis Optional time to wait between polling attempts (default: 2 seconds)\n   * @param options.promptLink Optional function to call with the login URL to prompt the user to open the browser\n   * @returns Result containing either the refresh token or an error\n   */\n  async promptCliLogin(options) {\n    const response = await this._interface.sendClientRequest(\n      \"/auth/cli\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          expires_in_millis: options.expiresInMillis\n        })\n      },\n      null\n    );\n    if (!response.ok) {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CliAuthError(`Failed to initiate CLI auth: ${response.status} ${await response.text()}`));\n    }\n    const initResult = await response.json();\n    const pollingCode = initResult.polling_code;\n    const loginCode = initResult.login_code;\n    const url = `${options.appUrl}/handler/cli-auth-confirm?login_code=${encodeURIComponent(loginCode)}`;\n    if (options.promptLink) {\n      options.promptLink(url);\n    } else {\n      console.log(`Please visit the following URL to authenticate:\n${url}`);\n    }\n    let attempts = 0;\n    while (attempts < (options.maxAttempts ?? Infinity)) {\n      attempts++;\n      const pollResponse = await this._interface.sendClientRequest(\"/auth/cli/poll\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          polling_code: pollingCode\n        })\n      }, null);\n      if (!pollResponse.ok) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CliAuthError(`Failed to initiate CLI auth: ${pollResponse.status} ${await pollResponse.text()}`));\n      }\n      const pollResult = await pollResponse.json();\n      if (pollResponse.status === 201 && pollResult.status === \"success\") {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(pollResult.refresh_token);\n      }\n      if (pollResult.status === \"waiting\") {\n        await (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.wait)(options.waitTimeMillis ?? 2e3);\n        continue;\n      }\n      if (pollResult.status === \"expired\") {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CliAuthExpiredError(\"CLI authentication request expired. Please try again.\"));\n      }\n      if (pollResult.status === \"used\") {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CliAuthUsedError(\"This authentication token has already been used.\"));\n      }\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CliAuthError(`Unexpected status from CLI auth polling: ${pollResult.status}`));\n    }\n    return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.CliAuthError(\"Timed out waiting for CLI authentication.\"));\n  }\n  /*\n   * Completes the MFA sign-in process by verifying the provided OTP code\n   * @param totp The TOTP (Time-based One-Time Password) provided by the user\n   * @param code The Attempt code provided by the user\n   * @param options Additional options for the sign-in process\n   * @returns A Result indicating success or failure\n   */\n  async signInWithMfa(totp, code, options) {\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await this._interface.signInWithMfa(totp, code, session);\n      });\n    } catch (e) {\n      if (e instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(e);\n      }\n      throw e;\n    }\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      if (!options?.noRedirect) {\n        if (result.data.newUser) {\n          await this.redirectToAfterSignUp({ replace: true });\n        } else {\n          await this.redirectToAfterSignIn({ replace: true });\n        }\n      }\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    }\n    return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n  }\n  async signInWithPasskey() {\n    this._ensurePersistentTokenStore();\n    const session = await this._getSession();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        const initiationResult = await this._interface.initiatePasskeyAuthentication({}, session);\n        if (initiationResult.status !== \"ok\") {\n          return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyAuthenticationFailed(\"Failed to get initiation options for passkey authentication\"));\n        }\n        const { options_json, code } = initiationResult.data;\n        if (options_json.rpId !== \"THIS_VALUE_WILL_BE_REPLACED.example.com\") {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(`Expected returned RP ID from server to equal sentinel, but found ${options_json.rpId}`);\n        }\n        options_json.rpId = window.location.hostname;\n        const authentication_response = await (0,_simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__.startAuthentication)({ optionsJSON: options_json });\n        return await this._interface.signInWithPasskey({ authentication_response, code }, session);\n      });\n    } catch (error) {\n      if (error instanceof _simplewebauthn_browser__WEBPACK_IMPORTED_MODULE_0__.WebAuthnError) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyWebAuthnError(error.message, error.name));\n      } else {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.PasskeyAuthenticationFailed(\"Failed to sign in with passkey\"));\n      }\n    }\n    if (result.status === \"ok\") {\n      await this._signInToAccountWithTokens(result.data);\n      await this.redirectToAfterSignIn({ replace: true });\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.ok(void 0);\n    } else {\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.error(result.error);\n    }\n  }\n  async callOAuthCallback() {\n    if (typeof window === \"undefined\") {\n      throw new Error(\"callOAuthCallback can currently only be called in a browser environment\");\n    }\n    this._ensurePersistentTokenStore();\n    let result;\n    try {\n      result = await this._catchMfaRequiredError(async () => {\n        return await (0,_auth_js__WEBPACK_IMPORTED_MODULE_21__.callOAuthCallback)(this._interface, this.urls.oauthCallback);\n      });\n    } catch (e) {\n      if (_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_1__.KnownErrors.InvalidTotpCode.isInstance(e)) {\n        alert(\"Invalid TOTP code. Please try signing in again.\");\n        return false;\n      } else {\n        throw e;\n      }\n    }\n    if (result.status === \"ok\" && result.data) {\n      await this._signInToAccountWithTokens(result.data);\n      if (\"afterCallbackRedirectUrl\" in result.data && result.data.afterCallbackRedirectUrl) {\n        await this._redirectTo({ url: result.data.afterCallbackRedirectUrl, replace: true });\n        return true;\n      } else if (result.data.newUser) {\n        await this.redirectToAfterSignUp({ replace: true });\n        return true;\n      } else {\n        await this.redirectToAfterSignIn({ replace: true });\n        return true;\n      }\n    }\n    return false;\n  }\n  async _signOut(session, options) {\n    await _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_11__.storeLock.withWriteLock(async () => {\n      await this._interface.signOut(session);\n      if (options?.redirectUrl) {\n        await this._redirectTo({ url: options.redirectUrl, replace: true });\n      } else {\n        await this.redirectToAfterSignOut();\n      }\n    });\n  }\n  async signOut(options) {\n    const user = await this.getUser();\n    if (user) {\n      await user.signOut(options);\n    }\n  }\n  async getProject() {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._currentProjectCache.getOrWait([], \"write-only\"));\n    return this._clientProjectFromCrud(crud);\n  }\n  useProject() {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._currentProjectCache, [], \"useProject()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => this._clientProjectFromCrud(crud), [crud]);\n  }\n  async _listOwnedProjects(session) {\n    this._ensureInternalProject();\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.orThrow(await this._ownedProjectsCache.getOrWait([session], \"write-only\"));\n    return crud.map((j) => this._getOwnedAdminApp(j.id, session)._adminOwnedProjectFromCrud(\n      j,\n      () => this._refreshOwnedProjects(session)\n    ));\n  }\n  _useOwnedProjects(session) {\n    this._ensureInternalProject();\n    const projects = (0,_common_js__WEBPACK_IMPORTED_MODULE_19__.useAsyncCache)(this._ownedProjectsCache, [session], \"useOwnedProjects()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_17__.useMemo)(() => projects.map((j) => this._getOwnedAdminApp(j.id, session)._adminOwnedProjectFromCrud(\n      j,\n      () => this._refreshOwnedProjects(session)\n    )), [projects]);\n  }\n  async _createProject(session, newProject) {\n    this._ensureInternalProject();\n    const crud = await this._interface.createProject((0,_projects_index_js__WEBPACK_IMPORTED_MODULE_27__.adminProjectCreateOptionsToCrud)(newProject), session);\n    const res = this._getOwnedAdminApp(crud.id, session)._adminOwnedProjectFromCrud(\n      crud,\n      () => this._refreshOwnedProjects(session)\n    );\n    await this._refreshOwnedProjects(session);\n    return res;\n  }\n  async _refreshUser(session) {\n    await this._refreshSession(session);\n  }\n  async _refreshSession(session) {\n    await this._currentUserCache.refresh([session]);\n  }\n  async _refreshUsers() {\n  }\n  async _refreshProject() {\n    await this._currentProjectCache.refresh([]);\n  }\n  async _refreshOwnedProjects(session) {\n    await this._ownedProjectsCache.refresh([session]);\n  }\n  static get [_common_js__WEBPACK_IMPORTED_MODULE_28__.stackAppInternalsSymbol]() {\n    return {\n      fromClientJson: (json) => {\n        const providedCheckString = JSON.stringify((0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_7__.omit)(json, [\n          /* none currently */\n        ]));\n        const existing = allClientApps.get(json.uniqueIdentifier);\n        if (existing) {\n          const [existingCheckString, clientApp] = existing;\n          if (existingCheckString !== void 0 && existingCheckString !== providedCheckString) {\n            throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"The provided app JSON does not match the configuration of the existing client app with the same unique identifier\", { providedObj: json, existingString: existingCheckString });\n          }\n          return clientApp;\n        }\n        return new __StackClientAppImplIncomplete({\n          ...json,\n          checkString: providedCheckString\n        });\n      }\n    };\n  }\n  get [_common_js__WEBPACK_IMPORTED_MODULE_28__.stackAppInternalsSymbol]() {\n    return {\n      toClientJson: () => {\n        if (!(\"publishableClientKey\" in this._interface.options)) {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Cannot serialize to JSON from an application without a publishable client key\");\n        }\n        if (typeof this._redirectMethod !== \"string\") {\n          throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_5__.StackAssertionError(\"Cannot serialize to JSON from an application with a non-string redirect method\");\n        }\n        return {\n          baseUrl: this._options.baseUrl,\n          projectId: this.projectId,\n          publishableClientKey: this._interface.options.publishableClientKey,\n          tokenStore: this._tokenStoreInit,\n          urls: this._urlOptions,\n          oauthScopesOnSignIn: this._oauthScopesOnSignIn,\n          uniqueIdentifier: this._getUniqueIdentifier(),\n          redirectMethod: this._redirectMethod,\n          extraRequestHeaders: this._options.extraRequestHeaders\n        };\n      },\n      setCurrentUser: (userJsonPromise) => {\n        (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_8__.runAsynchronously)(async () => {\n          await this._currentUserCache.forceSetCachedValueAsync([await this._getSession()], _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_10__.Result.fromPromise(userJsonPromise));\n        });\n      },\n      sendRequest: async (path, requestOptions, requestType = \"client\") => {\n        return await this._interface.sendClientRequest(path, requestOptions, await this._getSession(), requestType);\n      }\n    };\n  }\n};\n/**\n * There is a circular dependency between the admin app and the client app, as the former inherits from the latter and\n * the latter needs to use the former when creating a new instance of an internal project.\n *\n * To break it, we set the admin app here lazily instead of importing it directly. This variable is set by ./index.ts,\n * which imports both this file and ./admin-app-impl.ts.\n */\n__StackClientAppImplIncomplete.LazyStackAdminAppImpl = { value: void 0 };\nvar _StackClientAppImplIncomplete = __StackClientAppImplIncomplete;\n\n//# sourceMappingURL=client-app-impl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clientVersion: () => (/* binding */ clientVersion),\n/* harmony export */   createCache: () => (/* binding */ createCache),\n/* harmony export */   createCacheBySession: () => (/* binding */ createCacheBySession),\n/* harmony export */   createEmptyTokenStore: () => (/* binding */ createEmptyTokenStore),\n/* harmony export */   getBaseUrl: () => (/* binding */ getBaseUrl),\n/* harmony export */   getDefaultExtraRequestHeaders: () => (/* binding */ getDefaultExtraRequestHeaders),\n/* harmony export */   getDefaultProjectId: () => (/* binding */ getDefaultProjectId),\n/* harmony export */   getDefaultPublishableClientKey: () => (/* binding */ getDefaultPublishableClientKey),\n/* harmony export */   getDefaultSecretServerKey: () => (/* binding */ getDefaultSecretServerKey),\n/* harmony export */   getDefaultSuperSecretAdminKey: () => (/* binding */ getDefaultSuperSecretAdminKey),\n/* harmony export */   getUrls: () => (/* binding */ getUrls),\n/* harmony export */   useAsyncCache: () => (/* binding */ useAsyncCache)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/caches */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/caches.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/env */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/env.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/objects */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/objects.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/react */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/react.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/stores */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/stores.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// src/lib/stack-app/apps/implementations/common.ts\n\n\n\n\n\n\n\n\nvar clientVersion = \"js @stackframe/stack@2.8.41\";\nif (clientVersion.startsWith(\"STACK_COMPILE_TIME\")) {\n  throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.StackAssertionError(\"Client version was not replaced. Something went wrong during build!\");\n}\nvar createCache = (fetcher) => {\n  return new _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_0__.AsyncCache(\n    async (dependencies) => await _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_5__.Result.fromThrowingAsync(async () => await fetcher(dependencies)),\n    {}\n  );\n};\nvar createCacheBySession = (fetcher) => {\n  return new _stackframe_stack_shared_dist_utils_caches__WEBPACK_IMPORTED_MODULE_0__.AsyncCache(\n    async ([session, ...extraDependencies]) => await _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_5__.Result.fromThrowingAsync(async () => await fetcher(session, extraDependencies)),\n    {\n      onSubscribe: ([session], refresh) => {\n        const handler = session.onInvalidate(() => refresh());\n        return () => handler.unsubscribe();\n      }\n    }\n  );\n};\nfunction getUrls(partial) {\n  const handler = partial.handler ?? \"/handler\";\n  const home = partial.home ?? \"/\";\n  const afterSignIn = partial.afterSignIn ?? home;\n  return {\n    handler,\n    signIn: `${handler}/sign-in`,\n    afterSignIn: home,\n    signUp: `${handler}/sign-up`,\n    afterSignUp: afterSignIn,\n    signOut: `${handler}/sign-out`,\n    afterSignOut: home,\n    emailVerification: `${handler}/email-verification`,\n    passwordReset: `${handler}/password-reset`,\n    forgotPassword: `${handler}/forgot-password`,\n    oauthCallback: `${handler}/oauth-callback`,\n    magicLinkCallback: `${handler}/magic-link-callback`,\n    home,\n    accountSettings: `${handler}/account-settings`,\n    error: `${handler}/error`,\n    teamInvitation: `${handler}/team-invitation`,\n    mfa: `${handler}/mfa`,\n    ...(0,_stackframe_stack_shared_dist_utils_objects__WEBPACK_IMPORTED_MODULE_3__.filterUndefined)(partial)\n  };\n}\nfunction getDefaultProjectId() {\n  return \"d361ac68-22e9-4507-93a5-ec9697dba04a\" || 0 || 0;\n}\nfunction getDefaultPublishableClientKey() {\n  return \"pck_25df23aqkpdymvp0ahkwa2b7b0320pc10mrjdmg9x0ze0\" || 0 || 0;\n}\nfunction getDefaultSecretServerKey() {\n  return process.env.STACK_SECRET_SERVER_KEY || (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(new Error(\"No secret server key provided. Please copy your key from the Stack dashboard and put it in the STACK_SECRET_SERVER_KEY environment variable.\"));\n}\nfunction getDefaultSuperSecretAdminKey() {\n  return process.env.STACK_SUPER_SECRET_ADMIN_KEY || (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(new Error(\"No super secret admin key provided. Please copy your key from the Stack dashboard and put it in the STACK_SUPER_SECRET_ADMIN_KEY environment variable.\"));\n}\nfunction getDefaultExtraRequestHeaders() {\n  return JSON.parse(process.env.NEXT_PUBLIC_STACK_EXTRA_REQUEST_HEADERS || process.env.STACK_EXTRA_REQUEST_HEADERS || \"{}\");\n}\nfunction getBaseUrl(userSpecifiedBaseUrl) {\n  let url;\n  if (userSpecifiedBaseUrl) {\n    if (typeof userSpecifiedBaseUrl === \"string\") {\n      url = userSpecifiedBaseUrl;\n    } else {\n      if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n        url = userSpecifiedBaseUrl.browser;\n      } else {\n        url = userSpecifiedBaseUrl.server;\n      }\n    }\n  } else {\n    if ((0,_stackframe_stack_shared_dist_utils_env__WEBPACK_IMPORTED_MODULE_1__.isBrowserLike)()) {\n      url = process.env.NEXT_PUBLIC_BROWSER_STACK_API_URL || process.env.NEXT_PUBLIC_STACK_API_URL_BROWSER || process.env.STACK_API_URL_BROWSER;\n    } else {\n      url = process.env.NEXT_PUBLIC_SERVER_STACK_API_URL || process.env.NEXT_PUBLIC_STACK_API_URL_SERVER || process.env.STACK_API_URL_SERVER;\n    }\n    url = url || process.env.NEXT_PUBLIC_STACK_API_URL || process.env.STACK_API_URL || process.env.NEXT_PUBLIC_STACK_URL || defaultBaseUrl;\n  }\n  return url.endsWith(\"/\") ? url.slice(0, -1) : url;\n}\nvar defaultBaseUrl = \"https://api.stack-auth.com\";\nfunction createEmptyTokenStore() {\n  return new _stackframe_stack_shared_dist_utils_stores__WEBPACK_IMPORTED_MODULE_6__.Store({\n    refreshToken: null,\n    accessToken: null\n  });\n}\nvar cachePromiseByHookId = /* @__PURE__ */ new Map();\nfunction useAsyncCache(cache, dependencies, caller) {\n  (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_4__.suspendIfSsr)(caller);\n  const id = react__WEBPACK_IMPORTED_MODULE_7___default().useId();\n  react__WEBPACK_IMPORTED_MODULE_7___default().useEffect(() => {\n    cachePromiseByHookId.delete(id);\n  }, [...dependencies, id]);\n  const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)((cb) => {\n    const { unsubscribe } = cache.onStateChange(dependencies, () => {\n      cachePromiseByHookId.delete(id);\n      cb();\n    });\n    return unsubscribe;\n  }, [cache, ...dependencies]);\n  const getSnapshot = (0,react__WEBPACK_IMPORTED_MODULE_7__.useCallback)(() => {\n    if (!cachePromiseByHookId.has(id)) {\n      cachePromiseByHookId.set(id, cache.getOrWait(dependencies, \"read-write\"));\n    }\n    return cachePromiseByHookId.get(id);\n  }, [cache, ...dependencies]);\n  const promise = react__WEBPACK_IMPORTED_MODULE_7___default().useSyncExternalStore(\n    subscribe,\n    getSnapshot,\n    () => (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.throwErr)(new Error(\"getServerSnapshot should never be called in useAsyncCache because we restrict to CSR earlier\"))\n  );\n  const result = react__WEBPACK_IMPORTED_MODULE_7___default().use(promise);\n  if (result.status === \"error\") {\n    const error = result.error;\n    if (error instanceof Error && !error.__stackHasConcatenatedStacktraces) {\n      (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_2__.concatStacktraces)(error, new Error());\n      error.__stackHasConcatenatedStacktraces = true;\n    }\n    throw error;\n  }\n  return result.data;\n}\n\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwcHMvaW1wbGVtZW50YXRpb25zL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDd0U7QUFDQTtBQUNzQztBQUNoQztBQUNMO0FBQ0o7QUFDRjtBQUN4QjtBQUMzQztBQUNBO0FBQ0EsWUFBWSwyRkFBbUI7QUFDL0I7QUFDQTtBQUNBLGFBQWEsa0ZBQVU7QUFDdkIsa0NBQWtDLCtFQUFNO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrRkFBVTtBQUN2QixxREFBcUQsK0VBQU07QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGdCQUFnQixRQUFRO0FBQ3hCO0FBQ0EsMEJBQTBCLFFBQVE7QUFDbEMsc0JBQXNCLFFBQVE7QUFDOUIsdUJBQXVCLFFBQVE7QUFDL0Isc0JBQXNCLFFBQVE7QUFDOUIsMEJBQTBCLFFBQVE7QUFDbEM7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQyxjQUFjLFFBQVE7QUFDdEIsdUJBQXVCLFFBQVE7QUFDL0IsWUFBWSxRQUFRO0FBQ3BCLE9BQU8sNEZBQWU7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzQ0FBd0MsSUFBSSxDQUE0QixJQUFJLENBQWdQO0FBQ3JVO0FBQ0E7QUFDQSxTQUFTLG1EQUFvRCxJQUFJLENBQXdDLElBQUksQ0FBc1Q7QUFDbmE7QUFDQTtBQUNBLFNBQVMsT0FBTyxnQ0FBZ0Msb0ZBQVE7QUFDeEQ7QUFDQTtBQUNBLFNBQVMsT0FBTyxxQ0FBcUMsb0ZBQVE7QUFDN0Q7QUFDQTtBQUNBLG9CQUFvQixPQUFPLGdEQUFnRCxPQUFPLHVDQUF1QztBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sVUFBVSxzRkFBYTtBQUN2QjtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osUUFBUSxzRkFBYTtBQUNyQixZQUFZLE9BQU8sMENBQTBDLE9BQU8sMENBQTBDLE9BQU87QUFDckgsTUFBTTtBQUNOLFlBQVksT0FBTyx5Q0FBeUMsT0FBTyx5Q0FBeUMsT0FBTztBQUNuSDtBQUNBLGlCQUFpQixPQUFPLGtDQUFrQyxPQUFPLHNCQUFzQixPQUFPO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDZFQUFLO0FBQ2xCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsRUFBRSx1RkFBWTtBQUNkLGFBQWEsa0RBQVc7QUFDeEIsRUFBRSxzREFBZTtBQUNqQjtBQUNBLEdBQUc7QUFDSCxvQkFBb0Isa0RBQVc7QUFDL0IsWUFBWSxjQUFjO0FBQzFCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxHQUFHO0FBQ0gsc0JBQXNCLGtEQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILGtCQUFrQixpRUFBMEI7QUFDNUM7QUFDQTtBQUNBLFVBQVUsb0ZBQVE7QUFDbEI7QUFDQSxpQkFBaUIsZ0RBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsTUFBTSw2RkFBaUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBY0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFja1xcZGlzdFxcZXNtXFxsaWJcXHN0YWNrLWFwcFxcYXBwc1xcaW1wbGVtZW50YXRpb25zXFxjb21tb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9zdGFjay1hcHAvYXBwcy9pbXBsZW1lbnRhdGlvbnMvY29tbW9uLnRzXG5pbXBvcnQgeyBBc3luY0NhY2hlIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL2NhY2hlc1wiO1xuaW1wb3J0IHsgaXNCcm93c2VyTGlrZSB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9lbnZcIjtcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IsIGNvbmNhdFN0YWNrdHJhY2VzLCB0aHJvd0VyciB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9lcnJvcnNcIjtcbmltcG9ydCB7IGZpbHRlclVuZGVmaW5lZCB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9vYmplY3RzXCI7XG5pbXBvcnQgeyBzdXNwZW5kSWZTc3IgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvcmVhY3RcIjtcbmltcG9ydCB7IFJlc3VsdCB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9yZXN1bHRzXCI7XG5pbXBvcnQgeyBTdG9yZSB9IGZyb20gXCJAc3RhY2tmcmFtZS9zdGFjay1zaGFyZWQvZGlzdC91dGlscy9zdG9yZXNcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xudmFyIGNsaWVudFZlcnNpb24gPSBcImpzIEBzdGFja2ZyYW1lL3N0YWNrQDIuOC40MVwiO1xuaWYgKGNsaWVudFZlcnNpb24uc3RhcnRzV2l0aChcIlNUQUNLX0NPTVBJTEVfVElNRVwiKSkge1xuICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihcIkNsaWVudCB2ZXJzaW9uIHdhcyBub3QgcmVwbGFjZWQuIFNvbWV0aGluZyB3ZW50IHdyb25nIGR1cmluZyBidWlsZCFcIik7XG59XG52YXIgY3JlYXRlQ2FjaGUgPSAoZmV0Y2hlcikgPT4ge1xuICByZXR1cm4gbmV3IEFzeW5jQ2FjaGUoXG4gICAgYXN5bmMgKGRlcGVuZGVuY2llcykgPT4gYXdhaXQgUmVzdWx0LmZyb21UaHJvd2luZ0FzeW5jKGFzeW5jICgpID0+IGF3YWl0IGZldGNoZXIoZGVwZW5kZW5jaWVzKSksXG4gICAge31cbiAgKTtcbn07XG52YXIgY3JlYXRlQ2FjaGVCeVNlc3Npb24gPSAoZmV0Y2hlcikgPT4ge1xuICByZXR1cm4gbmV3IEFzeW5jQ2FjaGUoXG4gICAgYXN5bmMgKFtzZXNzaW9uLCAuLi5leHRyYURlcGVuZGVuY2llc10pID0+IGF3YWl0IFJlc3VsdC5mcm9tVGhyb3dpbmdBc3luYyhhc3luYyAoKSA9PiBhd2FpdCBmZXRjaGVyKHNlc3Npb24sIGV4dHJhRGVwZW5kZW5jaWVzKSksXG4gICAge1xuICAgICAgb25TdWJzY3JpYmU6IChbc2Vzc2lvbl0sIHJlZnJlc2gpID0+IHtcbiAgICAgICAgY29uc3QgaGFuZGxlciA9IHNlc3Npb24ub25JbnZhbGlkYXRlKCgpID0+IHJlZnJlc2goKSk7XG4gICAgICAgIHJldHVybiAoKSA9PiBoYW5kbGVyLnVuc3Vic2NyaWJlKCk7XG4gICAgICB9XG4gICAgfVxuICApO1xufTtcbmZ1bmN0aW9uIGdldFVybHMocGFydGlhbCkge1xuICBjb25zdCBoYW5kbGVyID0gcGFydGlhbC5oYW5kbGVyID8/IFwiL2hhbmRsZXJcIjtcbiAgY29uc3QgaG9tZSA9IHBhcnRpYWwuaG9tZSA/PyBcIi9cIjtcbiAgY29uc3QgYWZ0ZXJTaWduSW4gPSBwYXJ0aWFsLmFmdGVyU2lnbkluID8/IGhvbWU7XG4gIHJldHVybiB7XG4gICAgaGFuZGxlcixcbiAgICBzaWduSW46IGAke2hhbmRsZXJ9L3NpZ24taW5gLFxuICAgIGFmdGVyU2lnbkluOiBob21lLFxuICAgIHNpZ25VcDogYCR7aGFuZGxlcn0vc2lnbi11cGAsXG4gICAgYWZ0ZXJTaWduVXA6IGFmdGVyU2lnbkluLFxuICAgIHNpZ25PdXQ6IGAke2hhbmRsZXJ9L3NpZ24tb3V0YCxcbiAgICBhZnRlclNpZ25PdXQ6IGhvbWUsXG4gICAgZW1haWxWZXJpZmljYXRpb246IGAke2hhbmRsZXJ9L2VtYWlsLXZlcmlmaWNhdGlvbmAsXG4gICAgcGFzc3dvcmRSZXNldDogYCR7aGFuZGxlcn0vcGFzc3dvcmQtcmVzZXRgLFxuICAgIGZvcmdvdFBhc3N3b3JkOiBgJHtoYW5kbGVyfS9mb3Jnb3QtcGFzc3dvcmRgLFxuICAgIG9hdXRoQ2FsbGJhY2s6IGAke2hhbmRsZXJ9L29hdXRoLWNhbGxiYWNrYCxcbiAgICBtYWdpY0xpbmtDYWxsYmFjazogYCR7aGFuZGxlcn0vbWFnaWMtbGluay1jYWxsYmFja2AsXG4gICAgaG9tZSxcbiAgICBhY2NvdW50U2V0dGluZ3M6IGAke2hhbmRsZXJ9L2FjY291bnQtc2V0dGluZ3NgLFxuICAgIGVycm9yOiBgJHtoYW5kbGVyfS9lcnJvcmAsXG4gICAgdGVhbUludml0YXRpb246IGAke2hhbmRsZXJ9L3RlYW0taW52aXRhdGlvbmAsXG4gICAgbWZhOiBgJHtoYW5kbGVyfS9tZmFgLFxuICAgIC4uLmZpbHRlclVuZGVmaW5lZChwYXJ0aWFsKVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0RGVmYXVsdFByb2plY3RJZCgpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NUQUNLX1BST0pFQ1RfSUQgfHwgcHJvY2Vzcy5lbnYuU1RBQ0tfUFJPSkVDVF9JRCB8fCB0aHJvd0VycihuZXcgRXJyb3IoXCJXZWxjb21lIHRvIFN0YWNrIEF1dGghIEl0IHNlZW1zIHRoYXQgeW91IGhhdmVuJ3QgcHJvdmlkZWQgYSBwcm9qZWN0IElELiBQbGVhc2UgY3JlYXRlIGEgcHJvamVjdCBvbiB0aGUgU3RhY2sgZGFzaGJvYXJkIGF0IGh0dHBzOi8vYXBwLnN0YWNrLWF1dGguY29tIGFuZCBwdXQgaXQgaW4gdGhlIE5FWFRfUFVCTElDX1NUQUNLX1BST0pFQ1RfSUQgZW52aXJvbm1lbnQgdmFyaWFibGUuXCIpKTtcbn1cbmZ1bmN0aW9uIGdldERlZmF1bHRQdWJsaXNoYWJsZUNsaWVudEtleSgpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NUQUNLX1BVQkxJU0hBQkxFX0NMSUVOVF9LRVkgfHwgcHJvY2Vzcy5lbnYuU1RBQ0tfUFVCTElTSEFCTEVfQ0xJRU5UX0tFWSB8fCB0aHJvd0VycihuZXcgRXJyb3IoXCJXZWxjb21lIHRvIFN0YWNrIEF1dGghIEl0IHNlZW1zIHRoYXQgeW91IGhhdmVuJ3QgcHJvdmlkZWQgYSBwdWJsaXNoYWJsZSBjbGllbnQga2V5LiBQbGVhc2UgY3JlYXRlIGFuIEFQSSBrZXkgZm9yIHlvdXIgcHJvamVjdCBvbiB0aGUgU3RhY2sgZGFzaGJvYXJkIGF0IGh0dHBzOi8vYXBwLnN0YWNrLWF1dGguY29tIGFuZCBjb3B5IHlvdXIgcHVibGlzaGFibGUgY2xpZW50IGtleSBpbnRvIHRoZSBORVhUX1BVQkxJQ19TVEFDS19QVUJMSVNIQUJMRV9DTElFTlRfS0VZIGVudmlyb25tZW50IHZhcmlhYmxlLlwiKSk7XG59XG5mdW5jdGlvbiBnZXREZWZhdWx0U2VjcmV0U2VydmVyS2V5KCkge1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuU1RBQ0tfU0VDUkVUX1NFUlZFUl9LRVkgfHwgdGhyb3dFcnIobmV3IEVycm9yKFwiTm8gc2VjcmV0IHNlcnZlciBrZXkgcHJvdmlkZWQuIFBsZWFzZSBjb3B5IHlvdXIga2V5IGZyb20gdGhlIFN0YWNrIGRhc2hib2FyZCBhbmQgcHV0IGl0IGluIHRoZSBTVEFDS19TRUNSRVRfU0VSVkVSX0tFWSBlbnZpcm9ubWVudCB2YXJpYWJsZS5cIikpO1xufVxuZnVuY3Rpb24gZ2V0RGVmYXVsdFN1cGVyU2VjcmV0QWRtaW5LZXkoKSB7XG4gIHJldHVybiBwcm9jZXNzLmVudi5TVEFDS19TVVBFUl9TRUNSRVRfQURNSU5fS0VZIHx8IHRocm93RXJyKG5ldyBFcnJvcihcIk5vIHN1cGVyIHNlY3JldCBhZG1pbiBrZXkgcHJvdmlkZWQuIFBsZWFzZSBjb3B5IHlvdXIga2V5IGZyb20gdGhlIFN0YWNrIGRhc2hib2FyZCBhbmQgcHV0IGl0IGluIHRoZSBTVEFDS19TVVBFUl9TRUNSRVRfQURNSU5fS0VZIGVudmlyb25tZW50IHZhcmlhYmxlLlwiKSk7XG59XG5mdW5jdGlvbiBnZXREZWZhdWx0RXh0cmFSZXF1ZXN0SGVhZGVycygpIHtcbiAgcmV0dXJuIEpTT04ucGFyc2UocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RBQ0tfRVhUUkFfUkVRVUVTVF9IRUFERVJTIHx8IHByb2Nlc3MuZW52LlNUQUNLX0VYVFJBX1JFUVVFU1RfSEVBREVSUyB8fCBcInt9XCIpO1xufVxuZnVuY3Rpb24gZ2V0QmFzZVVybCh1c2VyU3BlY2lmaWVkQmFzZVVybCkge1xuICBsZXQgdXJsO1xuICBpZiAodXNlclNwZWNpZmllZEJhc2VVcmwpIHtcbiAgICBpZiAodHlwZW9mIHVzZXJTcGVjaWZpZWRCYXNlVXJsID09PSBcInN0cmluZ1wiKSB7XG4gICAgICB1cmwgPSB1c2VyU3BlY2lmaWVkQmFzZVVybDtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGlzQnJvd3Nlckxpa2UoKSkge1xuICAgICAgICB1cmwgPSB1c2VyU3BlY2lmaWVkQmFzZVVybC5icm93c2VyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdXJsID0gdXNlclNwZWNpZmllZEJhc2VVcmwuc2VydmVyO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoaXNCcm93c2VyTGlrZSgpKSB7XG4gICAgICB1cmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19CUk9XU0VSX1NUQUNLX0FQSV9VUkwgfHwgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RBQ0tfQVBJX1VSTF9CUk9XU0VSIHx8IHByb2Nlc3MuZW52LlNUQUNLX0FQSV9VUkxfQlJPV1NFUjtcbiAgICB9IGVsc2Uge1xuICAgICAgdXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0VSVkVSX1NUQUNLX0FQSV9VUkwgfHwgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RBQ0tfQVBJX1VSTF9TRVJWRVIgfHwgcHJvY2Vzcy5lbnYuU1RBQ0tfQVBJX1VSTF9TRVJWRVI7XG4gICAgfVxuICAgIHVybCA9IHVybCB8fCBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVEFDS19BUElfVVJMIHx8IHByb2Nlc3MuZW52LlNUQUNLX0FQSV9VUkwgfHwgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1RBQ0tfVVJMIHx8IGRlZmF1bHRCYXNlVXJsO1xuICB9XG4gIHJldHVybiB1cmwuZW5kc1dpdGgoXCIvXCIpID8gdXJsLnNsaWNlKDAsIC0xKSA6IHVybDtcbn1cbnZhciBkZWZhdWx0QmFzZVVybCA9IFwiaHR0cHM6Ly9hcGkuc3RhY2stYXV0aC5jb21cIjtcbmZ1bmN0aW9uIGNyZWF0ZUVtcHR5VG9rZW5TdG9yZSgpIHtcbiAgcmV0dXJuIG5ldyBTdG9yZSh7XG4gICAgcmVmcmVzaFRva2VuOiBudWxsLFxuICAgIGFjY2Vzc1Rva2VuOiBudWxsXG4gIH0pO1xufVxudmFyIGNhY2hlUHJvbWlzZUJ5SG9va0lkID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbmZ1bmN0aW9uIHVzZUFzeW5jQ2FjaGUoY2FjaGUsIGRlcGVuZGVuY2llcywgY2FsbGVyKSB7XG4gIHN1c3BlbmRJZlNzcihjYWxsZXIpO1xuICBjb25zdCBpZCA9IFJlYWN0LnVzZUlkKCk7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY2FjaGVQcm9taXNlQnlIb29rSWQuZGVsZXRlKGlkKTtcbiAgfSwgWy4uLmRlcGVuZGVuY2llcywgaWRdKTtcbiAgY29uc3Qgc3Vic2NyaWJlID0gdXNlQ2FsbGJhY2soKGNiKSA9PiB7XG4gICAgY29uc3QgeyB1bnN1YnNjcmliZSB9ID0gY2FjaGUub25TdGF0ZUNoYW5nZShkZXBlbmRlbmNpZXMsICgpID0+IHtcbiAgICAgIGNhY2hlUHJvbWlzZUJ5SG9va0lkLmRlbGV0ZShpZCk7XG4gICAgICBjYigpO1xuICAgIH0pO1xuICAgIHJldHVybiB1bnN1YnNjcmliZTtcbiAgfSwgW2NhY2hlLCAuLi5kZXBlbmRlbmNpZXNdKTtcbiAgY29uc3QgZ2V0U25hcHNob3QgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgaWYgKCFjYWNoZVByb21pc2VCeUhvb2tJZC5oYXMoaWQpKSB7XG4gICAgICBjYWNoZVByb21pc2VCeUhvb2tJZC5zZXQoaWQsIGNhY2hlLmdldE9yV2FpdChkZXBlbmRlbmNpZXMsIFwicmVhZC13cml0ZVwiKSk7XG4gICAgfVxuICAgIHJldHVybiBjYWNoZVByb21pc2VCeUhvb2tJZC5nZXQoaWQpO1xuICB9LCBbY2FjaGUsIC4uLmRlcGVuZGVuY2llc10pO1xuICBjb25zdCBwcm9taXNlID0gUmVhY3QudXNlU3luY0V4dGVybmFsU3RvcmUoXG4gICAgc3Vic2NyaWJlLFxuICAgIGdldFNuYXBzaG90LFxuICAgICgpID0+IHRocm93RXJyKG5ldyBFcnJvcihcImdldFNlcnZlclNuYXBzaG90IHNob3VsZCBuZXZlciBiZSBjYWxsZWQgaW4gdXNlQXN5bmNDYWNoZSBiZWNhdXNlIHdlIHJlc3RyaWN0IHRvIENTUiBlYXJsaWVyXCIpKVxuICApO1xuICBjb25zdCByZXN1bHQgPSBSZWFjdC51c2UocHJvbWlzZSk7XG4gIGlmIChyZXN1bHQuc3RhdHVzID09PSBcImVycm9yXCIpIHtcbiAgICBjb25zdCBlcnJvciA9IHJlc3VsdC5lcnJvcjtcbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciAmJiAhZXJyb3IuX19zdGFja0hhc0NvbmNhdGVuYXRlZFN0YWNrdHJhY2VzKSB7XG4gICAgICBjb25jYXRTdGFja3RyYWNlcyhlcnJvciwgbmV3IEVycm9yKCkpO1xuICAgICAgZXJyb3IuX19zdGFja0hhc0NvbmNhdGVuYXRlZFN0YWNrdHJhY2VzID0gdHJ1ZTtcbiAgICB9XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdC5kYXRhO1xufVxuZXhwb3J0IHtcbiAgY2xpZW50VmVyc2lvbixcbiAgY3JlYXRlQ2FjaGUsXG4gIGNyZWF0ZUNhY2hlQnlTZXNzaW9uLFxuICBjcmVhdGVFbXB0eVRva2VuU3RvcmUsXG4gIGdldEJhc2VVcmwsXG4gIGdldERlZmF1bHRFeHRyYVJlcXVlc3RIZWFkZXJzLFxuICBnZXREZWZhdWx0UHJvamVjdElkLFxuICBnZXREZWZhdWx0UHVibGlzaGFibGVDbGllbnRLZXksXG4gIGdldERlZmF1bHRTZWNyZXRTZXJ2ZXJLZXksXG4gIGdldERlZmF1bHRTdXBlclNlY3JldEFkbWluS2V5LFxuICBnZXRVcmxzLFxuICB1c2VBc3luY0NhY2hlXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tbW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _StackAdminAppImpl: () => (/* binding */ _StackAdminAppImpl),\n/* harmony export */   _StackClientAppImpl: () => (/* binding */ _StackClientAppImpl),\n/* harmony export */   _StackServerAppImpl: () => (/* binding */ _StackServerAppImpl)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/compile-time */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/compile-time.js\");\n/* harmony import */ var _admin_app_impl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./admin-app-impl.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/admin-app-impl.js\");\n/* harmony import */ var _client_app_impl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client-app-impl.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js\");\n/* harmony import */ var _server_app_impl_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./server-app-impl.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js\");\n// src/lib/stack-app/apps/implementations/index.ts\n\n\n\n\nfunction complete() {\n  _client_app_impl_js__WEBPACK_IMPORTED_MODULE_1__._StackClientAppImplIncomplete.LazyStackAdminAppImpl.value = _admin_app_impl_js__WEBPACK_IMPORTED_MODULE_2__._StackAdminAppImplIncomplete;\n  return {\n    _StackAdminAppImpl: (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_0__.scrambleDuringCompileTime)(_admin_app_impl_js__WEBPACK_IMPORTED_MODULE_2__._StackAdminAppImplIncomplete),\n    _StackClientAppImpl: (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_0__.scrambleDuringCompileTime)(_client_app_impl_js__WEBPACK_IMPORTED_MODULE_1__._StackClientAppImplIncomplete),\n    _StackServerAppImpl: (0,_stackframe_stack_shared_dist_utils_compile_time__WEBPACK_IMPORTED_MODULE_0__.scrambleDuringCompileTime)(_server_app_impl_js__WEBPACK_IMPORTED_MODULE_3__._StackServerAppImplIncomplete)\n  };\n}\nvar {\n  _StackAdminAppImpl,\n  _StackClientAppImpl,\n  _StackServerAppImpl\n} = complete();\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwcHMvaW1wbGVtZW50YXRpb25zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUM2RjtBQUMxQjtBQUNFO0FBQ0E7QUFDckU7QUFDQSxFQUFFLDhFQUE2QiwrQkFBK0IsNEVBQTRCO0FBQzFGO0FBQ0Esd0JBQXdCLDJHQUF5QixDQUFDLDRFQUE0QjtBQUM5RSx5QkFBeUIsMkdBQXlCLENBQUMsOEVBQTZCO0FBQ2hGLHlCQUF5QiwyR0FBeUIsQ0FBQyw4RUFBNkI7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUtBO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxzdGFjay1hcHBcXGFwcHNcXGltcGxlbWVudGF0aW9uc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9zdGFjay1hcHAvYXBwcy9pbXBsZW1lbnRhdGlvbnMvaW5kZXgudHNcbmltcG9ydCB7IHNjcmFtYmxlRHVyaW5nQ29tcGlsZVRpbWUgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvY29tcGlsZS10aW1lXCI7XG5pbXBvcnQgeyBfU3RhY2tBZG1pbkFwcEltcGxJbmNvbXBsZXRlIH0gZnJvbSBcIi4vYWRtaW4tYXBwLWltcGwuanNcIjtcbmltcG9ydCB7IF9TdGFja0NsaWVudEFwcEltcGxJbmNvbXBsZXRlIH0gZnJvbSBcIi4vY2xpZW50LWFwcC1pbXBsLmpzXCI7XG5pbXBvcnQgeyBfU3RhY2tTZXJ2ZXJBcHBJbXBsSW5jb21wbGV0ZSB9IGZyb20gXCIuL3NlcnZlci1hcHAtaW1wbC5qc1wiO1xuZnVuY3Rpb24gY29tcGxldGUoKSB7XG4gIF9TdGFja0NsaWVudEFwcEltcGxJbmNvbXBsZXRlLkxhenlTdGFja0FkbWluQXBwSW1wbC52YWx1ZSA9IF9TdGFja0FkbWluQXBwSW1wbEluY29tcGxldGU7XG4gIHJldHVybiB7XG4gICAgX1N0YWNrQWRtaW5BcHBJbXBsOiBzY3JhbWJsZUR1cmluZ0NvbXBpbGVUaW1lKF9TdGFja0FkbWluQXBwSW1wbEluY29tcGxldGUpLFxuICAgIF9TdGFja0NsaWVudEFwcEltcGw6IHNjcmFtYmxlRHVyaW5nQ29tcGlsZVRpbWUoX1N0YWNrQ2xpZW50QXBwSW1wbEluY29tcGxldGUpLFxuICAgIF9TdGFja1NlcnZlckFwcEltcGw6IHNjcmFtYmxlRHVyaW5nQ29tcGlsZVRpbWUoX1N0YWNrU2VydmVyQXBwSW1wbEluY29tcGxldGUpXG4gIH07XG59XG52YXIge1xuICBfU3RhY2tBZG1pbkFwcEltcGwsXG4gIF9TdGFja0NsaWVudEFwcEltcGwsXG4gIF9TdGFja1NlcnZlckFwcEltcGxcbn0gPSBjb21wbGV0ZSgpO1xuZXhwb3J0IHtcbiAgX1N0YWNrQWRtaW5BcHBJbXBsLFxuICBfU3RhY2tDbGllbnRBcHBJbXBsLFxuICBfU3RhY2tTZXJ2ZXJBcHBJbXBsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _StackServerAppImplIncomplete: () => (/* binding */ _StackServerAppImplIncomplete)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/index.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/promises */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/promises.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/react */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/react.js\");\n/* harmony import */ var _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/results */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/results.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _utils_url_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../utils/url.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\");\n/* harmony import */ var _api_keys_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../api-keys/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/api-keys/index.js\");\n/* harmony import */ var _contact_channels_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../contact-channels/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js\");\n/* harmony import */ var _teams_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../teams/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js\");\n/* harmony import */ var _users_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../users/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js\");\n/* harmony import */ var _client_app_impl_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client-app-impl.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/client-app-impl.js\");\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/common.js\");\n// src/lib/stack-app/apps/implementations/server-app-impl.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar _StackServerAppImplIncomplete = class extends _client_app_impl_js__WEBPACK_IMPORTED_MODULE_6__._StackClientAppImplIncomplete {\n  constructor(options) {\n    super(\"interface\" in options ? {\n      interface: options.interface,\n      tokenStore: options.tokenStore,\n      urls: options.urls,\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn\n    } : {\n      interface: new _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.StackServerInterface({\n        getBaseUrl: () => (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getBaseUrl)(options.baseUrl),\n        projectId: options.projectId ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultProjectId)(),\n        extraRequestHeaders: options.extraRequestHeaders ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultExtraRequestHeaders)(),\n        clientVersion: _common_js__WEBPACK_IMPORTED_MODULE_7__.clientVersion,\n        publishableClientKey: options.publishableClientKey ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultPublishableClientKey)(),\n        secretServerKey: options.secretServerKey ?? (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.getDefaultSecretServerKey)()\n      }),\n      baseUrl: options.baseUrl,\n      extraRequestHeaders: options.extraRequestHeaders,\n      projectId: options.projectId,\n      publishableClientKey: options.publishableClientKey,\n      tokenStore: options.tokenStore,\n      urls: options.urls,\n      oauthScopesOnSignIn: options.oauthScopesOnSignIn,\n      redirectMethod: options.redirectMethod\n    });\n    // TODO override the client user cache to use the server user cache, so we save some requests\n    this._currentServerUserCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCacheBySession)(async (session) => {\n      if (session.isKnownToBeInvalid()) {\n        return null;\n      }\n      return await this._interface.getServerUserByToken(session);\n    });\n    this._serverUsersCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([cursor, limit, orderBy, desc, query, includeAnonymous]) => {\n      return await this._interface.listServerUsers({ cursor, limit, orderBy, desc, query, includeAnonymous });\n    });\n    this._serverUserCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([userId]) => {\n      const user = await this._interface.getServerUserById(userId);\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.or(user, null);\n    });\n    this._serverTeamsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([userId]) => {\n      return await this._interface.listServerTeams({ userId });\n    });\n    this._serverTeamUserPermissionsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([teamId, userId, recursive]) => {\n      return await this._interface.listServerTeamPermissions({ teamId, userId, recursive }, null);\n    });\n    this._serverUserProjectPermissionsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([userId, recursive]) => {\n      return await this._interface.listServerProjectPermissions({ userId, recursive }, null);\n    });\n    this._serverUserOAuthConnectionAccessTokensCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId, providerId, scope]) => {\n        try {\n          const result = await this._interface.createServerProviderAccessToken(userId, providerId, scope || \"\");\n          return { accessToken: result.access_token };\n        } catch (err) {\n          if (!(_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.OAuthConnectionDoesNotHaveRequiredScope.isInstance(err) || _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.OAuthConnectionNotConnectedToUser.isInstance(err))) {\n            throw err;\n          }\n        }\n        return null;\n      }\n    );\n    this._serverUserOAuthConnectionCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId, providerId, scope, redirect]) => {\n        return await this._getUserOAuthConnectionCacheFn({\n          getUser: async () => _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUserCache.getOrWait([userId], \"write-only\")),\n          getOrWaitOAuthToken: async () => _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUserOAuthConnectionAccessTokensCache.getOrWait([userId, providerId, scope || \"\"], \"write-only\")),\n          useOAuthToken: () => (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverUserOAuthConnectionAccessTokensCache, [userId, providerId, scope || \"\"], \"user.useConnectedAccount()\"),\n          providerId,\n          scope,\n          redirect,\n          session: null\n        });\n      }\n    );\n    this._serverTeamMemberProfilesCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId]) => {\n        return await this._interface.listServerTeamMemberProfiles({ teamId });\n      }\n    );\n    this._serverTeamInvitationsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId]) => {\n        return await this._interface.listServerTeamInvitations({ teamId });\n      }\n    );\n    this._serverUserTeamProfileCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId, userId]) => {\n        return await this._interface.getServerTeamMemberProfile({ teamId, userId });\n      }\n    );\n    this._serverContactChannelsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId]) => {\n        return await this._interface.listServerContactChannels(userId);\n      }\n    );\n    this._serverNotificationCategoriesCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId]) => {\n        return await this._interface.listServerNotificationCategories(userId);\n      }\n    );\n    this._serverDataVaultStoreValueCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([storeId, key, secret]) => {\n      return await this._interface.getDataVaultStoreValue(secret, storeId, key);\n    });\n    this._serverUserApiKeysCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId]) => {\n        const result = await this._interface.listProjectApiKeys({\n          user_id: userId\n        }, null, \"server\");\n        return result;\n      }\n    );\n    this._serverTeamApiKeysCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId]) => {\n        const result = await this._interface.listProjectApiKeys({\n          team_id: teamId\n        }, null, \"server\");\n        return result;\n      }\n    );\n    this._convexIdentitySubjectCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([ctx]) => {\n        const identity = await ctx.auth.getUserIdentity();\n        return identity ? identity.subject : null;\n      }\n    );\n    this._serverCheckApiKeyCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(async ([type, apiKey]) => {\n      const result = await this._interface.checkProjectApiKey(\n        type,\n        apiKey,\n        null,\n        \"server\"\n      );\n      return result;\n    });\n    this._serverOAuthProvidersCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId]) => {\n        return await this._interface.listServerOAuthProviders({ user_id: userId });\n      }\n    );\n    this._serverTeamItemsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([teamId, itemId]) => {\n        return await this._interface.getItem({ teamId, itemId }, null);\n      }\n    );\n    this._serverUserItemsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([userId, itemId]) => {\n        return await this._interface.getItem({ userId, itemId }, null);\n      }\n    );\n    this._serverCustomItemsCache = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.createCache)(\n      async ([customCustomerId, itemId]) => {\n        return await this._interface.getItem({ customCustomerId, itemId }, null);\n      }\n    );\n  }\n  async _updateServerUser(userId, update) {\n    const result = await this._interface.updateServerUser(userId, (0,_users_index_js__WEBPACK_IMPORTED_MODULE_8__.serverUserUpdateOptionsToCrud)(update));\n    await this._refreshUsers();\n    return result;\n  }\n  _serverEditableTeamProfileFromCrud(crud) {\n    const app = this;\n    return {\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      async update(update) {\n        await app._interface.updateServerTeamMemberProfile({\n          teamId: crud.team_id,\n          userId: crud.user_id,\n          profile: {\n            display_name: update.displayName,\n            profile_image_url: update.profileImageUrl\n          }\n        });\n        await app._serverUserTeamProfileCache.refresh([crud.team_id, crud.user_id]);\n      }\n    };\n  }\n  _serverContactChannelFromCrud(userId, crud) {\n    const app = this;\n    return {\n      id: crud.id,\n      value: crud.value,\n      type: crud.type,\n      isVerified: crud.is_verified,\n      isPrimary: crud.is_primary,\n      usedForAuth: crud.used_for_auth,\n      async sendVerificationEmail(options) {\n        await app._interface.sendServerContactChannelVerificationEmail(userId, crud.id, options?.callbackUrl ?? (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_9__.constructRedirectUrl)(app.urls.emailVerification, \"callbackUrl\"));\n      },\n      async update(data) {\n        await app._interface.updateServerContactChannel(userId, crud.id, (0,_contact_channels_index_js__WEBPACK_IMPORTED_MODULE_10__.serverContactChannelUpdateOptionsToCrud)(data));\n        await Promise.all([\n          app._serverContactChannelsCache.refresh([userId]),\n          app._serverUserCache.refresh([userId])\n        ]);\n      },\n      async delete() {\n        await app._interface.deleteServerContactChannel(userId, crud.id);\n        await Promise.all([\n          app._serverContactChannelsCache.refresh([userId]),\n          app._serverUserCache.refresh([userId])\n        ]);\n      }\n    };\n  }\n  _serverNotificationCategoryFromCrud(userId, crud) {\n    const app = this;\n    return {\n      id: crud.notification_category_id,\n      name: crud.notification_category_name,\n      enabled: crud.enabled,\n      canDisable: crud.can_disable,\n      async setEnabled(enabled) {\n        await app._interface.setServerNotificationsEnabled(userId, crud.notification_category_id, enabled);\n        await app._serverNotificationCategoriesCache.refresh([userId]);\n      }\n    };\n  }\n  _serverOAuthProviderFromCrud(crud) {\n    const app = this;\n    return {\n      id: crud.id,\n      type: crud.type,\n      userId: crud.user_id,\n      accountId: crud.account_id,\n      email: crud.email,\n      allowSignIn: crud.allow_sign_in,\n      allowConnectedAccounts: crud.allow_connected_accounts,\n      async update(data) {\n        try {\n          await app._interface.updateServerOAuthProvider(crud.user_id, crud.id, {\n            account_id: data.accountId,\n            email: data.email,\n            allow_sign_in: data.allowSignIn,\n            allow_connected_accounts: data.allowConnectedAccounts\n          });\n          await app._serverOAuthProvidersCache.refresh([crud.user_id]);\n          return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.ok(void 0);\n        } catch (error) {\n          if (_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.OAuthProviderAccountIdAlreadyUsedForSignIn.isInstance(error)) {\n            return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.error(error);\n          }\n          throw error;\n        }\n      },\n      async delete() {\n        await app._interface.deleteServerOAuthProvider(crud.user_id, crud.id);\n        await app._serverOAuthProvidersCache.refresh([crud.user_id]);\n      }\n    };\n  }\n  _serverApiKeyFromCrud(crud) {\n    return {\n      ...this._baseApiKeyFromCrud(crud),\n      async revoke() {\n        await this.update({ revoked: true });\n      },\n      update: async (options) => {\n        await this._interface.updateProjectApiKey(\n          crud.type === \"team\" ? { team_id: crud.team_id } : { user_id: crud.user_id },\n          crud.id,\n          await (0,_api_keys_index_js__WEBPACK_IMPORTED_MODULE_11__.apiKeyUpdateOptionsToCrud)(crud.type, options),\n          null,\n          \"server\"\n        );\n        if (crud.type === \"team\") {\n          await this._serverTeamApiKeysCache.refresh([crud.team_id]);\n        } else {\n          await this._serverUserApiKeysCache.refresh([crud.user_id]);\n        }\n      }\n    };\n  }\n  _serverUserFromCrud(crud) {\n    const app = this;\n    async function getConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserOAuthConnectionCache.getOrWait([crud.id, id, scopeString || \"\", options?.or === \"redirect\"], \"write-only\"));\n    }\n    function useConnectedAccount(id, options) {\n      const scopeString = options?.scopes?.join(\" \");\n      return (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserOAuthConnectionCache, [crud.id, id, scopeString || \"\", options?.or === \"redirect\"], \"user.useConnectedAccount()\");\n    }\n    return {\n      ...super._createBaseUser(crud),\n      lastActiveAt: new Date(crud.last_active_at_millis),\n      serverMetadata: crud.server_metadata,\n      async setPrimaryEmail(email, options) {\n        await app._updateServerUser(crud.id, { primaryEmail: email, primaryEmailVerified: options?.verified });\n      },\n      async grantPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\" && permissionId) {\n          const scope = scopeOrPermissionId;\n          await app._interface.grantServerTeamUserPermission(scope.id, crud.id, permissionId);\n          for (const recursive of [true, false]) {\n            await app._serverTeamUserPermissionsCache.refresh([scope.id, crud.id, recursive]);\n          }\n        } else {\n          const pId = scopeOrPermissionId;\n          await app._interface.grantServerProjectPermission(crud.id, pId);\n          for (const recursive of [true, false]) {\n            await app._serverUserProjectPermissionsCache.refresh([crud.id, recursive]);\n          }\n        }\n      },\n      async revokePermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\" && permissionId) {\n          const scope = scopeOrPermissionId;\n          await app._interface.revokeServerTeamUserPermission(scope.id, crud.id, permissionId);\n          for (const recursive of [true, false]) {\n            await app._serverTeamUserPermissionsCache.refresh([scope.id, crud.id, recursive]);\n          }\n        } else {\n          const pId = scopeOrPermissionId;\n          await app._interface.revokeServerProjectPermission(crud.id, pId);\n          for (const recursive of [true, false]) {\n            await app._serverUserProjectPermissionsCache.refresh([crud.id, recursive]);\n          }\n        }\n      },\n      async delete() {\n        const res = await app._interface.deleteServerUser(crud.id);\n        await app._refreshUsers();\n        return res;\n      },\n      async createSession(options) {\n        const tokens = await app._interface.createServerUserSession(crud.id, options.expiresInMillis ?? 1e3 * 60 * 60 * 24 * 365, options.isImpersonation ?? false);\n        return {\n          async getTokens() {\n            return tokens;\n          }\n        };\n      },\n      async getActiveSessions() {\n        const sessions = await app._interface.listServerSessions(crud.id);\n        return sessions.map((session) => app._clientSessionFromCrud(session));\n      },\n      async revokeSession(sessionId) {\n        await app._interface.deleteServerSession(sessionId);\n      },\n      async setDisplayName(displayName) {\n        return await this.update({ displayName });\n      },\n      async setClientMetadata(metadata) {\n        return await this.update({ clientMetadata: metadata });\n      },\n      async setClientReadOnlyMetadata(metadata) {\n        return await this.update({ clientReadOnlyMetadata: metadata });\n      },\n      async setServerMetadata(metadata) {\n        return await this.update({ serverMetadata: metadata });\n      },\n      async setSelectedTeam(team) {\n        return await this.update({ selectedTeamId: team?.id ?? null });\n      },\n      getConnectedAccount,\n      useConnectedAccount,\n      // THIS_LINE_PLATFORM react-like\n      selectedTeam: crud.selected_team ? app._serverTeamFromCrud(crud.selected_team) : null,\n      async getTeam(teamId) {\n        const teams = await this.listTeams();\n        return teams.find((t) => t.id === teamId) ?? null;\n      },\n      useTeam(teamId) {\n        const teams = this.useTeams();\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n          return teams.find((t) => t.id === teamId) ?? null;\n        }, [teams, teamId]);\n      },\n      async listTeams() {\n        const teams = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamsCache.getOrWait([crud.id], \"write-only\"));\n        return teams.map((t) => app._serverTeamFromCrud(t));\n      },\n      useTeams() {\n        const teams = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamsCache, [crud.id], \"user.useTeams()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => teams.map((t) => app._serverTeamFromCrud(t)), [teams]);\n      },\n      createTeam: async (data) => {\n        const team = await app._interface.createServerTeam((0,_teams_index_js__WEBPACK_IMPORTED_MODULE_12__.serverTeamCreateOptionsToCrud)({\n          creatorUserId: crud.id,\n          ...data\n        }));\n        await app._serverTeamsCache.refresh([void 0]);\n        await app._updateServerUser(crud.id, { selectedTeamId: team.id });\n        return app._serverTeamFromCrud(team);\n      },\n      leaveTeam: async (team) => {\n        await app._interface.leaveServerTeam({ teamId: team.id, userId: crud.id });\n      },\n      async listPermissions(scopeOrOptions, options) {\n        if (scopeOrOptions && \"id\" in scopeOrOptions) {\n          const scope = scopeOrOptions;\n          const recursive = options?.recursive ?? true;\n          const permissions = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamUserPermissionsCache.getOrWait([scope.id, crud.id, recursive], \"write-only\"));\n          return permissions.map((crud2) => app._serverPermissionFromCrud(crud2));\n        } else {\n          const opts = scopeOrOptions;\n          const recursive = opts?.recursive ?? true;\n          const permissions = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserProjectPermissionsCache.getOrWait([crud.id, recursive], \"write-only\"));\n          return permissions.map((crud2) => app._serverPermissionFromCrud(crud2));\n        }\n      },\n      usePermissions(scopeOrOptions, options) {\n        if (scopeOrOptions && \"id\" in scopeOrOptions) {\n          const scope = scopeOrOptions;\n          const recursive = options?.recursive ?? true;\n          const permissions = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamUserPermissionsCache, [scope.id, crud.id, recursive], \"user.usePermissions()\");\n          return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => permissions.map((crud2) => app._serverPermissionFromCrud(crud2)), [permissions]);\n        } else {\n          const opts = scopeOrOptions;\n          const recursive = opts?.recursive ?? true;\n          const permissions = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserProjectPermissionsCache, [crud.id, recursive], \"user.usePermissions()\");\n          return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => permissions.map((crud2) => app._serverPermissionFromCrud(crud2)), [permissions]);\n        }\n      },\n      async getPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          const permissions = await this.listPermissions(scope);\n          return permissions.find((p) => p.id === permissionId) ?? null;\n        } else {\n          const pid = scopeOrPermissionId;\n          const permissions = await this.listPermissions();\n          return permissions.find((p) => p.id === pid) ?? null;\n        }\n      },\n      usePermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          const permissions = this.usePermissions(scope);\n          return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => permissions.find((p) => p.id === permissionId) ?? null, [permissions, permissionId]);\n        } else {\n          const pid = scopeOrPermissionId;\n          const permissions = this.usePermissions();\n          return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => permissions.find((p) => p.id === pid) ?? null, [permissions, pid]);\n        }\n      },\n      async hasPermission(scopeOrPermissionId, permissionId) {\n        if (scopeOrPermissionId && typeof scopeOrPermissionId !== \"string\") {\n          const scope = scopeOrPermissionId;\n          return await this.getPermission(scope, permissionId) !== null;\n        } else {\n          const pid = scopeOrPermissionId;\n          return await this.getPermission(pid) !== null;\n        }\n      },\n      async update(update) {\n        await app._updateServerUser(crud.id, update);\n      },\n      async sendVerificationEmail() {\n        return await app._checkFeatureSupport(\"sendVerificationEmail() on ServerUser\", {});\n      },\n      async updatePassword(options) {\n        const result = await app._interface.updatePassword(options);\n        await app._serverUserCache.refresh([crud.id]);\n        return result;\n      },\n      async setPassword(options) {\n        const result = await this.update(options);\n        await app._serverUserCache.refresh([crud.id]);\n        return result;\n      },\n      async getTeamProfile(team) {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserTeamProfileCache.getOrWait([team.id, crud.id], \"write-only\"));\n        return app._serverEditableTeamProfileFromCrud(result);\n      },\n      useTeamProfile(team) {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserTeamProfileCache, [team.id, crud.id], \"user.useTeamProfile()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => app._serverEditableTeamProfileFromCrud(result), [result]);\n      },\n      async listContactChannels() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverContactChannelsCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((data) => app._serverContactChannelFromCrud(crud.id, data));\n      },\n      useContactChannels() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverContactChannelsCache, [crud.id], \"user.useContactChannels()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => result.map((data) => app._serverContactChannelFromCrud(crud.id, data)), [result]);\n      },\n      createContactChannel: async (data) => {\n        const contactChannel = await app._interface.createServerContactChannel((0,_contact_channels_index_js__WEBPACK_IMPORTED_MODULE_10__.serverContactChannelCreateOptionsToCrud)(crud.id, data));\n        await Promise.all([\n          app._serverContactChannelsCache.refresh([crud.id]),\n          app._serverUserCache.refresh([crud.id])\n        ]);\n        return app._serverContactChannelFromCrud(crud.id, contactChannel);\n      },\n      useNotificationCategories() {\n        const results = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverNotificationCategoriesCache, [crud.id], \"user.useNotificationCategories()\");\n        return results.map((category) => app._serverNotificationCategoryFromCrud(crud.id, category));\n      },\n      async listNotificationCategories() {\n        const results = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverNotificationCategoriesCache.getOrWait([crud.id], \"write-only\"));\n        return results.map((category) => app._serverNotificationCategoryFromCrud(crud.id, category));\n      },\n      useApiKeys() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserApiKeysCache, [crud.id], \"user.useApiKeys()\");\n        return result.map((apiKey) => app._serverApiKeyFromCrud(apiKey));\n      },\n      async listApiKeys() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserApiKeysCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((apiKey) => app._serverApiKeyFromCrud(apiKey));\n      },\n      async createApiKey(options) {\n        const result = await app._interface.createProjectApiKey(\n          await (0,_api_keys_index_js__WEBPACK_IMPORTED_MODULE_11__.apiKeyCreationOptionsToCrud)(\"user\", crud.id, options),\n          null,\n          \"server\"\n        );\n        await app._serverUserApiKeysCache.refresh([crud.id]);\n        return app._serverApiKeyFromCrud(result);\n      },\n      useOAuthProviders() {\n        const results = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverOAuthProvidersCache, [crud.id], \"user.useOAuthProviders()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => results.map((oauthCrud) => app._serverOAuthProviderFromCrud(oauthCrud)), [results]);\n      },\n      async listOAuthProviders() {\n        const results = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverOAuthProvidersCache.getOrWait([crud.id], \"write-only\"));\n        return results.map((oauthCrud) => app._serverOAuthProviderFromCrud(oauthCrud));\n      },\n      useOAuthProvider(id) {\n        const providers = this.useOAuthProviders();\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => providers.find((p) => p.id === id) ?? null, [providers, id]);\n      },\n      async getOAuthProvider(id) {\n        const providers = await this.listOAuthProviders();\n        return providers.find((p) => p.id === id) ?? null;\n      },\n      async createCheckoutUrl(options) {\n        const offerIdOrInline = \"offerId\" in options ? options.offerId : options.offer;\n        return await app._interface.createCheckoutUrl(\"user\", crud.id, offerIdOrInline, null);\n      },\n      async getItem(itemId) {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverUserItemsCache.getOrWait([crud.id, itemId], \"write-only\"));\n        return app._serverItemFromCrud({ type: \"user\", id: crud.id }, result);\n      },\n      useItem(itemId) {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverUserItemsCache, [crud.id, itemId], \"user.useItem()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => app._serverItemFromCrud({ type: \"user\", id: crud.id }, result), [result]);\n      }\n    };\n  }\n  _serverTeamUserFromCrud(crud) {\n    return {\n      ...this._serverUserFromCrud(crud.user),\n      teamProfile: {\n        displayName: crud.display_name,\n        profileImageUrl: crud.profile_image_url\n      }\n    };\n  }\n  _serverTeamInvitationFromCrud(crud) {\n    return {\n      id: crud.id,\n      recipientEmail: crud.recipient_email,\n      expiresAt: new Date(crud.expires_at_millis),\n      revoke: async () => {\n        await this._interface.revokeServerTeamInvitation(crud.id, crud.team_id);\n      }\n    };\n  }\n  _currentUserFromCrud(crud, session) {\n    const app = this;\n    const currentUser = {\n      ...this._serverUserFromCrud(crud),\n      ...this._createAuth(session),\n      ...this._isInternalProject() ? this._createInternalUserExtra(session) : {}\n    };\n    Object.freeze(currentUser);\n    return currentUser;\n  }\n  _serverTeamFromCrud(crud) {\n    const app = this;\n    return {\n      id: crud.id,\n      displayName: crud.display_name,\n      profileImageUrl: crud.profile_image_url,\n      createdAt: new Date(crud.created_at_millis),\n      clientMetadata: crud.client_metadata,\n      clientReadOnlyMetadata: crud.client_read_only_metadata,\n      serverMetadata: crud.server_metadata,\n      async update(update) {\n        await app._interface.updateServerTeam(crud.id, (0,_teams_index_js__WEBPACK_IMPORTED_MODULE_12__.serverTeamUpdateOptionsToCrud)(update));\n        await app._serverTeamsCache.refresh([void 0]);\n      },\n      async delete() {\n        await app._interface.deleteServerTeam(crud.id);\n        await app._serverTeamsCache.refresh([void 0]);\n      },\n      async listUsers() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamMemberProfilesCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((u) => app._serverTeamUserFromCrud(u));\n      },\n      useUsers() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamMemberProfilesCache, [crud.id], \"team.useUsers()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => result.map((u) => app._serverTeamUserFromCrud(u)), [result]);\n      },\n      async addUser(userId) {\n        await app._interface.addServerUserToTeam({\n          teamId: crud.id,\n          userId\n        });\n        await app._serverTeamMemberProfilesCache.refresh([crud.id]);\n      },\n      async removeUser(userId) {\n        await app._interface.removeServerUserFromTeam({\n          teamId: crud.id,\n          userId\n        });\n        await app._serverTeamMemberProfilesCache.refresh([crud.id]);\n      },\n      async inviteUser(options) {\n        await app._interface.sendServerTeamInvitation({\n          teamId: crud.id,\n          email: options.email,\n          callbackUrl: options.callbackUrl ?? (0,_utils_url_js__WEBPACK_IMPORTED_MODULE_9__.constructRedirectUrl)(app.urls.teamInvitation, \"callbackUrl\")\n        });\n        await app._serverTeamInvitationsCache.refresh([crud.id]);\n      },\n      async listInvitations() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamInvitationsCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((crud2) => app._serverTeamInvitationFromCrud(crud2));\n      },\n      useInvitations() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamInvitationsCache, [crud.id], \"team.useInvitations()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => result.map((crud2) => app._serverTeamInvitationFromCrud(crud2)), [result]);\n      },\n      useApiKeys() {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamApiKeysCache, [crud.id], \"team.useApiKeys()\");\n        return result.map((apiKey) => app._serverApiKeyFromCrud(apiKey));\n      },\n      async listApiKeys() {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamApiKeysCache.getOrWait([crud.id], \"write-only\"));\n        return result.map((apiKey) => app._serverApiKeyFromCrud(apiKey));\n      },\n      async createApiKey(options) {\n        const result = await app._interface.createProjectApiKey(\n          await (0,_api_keys_index_js__WEBPACK_IMPORTED_MODULE_11__.apiKeyCreationOptionsToCrud)(\"team\", crud.id, options),\n          null,\n          \"server\"\n        );\n        await app._serverTeamApiKeysCache.refresh([crud.id]);\n        return app._serverApiKeyFromCrud(result);\n      },\n      async getItem(itemId) {\n        const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await app._serverTeamItemsCache.getOrWait([crud.id, itemId], \"write-only\"));\n        return app._serverItemFromCrud({ type: \"team\", id: crud.id }, result);\n      },\n      useItem(itemId) {\n        const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(app._serverTeamItemsCache, [crud.id, itemId], \"team.useItem()\");\n        return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => app._serverItemFromCrud({ type: \"team\", id: crud.id }, result), [result]);\n      },\n      async createCheckoutUrl(options) {\n        const offerIdOrInline = \"offerId\" in options ? options.offerId : options.offer;\n        return await app._interface.createCheckoutUrl(\"team\", crud.id, offerIdOrInline, null);\n      }\n    };\n  }\n  _serverItemFromCrud(customer, crud) {\n    const app = this;\n    return {\n      displayName: crud.display_name,\n      quantity: crud.quantity,\n      nonNegativeQuantity: Math.max(0, crud.quantity),\n      increaseQuantity: async (delta) => {\n        const updateOptions = customer.type === \"user\" ? { itemId: crud.id, userId: customer.id } : customer.type === \"team\" ? { itemId: crud.id, teamId: customer.id } : { itemId: crud.id, customCustomerId: customer.id };\n        await app._interface.updateItemQuantity(updateOptions, { delta });\n        if (customer.type === \"user\") await app._serverUserItemsCache.refresh([customer.id, crud.id]);\n        else if (customer.type === \"team\") await app._serverTeamItemsCache.refresh([customer.id, crud.id]);\n        else await app._serverCustomItemsCache.refresh([customer.id, crud.id]);\n      },\n      decreaseQuantity: async (delta) => {\n        const updateOptions = customer.type === \"user\" ? { itemId: crud.id, userId: customer.id } : customer.type === \"team\" ? { itemId: crud.id, teamId: customer.id } : { itemId: crud.id, customCustomerId: customer.id };\n        await app._interface.updateItemQuantity(updateOptions, { delta: -delta, allow_negative: true });\n        if (customer.type === \"user\") await app._serverUserItemsCache.refresh([customer.id, crud.id]);\n        else if (customer.type === \"team\") await app._serverTeamItemsCache.refresh([customer.id, crud.id]);\n        else await app._serverCustomItemsCache.refresh([customer.id, crud.id]);\n      },\n      tryDecreaseQuantity: async (delta) => {\n        try {\n          const updateOptions = customer.type === \"user\" ? { itemId: crud.id, userId: customer.id } : customer.type === \"team\" ? { itemId: crud.id, teamId: customer.id } : { itemId: crud.id, customCustomerId: customer.id };\n          await app._interface.updateItemQuantity(updateOptions, { delta: -delta });\n          if (customer.type === \"user\") await app._serverUserItemsCache.refresh([customer.id, crud.id]);\n          else if (customer.type === \"team\") await app._serverTeamItemsCache.refresh([customer.id, crud.id]);\n          else await app._serverCustomItemsCache.refresh([customer.id, crud.id]);\n          return true;\n        } catch (error) {\n          if (error instanceof _stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.ItemQuantityInsufficientAmount) {\n            return false;\n          }\n          throw error;\n        }\n      }\n    };\n  }\n  async _getUserApiKey(options) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverCheckApiKeyCache.getOrWait([\"user\", options.apiKey], \"write-only\"));\n    return crud ? this._serverApiKeyFromCrud(crud) : null;\n  }\n  async _getTeamApiKey(options) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverCheckApiKeyCache.getOrWait([\"team\", options.apiKey], \"write-only\"));\n    return crud ? this._serverApiKeyFromCrud(crud) : null;\n  }\n  _useUserApiKey(options) {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverCheckApiKeyCache, [\"user\", options.apiKey], \"useUserApiKey()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => crud ? this._serverApiKeyFromCrud(crud) : null, [crud]);\n  }\n  _useTeamApiKey(options) {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverCheckApiKeyCache, [\"team\", options.apiKey], \"useTeamApiKey()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => crud ? this._serverApiKeyFromCrud(crud) : null, [crud]);\n  }\n  async _getUserByApiKey(apiKey) {\n    const apiKeyObject = await this._getUserApiKey({ apiKey });\n    if (apiKeyObject === null) {\n      return null;\n    }\n    return await this.getServerUserById(apiKeyObject.userId);\n  }\n  async _getUserByConvex(ctx, includeAnonymous) {\n    const identity = await ctx.auth.getUserIdentity();\n    if (identity === null) {\n      return null;\n    }\n    const user = await this.getServerUserById(identity.subject);\n    if (user?.isAnonymous && !includeAnonymous) {\n      return null;\n    }\n    return user;\n  }\n  _useUserByConvex(ctx, includeAnonymous) {\n    const subject = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._convexIdentitySubjectCache, [ctx], \"useUserByConvex()\");\n    if (subject === null) {\n      return null;\n    }\n    const user = this.useUserById(subject);\n    if (user?.isAnonymous && !includeAnonymous) {\n      return null;\n    }\n    return user;\n  }\n  _useUserByApiKey(apiKey) {\n    const apiKeyObject = this._useUserApiKey({ apiKey });\n    if (apiKeyObject === null) {\n      return null;\n    }\n    return this.useUserById(apiKeyObject.userId);\n  }\n  async _getTeamByApiKey(apiKey) {\n    const apiKeyObject = await this._getTeamApiKey({ apiKey });\n    if (apiKeyObject === null) {\n      return null;\n    }\n    return await this.getTeam(apiKeyObject.teamId);\n  }\n  _useTeamByApiKey(apiKey) {\n    const apiKeyObject = this._useTeamApiKey({ apiKey });\n    if (apiKeyObject === null) {\n      return null;\n    }\n    return this.useTeam(apiKeyObject.teamId);\n  }\n  async createUser(options) {\n    const crud = await this._interface.createServerUser((0,_users_index_js__WEBPACK_IMPORTED_MODULE_8__.serverUserCreateOptionsToCrud)(options));\n    await this._refreshUsers();\n    return this._serverUserFromCrud(crud);\n  }\n  async getUser(options) {\n    if (typeof options === \"string\") {\n      return await this.getServerUserById(options);\n    } else if (typeof options === \"object\" && \"apiKey\" in options) {\n      return await this._getUserByApiKey(options.apiKey);\n    } else if (typeof options === \"object\" && \"from\" in options && options.from === \"convex\") {\n      return await this._getUserByConvex(options.ctx, \"or\" in options && options.or === \"anonymous\");\n    } else {\n      options = options;\n      this._ensurePersistentTokenStore(options?.tokenStore);\n      const session = await this._getSession(options?.tokenStore);\n      let crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._currentServerUserCache.getOrWait([session], \"write-only\"));\n      if (crud?.is_anonymous && options?.or !== \"anonymous\" && options?.or !== \"anonymous-if-exists[deprecated]\") {\n        crud = null;\n      }\n      if (crud === null) {\n        switch (options?.or) {\n          case \"redirect\": {\n            await this.redirectToSignIn({ replace: true });\n            break;\n          }\n          case \"throw\": {\n            throw new Error(\"User is not signed in but getUser was called with { or: 'throw' }\");\n          }\n          case \"anonymous\": {\n            const tokens = await this._signUpAnonymously();\n            return await this.getUser({ tokenStore: tokens, or: \"anonymous-if-exists[deprecated]\" }) ?? (0,_stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.throwErr)(\"Something went wrong while signing up anonymously\");\n          }\n          case void 0:\n          case \"anonymous-if-exists[deprecated]\":\n          case \"return-null\": {\n            return null;\n          }\n        }\n      }\n      return crud && this._currentUserFromCrud(crud, session);\n    }\n  }\n  async getServerUser() {\n    console.warn(\"stackServerApp.getServerUser is deprecated; use stackServerApp.getUser instead\");\n    return await this.getUser();\n  }\n  async getServerUserById(userId) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUserCache.getOrWait([userId], \"write-only\"));\n    return crud && this._serverUserFromCrud(crud);\n  }\n  useUser(options) {\n    if (typeof options === \"string\") {\n      return this.useUserById(options);\n    } else if (typeof options === \"object\" && \"apiKey\" in options) {\n      return this._useUserByApiKey(options.apiKey);\n    } else if (typeof options === \"object\" && \"from\" in options && options.from === \"convex\") {\n      return this._useUserByConvex(options.ctx, \"or\" in options && options.or === \"anonymous\");\n    } else {\n      options = options;\n      this._ensurePersistentTokenStore(options?.tokenStore);\n      const session = this._useSession(options?.tokenStore);\n      let crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._currentServerUserCache, [session], \"useUser()\");\n      if (crud?.is_anonymous && options?.or !== \"anonymous\" && options?.or !== \"anonymous-if-exists[deprecated]\") {\n        crud = null;\n      }\n      if (crud === null) {\n        switch (options?.or) {\n          case \"redirect\": {\n            (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(this.redirectToSignIn({ replace: true }));\n            (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_3__.suspend)();\n            throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"suspend should never return\");\n          }\n          case \"throw\": {\n            throw new Error(\"User is not signed in but useUser was called with { or: 'throw' }\");\n          }\n          case \"anonymous\": {\n            (0,_stackframe_stack_shared_dist_utils_promises__WEBPACK_IMPORTED_MODULE_2__.runAsynchronously)(async () => {\n              await this._signUpAnonymously();\n              if (typeof window !== \"undefined\") {\n                window.location.reload();\n              }\n            });\n            (0,_stackframe_stack_shared_dist_utils_react__WEBPACK_IMPORTED_MODULE_3__.suspend)();\n            throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_1__.StackAssertionError(\"suspend should never return\");\n          }\n          case void 0:\n          case \"anonymous-if-exists[deprecated]\":\n          case \"return-null\": {\n          }\n        }\n      }\n      return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n        return crud && this._currentUserFromCrud(crud, session);\n      }, [crud, session, options?.or]);\n    }\n  }\n  useUserById(userId) {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverUserCache, [userId], \"useUserById()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return crud && this._serverUserFromCrud(crud);\n    }, [crud]);\n  }\n  async listUsers(options) {\n    const crud = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUsersCache.getOrWait([options?.cursor, options?.limit, options?.orderBy, options?.desc, options?.query, options?.includeAnonymous], \"write-only\"));\n    const result = crud.items.map((j) => this._serverUserFromCrud(j));\n    result.nextCursor = crud.pagination?.next_cursor ?? null;\n    return result;\n  }\n  useUsers(options) {\n    const crud = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverUsersCache, [options?.cursor, options?.limit, options?.orderBy, options?.desc, options?.query], \"useServerUsers()\");\n    const result = crud.items.map((j) => this._serverUserFromCrud(j));\n    result.nextCursor = crud.pagination?.next_cursor ?? null;\n    return result;\n  }\n  _serverPermissionFromCrud(crud) {\n    return {\n      id: crud.id\n    };\n  }\n  _serverTeamPermissionDefinitionFromCrud(crud) {\n    return {\n      id: crud.id,\n      description: crud.description,\n      containedPermissionIds: crud.contained_permission_ids\n    };\n  }\n  _serverProjectPermissionDefinitionFromCrud(crud) {\n    return {\n      id: crud.id,\n      description: crud.description,\n      containedPermissionIds: crud.contained_permission_ids\n    };\n  }\n  async listTeams() {\n    const teams = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverTeamsCache.getOrWait([void 0], \"write-only\"));\n    return teams.map((t) => this._serverTeamFromCrud(t));\n  }\n  async getItem(options) {\n    if (\"userId\" in options) {\n      const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverUserItemsCache.getOrWait([options.userId, options.itemId], \"write-only\"));\n      return this._serverItemFromCrud({ type: \"user\", id: options.userId }, result);\n    } else if (\"teamId\" in options) {\n      const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverTeamItemsCache.getOrWait([options.teamId, options.itemId], \"write-only\"));\n      return this._serverItemFromCrud({ type: \"team\", id: options.teamId }, result);\n    } else {\n      const result = _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverCustomItemsCache.getOrWait([options.customCustomerId, options.itemId], \"write-only\"));\n      return this._serverItemFromCrud({ type: \"custom\", id: options.customCustomerId }, result);\n    }\n  }\n  useItem(options) {\n    let type;\n    let id;\n    let cache;\n    if (\"userId\" in options) {\n      type = \"user\";\n      id = options.userId;\n      cache = this._serverUserItemsCache;\n    } else if (\"teamId\" in options) {\n      type = \"team\";\n      id = options.teamId;\n      cache = this._serverTeamItemsCache;\n    } else {\n      type = \"custom\";\n      id = options.customCustomerId;\n      cache = this._serverCustomItemsCache;\n    }\n    const cacheKey = [id, options.itemId];\n    const debugLabel = `app.useItem(${type})`;\n    const result = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(cache, cacheKey, debugLabel);\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => this._serverItemFromCrud({ type, id }, result), [result]);\n  }\n  async createTeam(data) {\n    const team = await this._interface.createServerTeam((0,_teams_index_js__WEBPACK_IMPORTED_MODULE_12__.serverTeamCreateOptionsToCrud)(data));\n    await this._serverTeamsCache.refresh([void 0]);\n    return this._serverTeamFromCrud(team);\n  }\n  useTeams() {\n    const teams = (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverTeamsCache, [void 0], \"useServerTeams()\");\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n      return teams.map((t) => this._serverTeamFromCrud(t));\n    }, [teams]);\n  }\n  async getTeam(options) {\n    if (typeof options === \"object\" && \"apiKey\" in options) {\n      return await this._getTeamByApiKey(options.apiKey);\n    } else {\n      const teamId = options;\n      const teams = await this.listTeams();\n      return teams.find((t) => t.id === teamId) ?? null;\n    }\n  }\n  useTeam(options) {\n    if (typeof options === \"object\" && \"apiKey\" in options) {\n      return this._useTeamByApiKey(options.apiKey);\n    } else {\n      const teamId = options;\n      const teams = this.useTeams();\n      return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => {\n        return teams.find((t) => t.id === teamId) ?? null;\n      }, [teams, teamId]);\n    }\n  }\n  _createServerDataVaultStore(id) {\n    const validateOptions = (options) => {\n      if (typeof options.secret !== \"string\") throw new Error(\"secret must be a string, got \" + typeof options.secret);\n    };\n    return {\n      id,\n      setValue: async (key, value, options) => {\n        validateOptions(options);\n        await this._interface.setDataVaultStoreValue(options.secret, id, key, value);\n      },\n      getValue: async (key, options) => {\n        validateOptions(options);\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.orThrow(await this._serverDataVaultStoreValueCache.getOrWait([id, key, options.secret], \"write-only\"));\n      },\n      useValue: (key, options) => {\n        validateOptions(options);\n        return (0,_common_js__WEBPACK_IMPORTED_MODULE_7__.useAsyncCache)(this._serverDataVaultStoreValueCache, [id, key, options.secret], `app.useDataVaultStoreValue()`);\n      }\n    };\n  }\n  async getDataVaultStore(id) {\n    return this._createServerDataVaultStore(id);\n  }\n  useDataVaultStore(id) {\n    return (0,react__WEBPACK_IMPORTED_MODULE_5__.useMemo)(() => this._createServerDataVaultStore(id), [id]);\n  }\n  async sendEmail(options) {\n    await this._interface.sendEmail(options);\n  }\n  async _refreshSession(session) {\n    await Promise.all([\n      super._refreshUser(session),\n      this._currentServerUserCache.refresh([session])\n    ]);\n  }\n  async _refreshUsers() {\n    await Promise.all([\n      super._refreshUsers(),\n      this._serverUserCache.refreshWhere(() => true),\n      this._serverUsersCache.refreshWhere(() => true),\n      this._serverContactChannelsCache.refreshWhere(() => true),\n      this._serverOAuthProvidersCache.refreshWhere(() => true)\n    ]);\n  }\n  async createOAuthProvider(options) {\n    try {\n      const crud = await this._interface.createServerOAuthProvider({\n        user_id: options.userId,\n        provider_config_id: options.providerConfigId,\n        account_id: options.accountId,\n        email: options.email,\n        allow_sign_in: options.allowSignIn,\n        allow_connected_accounts: options.allowConnectedAccounts\n      });\n      await this._serverOAuthProvidersCache.refresh([options.userId]);\n      return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.ok(this._serverOAuthProviderFromCrud(crud));\n    } catch (error) {\n      if (_stackframe_stack_shared__WEBPACK_IMPORTED_MODULE_0__.KnownErrors.OAuthProviderAccountIdAlreadyUsedForSignIn.isInstance(error)) {\n        return _stackframe_stack_shared_dist_utils_results__WEBPACK_IMPORTED_MODULE_4__.Result.error(error);\n      }\n      throw error;\n    }\n  }\n};\n\n//# sourceMappingURL=server-app-impl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/server-app-impl.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackClientApp: () => (/* binding */ StackClientApp)\n/* harmony export */ });\n/* harmony import */ var _implementations_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../implementations/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/implementations/index.js\");\n// src/lib/stack-app/apps/interfaces/client-app.ts\n\nvar StackClientApp = _implementations_index_js__WEBPACK_IMPORTED_MODULE_0__._StackClientAppImpl;\n\n//# sourceMappingURL=client-app.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2FwcHMvaW50ZXJmYWNlcy9jbGllbnQtYXBwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDa0U7QUFDbEUscUJBQXFCLDBFQUFtQjtBQUd0QztBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxhcHBzXFxpbnRlcmZhY2VzXFxjbGllbnQtYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvc3RhY2stYXBwL2FwcHMvaW50ZXJmYWNlcy9jbGllbnQtYXBwLnRzXG5pbXBvcnQgeyBfU3RhY2tDbGllbnRBcHBJbXBsIH0gZnJvbSBcIi4uL2ltcGxlbWVudGF0aW9ucy9pbmRleC5qc1wiO1xudmFyIFN0YWNrQ2xpZW50QXBwID0gX1N0YWNrQ2xpZW50QXBwSW1wbDtcbmV4cG9ydCB7XG4gIFN0YWNrQ2xpZW50QXBwXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xpZW50LWFwcC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stackAppInternalsSymbol: () => (/* binding */ stackAppInternalsSymbol)\n/* harmony export */ });\n// src/lib/stack-app/common.ts\nvar stackAppInternalsSymbol = Symbol.for(\"StackAuth--DO-NOT-USE-OR-YOU-WILL-BE-FIRED--StackAppInternals\");\n\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxzdGFjay1hcHBcXGNvbW1vbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC9jb21tb24udHNcbnZhciBzdGFja0FwcEludGVybmFsc1N5bWJvbCA9IFN5bWJvbC5mb3IoXCJTdGFja0F1dGgtLURPLU5PVC1VU0UtT1ItWU9VLVdJTEwtQkUtRklSRUQtLVN0YWNrQXBwSW50ZXJuYWxzXCIpO1xuZXhwb3J0IHtcbiAgc3RhY2tBcHBJbnRlcm5hbHNTeW1ib2xcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21tb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contactChannelCreateOptionsToCrud: () => (/* binding */ contactChannelCreateOptionsToCrud),\n/* harmony export */   contactChannelUpdateOptionsToCrud: () => (/* binding */ contactChannelUpdateOptionsToCrud),\n/* harmony export */   serverContactChannelCreateOptionsToCrud: () => (/* binding */ serverContactChannelCreateOptionsToCrud),\n/* harmony export */   serverContactChannelUpdateOptionsToCrud: () => (/* binding */ serverContactChannelUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/contact-channels/index.ts\nfunction contactChannelCreateOptionsToCrud(userId, options) {\n  return {\n    value: options.value,\n    type: options.type,\n    used_for_auth: options.usedForAuth,\n    is_primary: options.isPrimary,\n    user_id: userId\n  };\n}\nfunction contactChannelUpdateOptionsToCrud(options) {\n  return {\n    value: options.value,\n    used_for_auth: options.usedForAuth,\n    is_primary: options.isPrimary\n  };\n}\nfunction serverContactChannelUpdateOptionsToCrud(options) {\n  return {\n    value: options.value,\n    is_verified: options.isVerified,\n    used_for_auth: options.usedForAuth,\n    is_primary: options.isPrimary\n  };\n}\nfunction serverContactChannelCreateOptionsToCrud(userId, options) {\n  return {\n    type: options.type,\n    value: options.value,\n    is_verified: options.isVerified,\n    user_id: userId,\n    used_for_auth: options.usedForAuth,\n    is_primary: options.isPrimary\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2NvbnRhY3QtY2hhbm5lbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxjb250YWN0LWNoYW5uZWxzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC9jb250YWN0LWNoYW5uZWxzL2luZGV4LnRzXG5mdW5jdGlvbiBjb250YWN0Q2hhbm5lbENyZWF0ZU9wdGlvbnNUb0NydWQodXNlcklkLCBvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgdmFsdWU6IG9wdGlvbnMudmFsdWUsXG4gICAgdHlwZTogb3B0aW9ucy50eXBlLFxuICAgIHVzZWRfZm9yX2F1dGg6IG9wdGlvbnMudXNlZEZvckF1dGgsXG4gICAgaXNfcHJpbWFyeTogb3B0aW9ucy5pc1ByaW1hcnksXG4gICAgdXNlcl9pZDogdXNlcklkXG4gIH07XG59XG5mdW5jdGlvbiBjb250YWN0Q2hhbm5lbFVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIHZhbHVlOiBvcHRpb25zLnZhbHVlLFxuICAgIHVzZWRfZm9yX2F1dGg6IG9wdGlvbnMudXNlZEZvckF1dGgsXG4gICAgaXNfcHJpbWFyeTogb3B0aW9ucy5pc1ByaW1hcnlcbiAgfTtcbn1cbmZ1bmN0aW9uIHNlcnZlckNvbnRhY3RDaGFubmVsVXBkYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgdmFsdWU6IG9wdGlvbnMudmFsdWUsXG4gICAgaXNfdmVyaWZpZWQ6IG9wdGlvbnMuaXNWZXJpZmllZCxcbiAgICB1c2VkX2Zvcl9hdXRoOiBvcHRpb25zLnVzZWRGb3JBdXRoLFxuICAgIGlzX3ByaW1hcnk6IG9wdGlvbnMuaXNQcmltYXJ5XG4gIH07XG59XG5mdW5jdGlvbiBzZXJ2ZXJDb250YWN0Q2hhbm5lbENyZWF0ZU9wdGlvbnNUb0NydWQodXNlcklkLCBvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogb3B0aW9ucy50eXBlLFxuICAgIHZhbHVlOiBvcHRpb25zLnZhbHVlLFxuICAgIGlzX3ZlcmlmaWVkOiBvcHRpb25zLmlzVmVyaWZpZWQsXG4gICAgdXNlcl9pZDogdXNlcklkLFxuICAgIHVzZWRfZm9yX2F1dGg6IG9wdGlvbnMudXNlZEZvckF1dGgsXG4gICAgaXNfcHJpbWFyeTogb3B0aW9ucy5pc1ByaW1hcnlcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIGNvbnRhY3RDaGFubmVsQ3JlYXRlT3B0aW9uc1RvQ3J1ZCxcbiAgY29udGFjdENoYW5uZWxVcGRhdGVPcHRpb25zVG9DcnVkLFxuICBzZXJ2ZXJDb250YWN0Q2hhbm5lbENyZWF0ZU9wdGlvbnNUb0NydWQsXG4gIHNlcnZlckNvbnRhY3RDaGFubmVsVXBkYXRlT3B0aW9uc1RvQ3J1ZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/contact-channels/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/internal-api-keys/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/internal-api-keys/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   internalApiKeyCreateOptionsToCrud: () => (/* binding */ internalApiKeyCreateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/internal-api-keys/index.ts\nfunction internalApiKeyCreateOptionsToCrud(options) {\n  return {\n    description: options.description,\n    expires_at_millis: options.expiresAt.getTime(),\n    has_publishable_client_key: options.hasPublishableClientKey,\n    has_secret_server_key: options.hasSecretServerKey,\n    has_super_secret_admin_key: options.hasSuperSecretAdminKey\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL2ludGVybmFsLWFwaS1rZXlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxzdGFjay1hcHBcXGludGVybmFsLWFwaS1rZXlzXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC9pbnRlcm5hbC1hcGkta2V5cy9pbmRleC50c1xuZnVuY3Rpb24gaW50ZXJuYWxBcGlLZXlDcmVhdGVPcHRpb25zVG9DcnVkKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkZXNjcmlwdGlvbjogb3B0aW9ucy5kZXNjcmlwdGlvbixcbiAgICBleHBpcmVzX2F0X21pbGxpczogb3B0aW9ucy5leHBpcmVzQXQuZ2V0VGltZSgpLFxuICAgIGhhc19wdWJsaXNoYWJsZV9jbGllbnRfa2V5OiBvcHRpb25zLmhhc1B1Ymxpc2hhYmxlQ2xpZW50S2V5LFxuICAgIGhhc19zZWNyZXRfc2VydmVyX2tleTogb3B0aW9ucy5oYXNTZWNyZXRTZXJ2ZXJLZXksXG4gICAgaGFzX3N1cGVyX3NlY3JldF9hZG1pbl9rZXk6IG9wdGlvbnMuaGFzU3VwZXJTZWNyZXRBZG1pbktleVxuICB9O1xufVxuZXhwb3J0IHtcbiAgaW50ZXJuYWxBcGlLZXlDcmVhdGVPcHRpb25zVG9DcnVkXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/internal-api-keys/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/permissions/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/permissions/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminProjectPermissionDefinitionCreateOptionsToCrud: () => (/* binding */ adminProjectPermissionDefinitionCreateOptionsToCrud),\n/* harmony export */   adminProjectPermissionDefinitionUpdateOptionsToCrud: () => (/* binding */ adminProjectPermissionDefinitionUpdateOptionsToCrud),\n/* harmony export */   adminTeamPermissionDefinitionCreateOptionsToCrud: () => (/* binding */ adminTeamPermissionDefinitionCreateOptionsToCrud),\n/* harmony export */   adminTeamPermissionDefinitionUpdateOptionsToCrud: () => (/* binding */ adminTeamPermissionDefinitionUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/permissions/index.ts\nfunction adminTeamPermissionDefinitionCreateOptionsToCrud(options) {\n  return {\n    id: options.id,\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\nfunction adminTeamPermissionDefinitionUpdateOptionsToCrud(options) {\n  return {\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\nfunction adminProjectPermissionDefinitionCreateOptionsToCrud(options) {\n  return {\n    id: options.id,\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\nfunction adminProjectPermissionDefinitionUpdateOptionsToCrud(options) {\n  return {\n    description: options.description,\n    contained_permission_ids: options.containedPermissionIds\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL3Blcm1pc3Npb25zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNRTtBQUNGIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcQHN0YWNrZnJhbWVcXHN0YWNrXFxkaXN0XFxlc21cXGxpYlxcc3RhY2stYXBwXFxwZXJtaXNzaW9uc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9zdGFjay1hcHAvcGVybWlzc2lvbnMvaW5kZXgudHNcbmZ1bmN0aW9uIGFkbWluVGVhbVBlcm1pc3Npb25EZWZpbml0aW9uQ3JlYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgaWQ6IG9wdGlvbnMuaWQsXG4gICAgZGVzY3JpcHRpb246IG9wdGlvbnMuZGVzY3JpcHRpb24sXG4gICAgY29udGFpbmVkX3Blcm1pc3Npb25faWRzOiBvcHRpb25zLmNvbnRhaW5lZFBlcm1pc3Npb25JZHNcbiAgfTtcbn1cbmZ1bmN0aW9uIGFkbWluVGVhbVBlcm1pc3Npb25EZWZpbml0aW9uVXBkYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgZGVzY3JpcHRpb246IG9wdGlvbnMuZGVzY3JpcHRpb24sXG4gICAgY29udGFpbmVkX3Blcm1pc3Npb25faWRzOiBvcHRpb25zLmNvbnRhaW5lZFBlcm1pc3Npb25JZHNcbiAgfTtcbn1cbmZ1bmN0aW9uIGFkbWluUHJvamVjdFBlcm1pc3Npb25EZWZpbml0aW9uQ3JlYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgaWQ6IG9wdGlvbnMuaWQsXG4gICAgZGVzY3JpcHRpb246IG9wdGlvbnMuZGVzY3JpcHRpb24sXG4gICAgY29udGFpbmVkX3Blcm1pc3Npb25faWRzOiBvcHRpb25zLmNvbnRhaW5lZFBlcm1pc3Npb25JZHNcbiAgfTtcbn1cbmZ1bmN0aW9uIGFkbWluUHJvamVjdFBlcm1pc3Npb25EZWZpbml0aW9uVXBkYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgZGVzY3JpcHRpb246IG9wdGlvbnMuZGVzY3JpcHRpb24sXG4gICAgY29udGFpbmVkX3Blcm1pc3Npb25faWRzOiBvcHRpb25zLmNvbnRhaW5lZFBlcm1pc3Npb25JZHNcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIGFkbWluUHJvamVjdFBlcm1pc3Npb25EZWZpbml0aW9uQ3JlYXRlT3B0aW9uc1RvQ3J1ZCxcbiAgYWRtaW5Qcm9qZWN0UGVybWlzc2lvbkRlZmluaXRpb25VcGRhdGVPcHRpb25zVG9DcnVkLFxuICBhZG1pblRlYW1QZXJtaXNzaW9uRGVmaW5pdGlvbkNyZWF0ZU9wdGlvbnNUb0NydWQsXG4gIGFkbWluVGVhbVBlcm1pc3Npb25EZWZpbml0aW9uVXBkYXRlT3B0aW9uc1RvQ3J1ZFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/permissions/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adminProjectCreateOptionsToCrud: () => (/* binding */ adminProjectCreateOptionsToCrud),\n/* harmony export */   adminProjectUpdateOptionsToCrud: () => (/* binding */ adminProjectUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/projects/index.ts\nfunction adminProjectUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    description: options.description,\n    is_production_mode: options.isProductionMode,\n    logo_url: options.logoUrl,\n    full_logo_url: options.fullLogoUrl,\n    config: {\n      domains: options.config?.domains?.map((d) => ({\n        domain: d.domain,\n        handler_path: d.handlerPath\n      })),\n      oauth_providers: options.config?.oauthProviders?.map((p) => ({\n        id: p.id,\n        type: p.type,\n        ...p.type === \"standard\" && {\n          client_id: p.clientId,\n          client_secret: p.clientSecret,\n          facebook_config_id: p.facebookConfigId,\n          microsoft_tenant_id: p.microsoftTenantId\n        }\n      })),\n      email_config: options.config?.emailConfig && (options.config.emailConfig.type === \"shared\" ? {\n        type: \"shared\"\n      } : {\n        type: \"standard\",\n        host: options.config.emailConfig.host,\n        port: options.config.emailConfig.port,\n        username: options.config.emailConfig.username,\n        password: options.config.emailConfig.password,\n        sender_name: options.config.emailConfig.senderName,\n        sender_email: options.config.emailConfig.senderEmail\n      }),\n      email_theme: options.config?.emailTheme,\n      sign_up_enabled: options.config?.signUpEnabled,\n      credential_enabled: options.config?.credentialEnabled,\n      magic_link_enabled: options.config?.magicLinkEnabled,\n      passkey_enabled: options.config?.passkeyEnabled,\n      allow_localhost: options.config?.allowLocalhost,\n      create_team_on_sign_up: options.config?.createTeamOnSignUp,\n      client_team_creation_enabled: options.config?.clientTeamCreationEnabled,\n      client_user_deletion_enabled: options.config?.clientUserDeletionEnabled,\n      team_creator_default_permissions: options.config?.teamCreatorDefaultPermissions,\n      team_member_default_permissions: options.config?.teamMemberDefaultPermissions,\n      user_default_permissions: options.config?.userDefaultPermissions,\n      oauth_account_merge_strategy: options.config?.oauthAccountMergeStrategy,\n      allow_user_api_keys: options.config?.allowUserApiKeys,\n      allow_team_api_keys: options.config?.allowTeamApiKeys\n    }\n  };\n}\nfunction adminProjectCreateOptionsToCrud(options) {\n  return {\n    ...adminProjectUpdateOptionsToCrud(options),\n    display_name: options.displayName,\n    owner_team_id: options.teamId\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL3Byb2plY3RzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFja1xcZGlzdFxcZXNtXFxsaWJcXHN0YWNrLWFwcFxccHJvamVjdHNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvc3RhY2stYXBwL3Byb2plY3RzL2luZGV4LnRzXG5mdW5jdGlvbiBhZG1pblByb2plY3RVcGRhdGVPcHRpb25zVG9DcnVkKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkaXNwbGF5X25hbWU6IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgZGVzY3JpcHRpb246IG9wdGlvbnMuZGVzY3JpcHRpb24sXG4gICAgaXNfcHJvZHVjdGlvbl9tb2RlOiBvcHRpb25zLmlzUHJvZHVjdGlvbk1vZGUsXG4gICAgbG9nb191cmw6IG9wdGlvbnMubG9nb1VybCxcbiAgICBmdWxsX2xvZ29fdXJsOiBvcHRpb25zLmZ1bGxMb2dvVXJsLFxuICAgIGNvbmZpZzoge1xuICAgICAgZG9tYWluczogb3B0aW9ucy5jb25maWc/LmRvbWFpbnM/Lm1hcCgoZCkgPT4gKHtcbiAgICAgICAgZG9tYWluOiBkLmRvbWFpbixcbiAgICAgICAgaGFuZGxlcl9wYXRoOiBkLmhhbmRsZXJQYXRoXG4gICAgICB9KSksXG4gICAgICBvYXV0aF9wcm92aWRlcnM6IG9wdGlvbnMuY29uZmlnPy5vYXV0aFByb3ZpZGVycz8ubWFwKChwKSA9PiAoe1xuICAgICAgICBpZDogcC5pZCxcbiAgICAgICAgdHlwZTogcC50eXBlLFxuICAgICAgICAuLi5wLnR5cGUgPT09IFwic3RhbmRhcmRcIiAmJiB7XG4gICAgICAgICAgY2xpZW50X2lkOiBwLmNsaWVudElkLFxuICAgICAgICAgIGNsaWVudF9zZWNyZXQ6IHAuY2xpZW50U2VjcmV0LFxuICAgICAgICAgIGZhY2Vib29rX2NvbmZpZ19pZDogcC5mYWNlYm9va0NvbmZpZ0lkLFxuICAgICAgICAgIG1pY3Jvc29mdF90ZW5hbnRfaWQ6IHAubWljcm9zb2Z0VGVuYW50SWRcbiAgICAgICAgfVxuICAgICAgfSkpLFxuICAgICAgZW1haWxfY29uZmlnOiBvcHRpb25zLmNvbmZpZz8uZW1haWxDb25maWcgJiYgKG9wdGlvbnMuY29uZmlnLmVtYWlsQ29uZmlnLnR5cGUgPT09IFwic2hhcmVkXCIgPyB7XG4gICAgICAgIHR5cGU6IFwic2hhcmVkXCJcbiAgICAgIH0gOiB7XG4gICAgICAgIHR5cGU6IFwic3RhbmRhcmRcIixcbiAgICAgICAgaG9zdDogb3B0aW9ucy5jb25maWcuZW1haWxDb25maWcuaG9zdCxcbiAgICAgICAgcG9ydDogb3B0aW9ucy5jb25maWcuZW1haWxDb25maWcucG9ydCxcbiAgICAgICAgdXNlcm5hbWU6IG9wdGlvbnMuY29uZmlnLmVtYWlsQ29uZmlnLnVzZXJuYW1lLFxuICAgICAgICBwYXNzd29yZDogb3B0aW9ucy5jb25maWcuZW1haWxDb25maWcucGFzc3dvcmQsXG4gICAgICAgIHNlbmRlcl9uYW1lOiBvcHRpb25zLmNvbmZpZy5lbWFpbENvbmZpZy5zZW5kZXJOYW1lLFxuICAgICAgICBzZW5kZXJfZW1haWw6IG9wdGlvbnMuY29uZmlnLmVtYWlsQ29uZmlnLnNlbmRlckVtYWlsXG4gICAgICB9KSxcbiAgICAgIGVtYWlsX3RoZW1lOiBvcHRpb25zLmNvbmZpZz8uZW1haWxUaGVtZSxcbiAgICAgIHNpZ25fdXBfZW5hYmxlZDogb3B0aW9ucy5jb25maWc/LnNpZ25VcEVuYWJsZWQsXG4gICAgICBjcmVkZW50aWFsX2VuYWJsZWQ6IG9wdGlvbnMuY29uZmlnPy5jcmVkZW50aWFsRW5hYmxlZCxcbiAgICAgIG1hZ2ljX2xpbmtfZW5hYmxlZDogb3B0aW9ucy5jb25maWc/Lm1hZ2ljTGlua0VuYWJsZWQsXG4gICAgICBwYXNza2V5X2VuYWJsZWQ6IG9wdGlvbnMuY29uZmlnPy5wYXNza2V5RW5hYmxlZCxcbiAgICAgIGFsbG93X2xvY2FsaG9zdDogb3B0aW9ucy5jb25maWc/LmFsbG93TG9jYWxob3N0LFxuICAgICAgY3JlYXRlX3RlYW1fb25fc2lnbl91cDogb3B0aW9ucy5jb25maWc/LmNyZWF0ZVRlYW1PblNpZ25VcCxcbiAgICAgIGNsaWVudF90ZWFtX2NyZWF0aW9uX2VuYWJsZWQ6IG9wdGlvbnMuY29uZmlnPy5jbGllbnRUZWFtQ3JlYXRpb25FbmFibGVkLFxuICAgICAgY2xpZW50X3VzZXJfZGVsZXRpb25fZW5hYmxlZDogb3B0aW9ucy5jb25maWc/LmNsaWVudFVzZXJEZWxldGlvbkVuYWJsZWQsXG4gICAgICB0ZWFtX2NyZWF0b3JfZGVmYXVsdF9wZXJtaXNzaW9uczogb3B0aW9ucy5jb25maWc/LnRlYW1DcmVhdG9yRGVmYXVsdFBlcm1pc3Npb25zLFxuICAgICAgdGVhbV9tZW1iZXJfZGVmYXVsdF9wZXJtaXNzaW9uczogb3B0aW9ucy5jb25maWc/LnRlYW1NZW1iZXJEZWZhdWx0UGVybWlzc2lvbnMsXG4gICAgICB1c2VyX2RlZmF1bHRfcGVybWlzc2lvbnM6IG9wdGlvbnMuY29uZmlnPy51c2VyRGVmYXVsdFBlcm1pc3Npb25zLFxuICAgICAgb2F1dGhfYWNjb3VudF9tZXJnZV9zdHJhdGVneTogb3B0aW9ucy5jb25maWc/Lm9hdXRoQWNjb3VudE1lcmdlU3RyYXRlZ3ksXG4gICAgICBhbGxvd191c2VyX2FwaV9rZXlzOiBvcHRpb25zLmNvbmZpZz8uYWxsb3dVc2VyQXBpS2V5cyxcbiAgICAgIGFsbG93X3RlYW1fYXBpX2tleXM6IG9wdGlvbnMuY29uZmlnPy5hbGxvd1RlYW1BcGlLZXlzXG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gYWRtaW5Qcm9qZWN0Q3JlYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgLi4uYWRtaW5Qcm9qZWN0VXBkYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSxcbiAgICBkaXNwbGF5X25hbWU6IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgb3duZXJfdGVhbV9pZDogb3B0aW9ucy50ZWFtSWRcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIGFkbWluUHJvamVjdENyZWF0ZU9wdGlvbnNUb0NydWQsXG4gIGFkbWluUHJvamVjdFVwZGF0ZU9wdGlvbnNUb0NydWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/projects/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serverTeamCreateOptionsToCrud: () => (/* binding */ serverTeamCreateOptionsToCrud),\n/* harmony export */   serverTeamUpdateOptionsToCrud: () => (/* binding */ serverTeamUpdateOptionsToCrud),\n/* harmony export */   teamCreateOptionsToCrud: () => (/* binding */ teamCreateOptionsToCrud),\n/* harmony export */   teamUpdateOptionsToCrud: () => (/* binding */ teamUpdateOptionsToCrud)\n/* harmony export */ });\n// src/lib/stack-app/teams/index.ts\nfunction teamUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl,\n    client_metadata: options.clientMetadata\n  };\n}\nfunction teamCreateOptionsToCrud(options, creatorUserId) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl,\n    creator_user_id: creatorUserId\n  };\n}\nfunction serverTeamCreateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl,\n    creator_user_id: options.creatorUserId\n  };\n}\nfunction serverTeamUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    profile_image_url: options.profileImageUrl,\n    client_metadata: options.clientMetadata,\n    client_read_only_metadata: options.clientReadOnlyMetadata,\n    server_metadata: options.serverMetadata\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL3RlYW1zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxAc3RhY2tmcmFtZVxcc3RhY2tcXGRpc3RcXGVzbVxcbGliXFxzdGFjay1hcHBcXHRlYW1zXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbGliL3N0YWNrLWFwcC90ZWFtcy9pbmRleC50c1xuZnVuY3Rpb24gdGVhbVVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGRpc3BsYXlfbmFtZTogb3B0aW9ucy5kaXNwbGF5TmFtZSxcbiAgICBwcm9maWxlX2ltYWdlX3VybDogb3B0aW9ucy5wcm9maWxlSW1hZ2VVcmwsXG4gICAgY2xpZW50X21ldGFkYXRhOiBvcHRpb25zLmNsaWVudE1ldGFkYXRhXG4gIH07XG59XG5mdW5jdGlvbiB0ZWFtQ3JlYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zLCBjcmVhdG9yVXNlcklkKSB7XG4gIHJldHVybiB7XG4gICAgZGlzcGxheV9uYW1lOiBvcHRpb25zLmRpc3BsYXlOYW1lLFxuICAgIHByb2ZpbGVfaW1hZ2VfdXJsOiBvcHRpb25zLnByb2ZpbGVJbWFnZVVybCxcbiAgICBjcmVhdG9yX3VzZXJfaWQ6IGNyZWF0b3JVc2VySWRcbiAgfTtcbn1cbmZ1bmN0aW9uIHNlcnZlclRlYW1DcmVhdGVPcHRpb25zVG9DcnVkKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkaXNwbGF5X25hbWU6IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgcHJvZmlsZV9pbWFnZV91cmw6IG9wdGlvbnMucHJvZmlsZUltYWdlVXJsLFxuICAgIGNyZWF0b3JfdXNlcl9pZDogb3B0aW9ucy5jcmVhdG9yVXNlcklkXG4gIH07XG59XG5mdW5jdGlvbiBzZXJ2ZXJUZWFtVXBkYXRlT3B0aW9uc1RvQ3J1ZChvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgZGlzcGxheV9uYW1lOiBvcHRpb25zLmRpc3BsYXlOYW1lLFxuICAgIHByb2ZpbGVfaW1hZ2VfdXJsOiBvcHRpb25zLnByb2ZpbGVJbWFnZVVybCxcbiAgICBjbGllbnRfbWV0YWRhdGE6IG9wdGlvbnMuY2xpZW50TWV0YWRhdGEsXG4gICAgY2xpZW50X3JlYWRfb25seV9tZXRhZGF0YTogb3B0aW9ucy5jbGllbnRSZWFkT25seU1ldGFkYXRhLFxuICAgIHNlcnZlcl9tZXRhZGF0YTogb3B0aW9ucy5zZXJ2ZXJNZXRhZGF0YVxuICB9O1xufVxuZXhwb3J0IHtcbiAgc2VydmVyVGVhbUNyZWF0ZU9wdGlvbnNUb0NydWQsXG4gIHNlcnZlclRlYW1VcGRhdGVPcHRpb25zVG9DcnVkLFxuICB0ZWFtQ3JlYXRlT3B0aW9uc1RvQ3J1ZCxcbiAgdGVhbVVwZGF0ZU9wdGlvbnNUb0NydWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/teams/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serverUserCreateOptionsToCrud: () => (/* binding */ serverUserCreateOptionsToCrud),\n/* harmony export */   serverUserUpdateOptionsToCrud: () => (/* binding */ serverUserUpdateOptionsToCrud),\n/* harmony export */   userUpdateOptionsToCrud: () => (/* binding */ userUpdateOptionsToCrud)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/bytes */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/bytes.js\");\n// src/lib/stack-app/users/index.ts\n\nfunction userUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    client_metadata: options.clientMetadata,\n    selected_team_id: options.selectedTeamId,\n    totp_secret_base64: options.totpMultiFactorSecret != null ? (0,_stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(options.totpMultiFactorSecret) : options.totpMultiFactorSecret,\n    profile_image_url: options.profileImageUrl,\n    otp_auth_enabled: options.otpAuthEnabled,\n    passkey_auth_enabled: options.passkeyAuthEnabled\n  };\n}\nfunction serverUserUpdateOptionsToCrud(options) {\n  return {\n    display_name: options.displayName,\n    primary_email: options.primaryEmail,\n    client_metadata: options.clientMetadata,\n    client_read_only_metadata: options.clientReadOnlyMetadata,\n    server_metadata: options.serverMetadata,\n    selected_team_id: options.selectedTeamId,\n    primary_email_auth_enabled: options.primaryEmailAuthEnabled,\n    primary_email_verified: options.primaryEmailVerified,\n    password: options.password,\n    profile_image_url: options.profileImageUrl,\n    totp_secret_base64: options.totpMultiFactorSecret != null ? (0,_stackframe_stack_shared_dist_utils_bytes__WEBPACK_IMPORTED_MODULE_0__.encodeBase64)(options.totpMultiFactorSecret) : options.totpMultiFactorSecret\n  };\n}\nfunction serverUserCreateOptionsToCrud(options) {\n  return {\n    primary_email: options.primaryEmail,\n    password: options.password,\n    otp_auth_enabled: options.otpAuthEnabled,\n    primary_email_auth_enabled: options.primaryEmailAuthEnabled,\n    display_name: options.displayName,\n    primary_email_verified: options.primaryEmailVerified,\n    client_metadata: options.clientMetadata,\n    client_read_only_metadata: options.clientReadOnlyMetadata,\n    server_metadata: options.serverMetadata\n  };\n}\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9saWIvc3RhY2stYXBwL3VzZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUN5RTtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLHVGQUFZO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsdUZBQVk7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFja1xcZGlzdFxcZXNtXFxsaWJcXHN0YWNrLWFwcFxcdXNlcnNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9saWIvc3RhY2stYXBwL3VzZXJzL2luZGV4LnRzXG5pbXBvcnQgeyBlbmNvZGVCYXNlNjQgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvYnl0ZXNcIjtcbmZ1bmN0aW9uIHVzZXJVcGRhdGVPcHRpb25zVG9DcnVkKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHtcbiAgICBkaXNwbGF5X25hbWU6IG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgY2xpZW50X21ldGFkYXRhOiBvcHRpb25zLmNsaWVudE1ldGFkYXRhLFxuICAgIHNlbGVjdGVkX3RlYW1faWQ6IG9wdGlvbnMuc2VsZWN0ZWRUZWFtSWQsXG4gICAgdG90cF9zZWNyZXRfYmFzZTY0OiBvcHRpb25zLnRvdHBNdWx0aUZhY3RvclNlY3JldCAhPSBudWxsID8gZW5jb2RlQmFzZTY0KG9wdGlvbnMudG90cE11bHRpRmFjdG9yU2VjcmV0KSA6IG9wdGlvbnMudG90cE11bHRpRmFjdG9yU2VjcmV0LFxuICAgIHByb2ZpbGVfaW1hZ2VfdXJsOiBvcHRpb25zLnByb2ZpbGVJbWFnZVVybCxcbiAgICBvdHBfYXV0aF9lbmFibGVkOiBvcHRpb25zLm90cEF1dGhFbmFibGVkLFxuICAgIHBhc3NrZXlfYXV0aF9lbmFibGVkOiBvcHRpb25zLnBhc3NrZXlBdXRoRW5hYmxlZFxuICB9O1xufVxuZnVuY3Rpb24gc2VydmVyVXNlclVwZGF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGRpc3BsYXlfbmFtZTogb3B0aW9ucy5kaXNwbGF5TmFtZSxcbiAgICBwcmltYXJ5X2VtYWlsOiBvcHRpb25zLnByaW1hcnlFbWFpbCxcbiAgICBjbGllbnRfbWV0YWRhdGE6IG9wdGlvbnMuY2xpZW50TWV0YWRhdGEsXG4gICAgY2xpZW50X3JlYWRfb25seV9tZXRhZGF0YTogb3B0aW9ucy5jbGllbnRSZWFkT25seU1ldGFkYXRhLFxuICAgIHNlcnZlcl9tZXRhZGF0YTogb3B0aW9ucy5zZXJ2ZXJNZXRhZGF0YSxcbiAgICBzZWxlY3RlZF90ZWFtX2lkOiBvcHRpb25zLnNlbGVjdGVkVGVhbUlkLFxuICAgIHByaW1hcnlfZW1haWxfYXV0aF9lbmFibGVkOiBvcHRpb25zLnByaW1hcnlFbWFpbEF1dGhFbmFibGVkLFxuICAgIHByaW1hcnlfZW1haWxfdmVyaWZpZWQ6IG9wdGlvbnMucHJpbWFyeUVtYWlsVmVyaWZpZWQsXG4gICAgcGFzc3dvcmQ6IG9wdGlvbnMucGFzc3dvcmQsXG4gICAgcHJvZmlsZV9pbWFnZV91cmw6IG9wdGlvbnMucHJvZmlsZUltYWdlVXJsLFxuICAgIHRvdHBfc2VjcmV0X2Jhc2U2NDogb3B0aW9ucy50b3RwTXVsdGlGYWN0b3JTZWNyZXQgIT0gbnVsbCA/IGVuY29kZUJhc2U2NChvcHRpb25zLnRvdHBNdWx0aUZhY3RvclNlY3JldCkgOiBvcHRpb25zLnRvdHBNdWx0aUZhY3RvclNlY3JldFxuICB9O1xufVxuZnVuY3Rpb24gc2VydmVyVXNlckNyZWF0ZU9wdGlvbnNUb0NydWQob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIHByaW1hcnlfZW1haWw6IG9wdGlvbnMucHJpbWFyeUVtYWlsLFxuICAgIHBhc3N3b3JkOiBvcHRpb25zLnBhc3N3b3JkLFxuICAgIG90cF9hdXRoX2VuYWJsZWQ6IG9wdGlvbnMub3RwQXV0aEVuYWJsZWQsXG4gICAgcHJpbWFyeV9lbWFpbF9hdXRoX2VuYWJsZWQ6IG9wdGlvbnMucHJpbWFyeUVtYWlsQXV0aEVuYWJsZWQsXG4gICAgZGlzcGxheV9uYW1lOiBvcHRpb25zLmRpc3BsYXlOYW1lLFxuICAgIHByaW1hcnlfZW1haWxfdmVyaWZpZWQ6IG9wdGlvbnMucHJpbWFyeUVtYWlsVmVyaWZpZWQsXG4gICAgY2xpZW50X21ldGFkYXRhOiBvcHRpb25zLmNsaWVudE1ldGFkYXRhLFxuICAgIGNsaWVudF9yZWFkX29ubHlfbWV0YWRhdGE6IG9wdGlvbnMuY2xpZW50UmVhZE9ubHlNZXRhZGF0YSxcbiAgICBzZXJ2ZXJfbWV0YWRhdGE6IG9wdGlvbnMuc2VydmVyTWV0YWRhdGFcbiAgfTtcbn1cbmV4cG9ydCB7XG4gIHNlcnZlclVzZXJDcmVhdGVPcHRpb25zVG9DcnVkLFxuICBzZXJ2ZXJVc2VyVXBkYXRlT3B0aW9uc1RvQ3J1ZCxcbiAgdXNlclVwZGF0ZU9wdGlvbnNUb0NydWRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/users/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StackContext: () => (/* binding */ StackContext),\n/* harmony export */   StackProviderClient: () => (/* binding */ StackProviderClient),\n/* harmony export */   UserSetter: () => (/* binding */ UserSetter)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/globals */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/globals.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/hooks.js\");\n/* harmony import */ var _lib_stack_app_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/stack-app/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/apps/interfaces/client-app.js\");\n/* harmony import */ var _lib_stack_app_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/stack-app/index.js */ \"(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/lib/stack-app/common.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ StackContext,StackProviderClient,UserSetter auto */ var _s = $RefreshSig$();\n// src/providers/stack-provider-client.tsx\n\n\n\n\n\nvar StackContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext(null);\nfunction StackProviderClient(props) {\n    const app = props.serialized ? _lib_stack_app_index_js__WEBPACK_IMPORTED_MODULE_3__.StackClientApp[_lib_stack_app_index_js__WEBPACK_IMPORTED_MODULE_4__.stackAppInternalsSymbol].fromClientJson(props.app) : props.app;\n    _stackframe_stack_shared_dist_utils_globals__WEBPACK_IMPORTED_MODULE_0__.globalVar.__STACK_AUTH__ = {\n        app\n    };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(StackContext.Provider, {\n        value: {\n            app\n        },\n        children: props.children\n    });\n}\n_c = StackProviderClient;\nfunction UserSetter(props) {\n    _s();\n    const app = (0,_index_js__WEBPACK_IMPORTED_MODULE_5__.useStackApp)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"UserSetter.useEffect\": ()=>{\n            const promise = ({\n                \"UserSetter.useEffect.promise\": async ()=>await props.userJsonPromise\n            })[\"UserSetter.useEffect.promise\"]();\n            app[_lib_stack_app_index_js__WEBPACK_IMPORTED_MODULE_4__.stackAppInternalsSymbol].setCurrentUser(promise);\n        }\n    }[\"UserSetter.useEffect\"], []);\n    return null;\n}\n_s(UserSetter, \"SvtpiKrHtw9ISKE2MIQgyXUhtRU=\", false, function() {\n    return [\n        _index_js__WEBPACK_IMPORTED_MODULE_5__.useStackApp\n    ];\n});\n_c1 = UserSetter;\n //# sourceMappingURL=stack-provider-client.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"StackProviderClient\");\n$RefreshReg$(_c1, \"UserSetter\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS9wcm92aWRlcnMvc3RhY2stcHJvdmlkZXItY2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBUUEsU0FBUyxpQkFBaUI7QUFDTztBQUNMO0FBQ2lCO0FBaUJ6QztBQWJEO0FBRUksU0FBUyxrRkFJYjtBQUNELFFBQU0scUJBQVksSUFDZDtJQUVKLFVBQVUsaUJBQWlCLEVBQUUscUVBQUk7SUFFakMsa0ZBQ0Usa0JBQUM7UUFBQTtJQUFBO0lBSUw7UUFBQTtZQUFBO1FBQUE7UUFBQTtJQUFBO0FBRU87S0FaQyxLQUFNLE1BQU07QUFhbEIsUUFBTSxZQUFNLE1BQVk7O0lBQ3hCLFVBQVU7SUFDUixnREFBTTtnQ0FBQTtZQUNOLElBQUk7Z0RBQUEsVUFBdUIsTUFBRSxTQUFlLE9BQU87O1lBQ3JELENBQUcsQ0FBQyxDQUFDO1FBQ0w7K0JBQUEsSUFBTztJQUNUOztHQU5ROztRQUNJLGtEQUFNOzs7TUFEVixLQUFNIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXHNyY1xccHJvdmlkZXJzXFxzdGFjay1wcm92aWRlci1jbGllbnQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5cbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVEhJUyBGSUxFIElTIEFVVE8tR0VORVJBVEVEIEZST00gVEVNUExBVEUuIERPIE5PVCBFRElUIElUIERJUkVDVExZXG4vLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuaW1wb3J0IHsgQ3VycmVudFVzZXJDcnVkIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L2ludGVyZmFjZS9jcnVkL2N1cnJlbnQtdXNlclwiO1xuaW1wb3J0IHsgZ2xvYmFsVmFyIH0gZnJvbSBcIkBzdGFja2ZyYW1lL3N0YWNrLXNoYXJlZC9kaXN0L3V0aWxzL2dsb2JhbHNcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVN0YWNrQXBwIH0gZnJvbSBcIi4uXCI7XG5pbXBvcnQgeyBTdGFja0NsaWVudEFwcCwgU3RhY2tDbGllbnRBcHBKc29uLCBzdGFja0FwcEludGVybmFsc1N5bWJvbCB9IGZyb20gXCIuLi9saWIvc3RhY2stYXBwXCI7XG5cbmV4cG9ydCBjb25zdCBTdGFja0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0PG51bGwgfCB7XG4gIGFwcDogU3RhY2tDbGllbnRBcHA8dHJ1ZT4sXG59PihudWxsKTtcblxuZXhwb3J0IGZ1bmN0aW9uIFN0YWNrUHJvdmlkZXJDbGllbnQocHJvcHM6IHtcbiAgYXBwOiBTdGFja0NsaWVudEFwcEpzb248dHJ1ZSwgc3RyaW5nPiB8IFN0YWNrQ2xpZW50QXBwPHRydWU+LFxuICBzZXJpYWxpemVkOiBib29sZWFuLFxuICBjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZSxcbn0pIHtcbiAgY29uc3QgYXBwID0gcHJvcHMuc2VyaWFsaXplZFxuICAgID8gU3RhY2tDbGllbnRBcHBbc3RhY2tBcHBJbnRlcm5hbHNTeW1ib2xdLmZyb21DbGllbnRKc29uKHByb3BzLmFwcCBhcyBTdGFja0NsaWVudEFwcEpzb248dHJ1ZSwgc3RyaW5nPilcbiAgICA6IHByb3BzLmFwcCBhcyBTdGFja0NsaWVudEFwcDx0cnVlPjtcbiAgZ2xvYmFsVmFyLl9fU1RBQ0tfQVVUSF9fID0geyBhcHAgfTtcblxuICByZXR1cm4gKFxuICAgIDxTdGFja0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgYXBwIH19PlxuICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgIDwvU3RhY2tDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gVXNlclNldHRlcihwcm9wczogeyB1c2VySnNvblByb21pc2U6IFByb21pc2U8Q3VycmVudFVzZXJDcnVkWydDbGllbnQnXVsnUmVhZCddIHwgbnVsbD4gfSkge1xuICBjb25zdCBhcHAgPSB1c2VTdGFja0FwcCgpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHByb21pc2UgPSAoYXN5bmMgKCkgPT4gYXdhaXQgcHJvcHMudXNlckpzb25Qcm9taXNlKSgpOyAgLy8gdGhlcmUgaXMgYSBOZXh0LmpzIGJ1ZyB3aGVyZSBQcm9taXNlcyBwYXNzZWQgYnkgc2VydmVyIGNvbXBvbmVudHMgcmV0dXJuIGB1bmRlZmluZWRgIGFzIHRoZWlyIGB0aGVuYCB2YWx1ZSwgc28gd3JhcCBpdCBpbiBhIG5vcm1hbCBwcm9taXNlXG4gICAgYXBwW3N0YWNrQXBwSW50ZXJuYWxzU3ltYm9sXS5zZXRDdXJyZW50VXNlcihwcm9taXNlKTtcbiAgfSwgW10pO1xuICByZXR1cm4gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/providers/stack-provider-client.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js":
/*!**************************************************************!*\
  !*** ./node_modules/@stackframe/stack/dist/esm/utils/url.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   constructRedirectUrl: () => (/* binding */ constructRedirectUrl)\n/* harmony export */ });\n/* harmony import */ var _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stackframe/stack-shared/dist/utils/errors */ \"(app-pages-browser)/./node_modules/@stackframe/stack-shared/dist/esm/utils/errors.js\");\n// src/utils/url.ts\n\nfunction constructRedirectUrl(redirectUrl, callbackUrlName) {\n  if (typeof window === \"undefined\" || !window.location) {\n    throw new _stackframe_stack_shared_dist_utils_errors__WEBPACK_IMPORTED_MODULE_0__.StackAssertionError(`${callbackUrlName} option is required in a non-browser environment.`, { redirectUrl });\n  }\n  const retainedQueryParams = [\"after_auth_return_to\"];\n  const currentUrl = new URL(window.location.href);\n  const url = redirectUrl ? new URL(redirectUrl, window.location.href) : new URL(window.location.href);\n  for (const param of retainedQueryParams) {\n    if (currentUrl.searchParams.has(param)) {\n      url.searchParams.set(param, currentUrl.searchParams.get(param));\n    }\n  }\n  url.hash = \"\";\n  return url.toString();\n}\n\n//# sourceMappingURL=url.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RhY2tmcmFtZS9zdGFjay9kaXN0L2VzbS91dGlscy91cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNpRjtBQUNqRjtBQUNBO0FBQ0EsY0FBYywyRkFBbUIsSUFBSSxpQkFBaUIscURBQXFELGFBQWE7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXEBzdGFja2ZyYW1lXFxzdGFja1xcZGlzdFxcZXNtXFx1dGlsc1xcdXJsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91dGlscy91cmwudHNcbmltcG9ydCB7IFN0YWNrQXNzZXJ0aW9uRXJyb3IgfSBmcm9tIFwiQHN0YWNrZnJhbWUvc3RhY2stc2hhcmVkL2Rpc3QvdXRpbHMvZXJyb3JzXCI7XG5mdW5jdGlvbiBjb25zdHJ1Y3RSZWRpcmVjdFVybChyZWRpcmVjdFVybCwgY2FsbGJhY2tVcmxOYW1lKSB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiIHx8ICF3aW5kb3cubG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgU3RhY2tBc3NlcnRpb25FcnJvcihgJHtjYWxsYmFja1VybE5hbWV9IG9wdGlvbiBpcyByZXF1aXJlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50LmAsIHsgcmVkaXJlY3RVcmwgfSk7XG4gIH1cbiAgY29uc3QgcmV0YWluZWRRdWVyeVBhcmFtcyA9IFtcImFmdGVyX2F1dGhfcmV0dXJuX3RvXCJdO1xuICBjb25zdCBjdXJyZW50VXJsID0gbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gIGNvbnN0IHVybCA9IHJlZGlyZWN0VXJsID8gbmV3IFVSTChyZWRpcmVjdFVybCwgd2luZG93LmxvY2F0aW9uLmhyZWYpIDogbmV3IFVSTCh3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gIGZvciAoY29uc3QgcGFyYW0gb2YgcmV0YWluZWRRdWVyeVBhcmFtcykge1xuICAgIGlmIChjdXJyZW50VXJsLnNlYXJjaFBhcmFtcy5oYXMocGFyYW0pKSB7XG4gICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldChwYXJhbSwgY3VycmVudFVybC5zZWFyY2hQYXJhbXMuZ2V0KHBhcmFtKSk7XG4gICAgfVxuICB9XG4gIHVybC5oYXNoID0gXCJcIjtcbiAgcmV0dXJuIHVybC50b1N0cmluZygpO1xufVxuZXhwb3J0IHtcbiAgY29uc3RydWN0UmVkaXJlY3RVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cmwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@stackframe/stack/dist/esm/utils/url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/async-mutex/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/async-mutex/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E_ALREADY_LOCKED: () => (/* binding */ E_ALREADY_LOCKED),\n/* harmony export */   E_CANCELED: () => (/* binding */ E_CANCELED),\n/* harmony export */   E_TIMEOUT: () => (/* binding */ E_TIMEOUT),\n/* harmony export */   Mutex: () => (/* binding */ Mutex),\n/* harmony export */   Semaphore: () => (/* binding */ Semaphore),\n/* harmony export */   tryAcquire: () => (/* binding */ tryAcquire),\n/* harmony export */   withTimeout: () => (/* binding */ withTimeout)\n/* harmony export */ });\nconst E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nconst E_ALREADY_LOCKED = new Error('mutex already locked');\nconst E_CANCELED = new Error('request for lock canceled');\n\nvar __awaiter$2 = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Semaphore {\n    constructor(_value, _cancelError = E_CANCELED) {\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._queue = [];\n        this._weightedWaiters = [];\n    }\n    acquire(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        return new Promise((resolve, reject) => {\n            const task = { resolve, reject, weight, priority };\n            const i = findIndexFromEnd(this._queue, (other) => priority <= other.priority);\n            if (i === -1 && weight <= this._value) {\n                // Needs immediate dispatch, skip the queue\n                this._dispatchItem(task);\n            }\n            else {\n                this._queue.splice(i + 1, 0, task);\n            }\n        });\n    }\n    runExclusive(callback_1) {\n        return __awaiter$2(this, arguments, void 0, function* (callback, weight = 1, priority = 0) {\n            const [value, release] = yield this.acquire(weight, priority);\n            try {\n                return yield callback(value);\n            }\n            finally {\n                release();\n            }\n        });\n    }\n    waitForUnlock(weight = 1, priority = 0) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        if (this._couldLockImmediately(weight, priority)) {\n            return Promise.resolve();\n        }\n        else {\n            return new Promise((resolve) => {\n                if (!this._weightedWaiters[weight - 1])\n                    this._weightedWaiters[weight - 1] = [];\n                insertSorted(this._weightedWaiters[weight - 1], { resolve, priority });\n            });\n        }\n    }\n    isLocked() {\n        return this._value <= 0;\n    }\n    getValue() {\n        return this._value;\n    }\n    setValue(value) {\n        this._value = value;\n        this._dispatchQueue();\n    }\n    release(weight = 1) {\n        if (weight <= 0)\n            throw new Error(`invalid weight ${weight}: must be positive`);\n        this._value += weight;\n        this._dispatchQueue();\n    }\n    cancel() {\n        this._queue.forEach((entry) => entry.reject(this._cancelError));\n        this._queue = [];\n    }\n    _dispatchQueue() {\n        this._drainUnlockWaiters();\n        while (this._queue.length > 0 && this._queue[0].weight <= this._value) {\n            this._dispatchItem(this._queue.shift());\n            this._drainUnlockWaiters();\n        }\n    }\n    _dispatchItem(item) {\n        const previousValue = this._value;\n        this._value -= item.weight;\n        item.resolve([previousValue, this._newReleaser(item.weight)]);\n    }\n    _newReleaser(weight) {\n        let called = false;\n        return () => {\n            if (called)\n                return;\n            called = true;\n            this.release(weight);\n        };\n    }\n    _drainUnlockWaiters() {\n        if (this._queue.length === 0) {\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                waiters.forEach((waiter) => waiter.resolve());\n                this._weightedWaiters[weight - 1] = [];\n            }\n        }\n        else {\n            const queuedPriority = this._queue[0].priority;\n            for (let weight = this._value; weight > 0; weight--) {\n                const waiters = this._weightedWaiters[weight - 1];\n                if (!waiters)\n                    continue;\n                const i = waiters.findIndex((waiter) => waiter.priority <= queuedPriority);\n                (i === -1 ? waiters : waiters.splice(0, i))\n                    .forEach((waiter => waiter.resolve()));\n            }\n        }\n    }\n    _couldLockImmediately(weight, priority) {\n        return (this._queue.length === 0 || this._queue[0].priority < priority) &&\n            weight <= this._value;\n    }\n}\nfunction insertSorted(a, v) {\n    const i = findIndexFromEnd(a, (other) => v.priority <= other.priority);\n    a.splice(i + 1, 0, v);\n}\nfunction findIndexFromEnd(a, predicate) {\n    for (let i = a.length - 1; i >= 0; i--) {\n        if (predicate(a[i])) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nvar __awaiter$1 = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass Mutex {\n    constructor(cancelError) {\n        this._semaphore = new Semaphore(1, cancelError);\n    }\n    acquire() {\n        return __awaiter$1(this, arguments, void 0, function* (priority = 0) {\n            const [, releaser] = yield this._semaphore.acquire(1, priority);\n            return releaser;\n        });\n    }\n    runExclusive(callback, priority = 0) {\n        return this._semaphore.runExclusive(() => callback(), 1, priority);\n    }\n    isLocked() {\n        return this._semaphore.isLocked();\n    }\n    waitForUnlock(priority = 0) {\n        return this._semaphore.waitForUnlock(1, priority);\n    }\n    release() {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    }\n    cancel() {\n        return this._semaphore.cancel();\n    }\n}\n\nvar __awaiter = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction withTimeout(sync, timeout, timeoutError = E_TIMEOUT) {\n    return {\n        acquire: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                let isTimeout = false;\n                const handle = setTimeout(() => {\n                    isTimeout = true;\n                    reject(timeoutError);\n                }, timeout);\n                try {\n                    const ticket = yield (isSemaphore(sync)\n                        ? sync.acquire(weight, priority)\n                        : sync.acquire(priority));\n                    if (isTimeout) {\n                        const release = Array.isArray(ticket) ? ticket[1] : ticket;\n                        release();\n                    }\n                    else {\n                        clearTimeout(handle);\n                        resolve(ticket);\n                    }\n                }\n                catch (e) {\n                    if (!isTimeout) {\n                        clearTimeout(handle);\n                        reject(e);\n                    }\n                }\n            }));\n        },\n        runExclusive(callback, weight, priority) {\n            return __awaiter(this, void 0, void 0, function* () {\n                let release = () => undefined;\n                try {\n                    const ticket = yield this.acquire(weight, priority);\n                    if (Array.isArray(ticket)) {\n                        release = ticket[1];\n                        return yield callback(ticket[0]);\n                    }\n                    else {\n                        release = ticket;\n                        return yield callback();\n                    }\n                }\n                finally {\n                    release();\n                }\n            });\n        },\n        release(weight) {\n            sync.release(weight);\n        },\n        cancel() {\n            return sync.cancel();\n        },\n        waitForUnlock: (weightOrPriority, priority) => {\n            let weight;\n            if (isSemaphore(sync)) {\n                weight = weightOrPriority;\n            }\n            else {\n                weight = undefined;\n                priority = weightOrPriority;\n            }\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(`invalid weight ${weight}: must be positive`);\n            }\n            return new Promise((resolve, reject) => {\n                const handle = setTimeout(() => reject(timeoutError), timeout);\n                (isSemaphore(sync)\n                    ? sync.waitForUnlock(weight, priority)\n                    : sync.waitForUnlock(priority)).then(() => {\n                    clearTimeout(handle);\n                    resolve();\n                });\n            });\n        },\n        isLocked: () => sync.isLocked(),\n        getValue: () => sync.getValue(),\n        setValue: (value) => sync.setValue(value),\n    };\n}\nfunction isSemaphore(sync) {\n    return sync.getValue !== undefined;\n}\n\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError = E_ALREADY_LOCKED) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return withTimeout(sync, 0, alreadyAcquiredError);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/async-mutex/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.partitioned) {\n    str += '; Partitioned'\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jb29raWUvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWE7QUFDYixpQkFBaUI7O0FBRWpCO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0I7O0FBRS9CO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGdCQUFnQjtBQUM3QyxrQkFBa0I7QUFDbEI7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGNBQWM7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsY0FBYztBQUNkOztBQUVBO0FBQ0EsY0FBYztBQUNkOztBQUVBO0FBQ0EsY0FBYztBQUNkOztBQUVBO0FBQ0EsY0FBYztBQUNkOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcY29va2llXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGNvb2tpZVxuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBSb21hbiBTaHR5bG1hblxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2R1bGUgZXhwb3J0cy5cbiAqIEBwdWJsaWNcbiAqL1xuXG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5leHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTtcblxuLyoqXG4gKiBNb2R1bGUgdmFyaWFibGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG52YXIgX190b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcblxuLyoqXG4gKiBSZWdFeHAgdG8gbWF0Y2ggZmllbGQtY29udGVudCBpbiBSRkMgNzIzMCBzZWMgMy4yXG4gKlxuICogZmllbGQtY29udGVudCA9IGZpZWxkLXZjaGFyIFsgMSooIFNQIC8gSFRBQiApIGZpZWxkLXZjaGFyIF1cbiAqIGZpZWxkLXZjaGFyICAgPSBWQ0hBUiAvIG9icy10ZXh0XG4gKiBvYnMtdGV4dCAgICAgID0gJXg4MC1GRlxuICovXG5cbnZhciBmaWVsZENvbnRlbnRSZWdFeHAgPSAvXltcXHUwMDA5XFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHUwMGZmXSskLztcblxuLyoqXG4gKiBQYXJzZSBhIGNvb2tpZSBoZWFkZXIuXG4gKlxuICogUGFyc2UgdGhlIGdpdmVuIGNvb2tpZSBoZWFkZXIgc3RyaW5nIGludG8gYW4gb2JqZWN0XG4gKiBUaGUgb2JqZWN0IGhhcyB0aGUgdmFyaW91cyBjb29raWVzIGFzIGtleXMobmFtZXMpID0+IHZhbHVlc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9uc11cbiAqIEByZXR1cm4ge29iamVjdH1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZShzdHIsIG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgc3RyIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgfVxuXG4gIHZhciBvYmogPSB7fVxuICB2YXIgb3B0ID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIGRlYyA9IG9wdC5kZWNvZGUgfHwgZGVjb2RlO1xuXG4gIHZhciBpbmRleCA9IDBcbiAgd2hpbGUgKGluZGV4IDwgc3RyLmxlbmd0aCkge1xuICAgIHZhciBlcUlkeCA9IHN0ci5pbmRleE9mKCc9JywgaW5kZXgpXG5cbiAgICAvLyBubyBtb3JlIGNvb2tpZSBwYWlyc1xuICAgIGlmIChlcUlkeCA9PT0gLTEpIHtcbiAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgdmFyIGVuZElkeCA9IHN0ci5pbmRleE9mKCc7JywgaW5kZXgpXG5cbiAgICBpZiAoZW5kSWR4ID09PSAtMSkge1xuICAgICAgZW5kSWR4ID0gc3RyLmxlbmd0aFxuICAgIH0gZWxzZSBpZiAoZW5kSWR4IDwgZXFJZHgpIHtcbiAgICAgIC8vIGJhY2t0cmFjayBvbiBwcmlvciBzZW1pY29sb25cbiAgICAgIGluZGV4ID0gc3RyLmxhc3RJbmRleE9mKCc7JywgZXFJZHggLSAxKSArIDFcbiAgICAgIGNvbnRpbnVlXG4gICAgfVxuXG4gICAgdmFyIGtleSA9IHN0ci5zbGljZShpbmRleCwgZXFJZHgpLnRyaW0oKVxuXG4gICAgLy8gb25seSBhc3NpZ24gb25jZVxuICAgIGlmICh1bmRlZmluZWQgPT09IG9ialtrZXldKSB7XG4gICAgICB2YXIgdmFsID0gc3RyLnNsaWNlKGVxSWR4ICsgMSwgZW5kSWR4KS50cmltKClcblxuICAgICAgLy8gcXVvdGVkIHZhbHVlc1xuICAgICAgaWYgKHZhbC5jaGFyQ29kZUF0KDApID09PSAweDIyKSB7XG4gICAgICAgIHZhbCA9IHZhbC5zbGljZSgxLCAtMSlcbiAgICAgIH1cblxuICAgICAgb2JqW2tleV0gPSB0cnlEZWNvZGUodmFsLCBkZWMpO1xuICAgIH1cblxuICAgIGluZGV4ID0gZW5kSWR4ICsgMVxuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuLyoqXG4gKiBTZXJpYWxpemUgZGF0YSBpbnRvIGEgY29va2llIGhlYWRlci5cbiAqXG4gKiBTZXJpYWxpemUgdGhlIGEgbmFtZSB2YWx1ZSBwYWlyIGludG8gYSBjb29raWUgc3RyaW5nIHN1aXRhYmxlIGZvclxuICogaHR0cCBoZWFkZXJzLiBBbiBvcHRpb25hbCBvcHRpb25zIG9iamVjdCBzcGVjaWZpZWQgY29va2llIHBhcmFtZXRlcnMuXG4gKlxuICogc2VyaWFsaXplKCdmb28nLCAnYmFyJywgeyBodHRwT25seTogdHJ1ZSB9KVxuICogICA9PiBcImZvbz1iYXI7IGh0dHBPbmx5XCJcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICogQHBhcmFtIHtzdHJpbmd9IHZhbFxuICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zXVxuICogQHJldHVybiB7c3RyaW5nfVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHNlcmlhbGl6ZShuYW1lLCB2YWwsIG9wdGlvbnMpIHtcbiAgdmFyIG9wdCA9IG9wdGlvbnMgfHwge307XG4gIHZhciBlbmMgPSBvcHQuZW5jb2RlIHx8IGVuY29kZTtcblxuICBpZiAodHlwZW9mIGVuYyAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBlbmNvZGUgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgaWYgKCFmaWVsZENvbnRlbnRSZWdFeHAudGVzdChuYW1lKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IG5hbWUgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgdmFyIHZhbHVlID0gZW5jKHZhbCk7XG5cbiAgaWYgKHZhbHVlICYmICFmaWVsZENvbnRlbnRSZWdFeHAudGVzdCh2YWx1ZSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCB2YWwgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgdmFyIHN0ciA9IG5hbWUgKyAnPScgKyB2YWx1ZTtcblxuICBpZiAobnVsbCAhPSBvcHQubWF4QWdlKSB7XG4gICAgdmFyIG1heEFnZSA9IG9wdC5tYXhBZ2UgLSAwO1xuXG4gICAgaWYgKGlzTmFOKG1heEFnZSkgfHwgIWlzRmluaXRlKG1heEFnZSkpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ29wdGlvbiBtYXhBZ2UgaXMgaW52YWxpZCcpXG4gICAgfVxuXG4gICAgc3RyICs9ICc7IE1heC1BZ2U9JyArIE1hdGguZmxvb3IobWF4QWdlKTtcbiAgfVxuXG4gIGlmIChvcHQuZG9tYWluKSB7XG4gICAgaWYgKCFmaWVsZENvbnRlbnRSZWdFeHAudGVzdChvcHQuZG9tYWluKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIGRvbWFpbiBpcyBpbnZhbGlkJyk7XG4gICAgfVxuXG4gICAgc3RyICs9ICc7IERvbWFpbj0nICsgb3B0LmRvbWFpbjtcbiAgfVxuXG4gIGlmIChvcHQucGF0aCkge1xuICAgIGlmICghZmllbGRDb250ZW50UmVnRXhwLnRlc3Qob3B0LnBhdGgpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gcGF0aCBpcyBpbnZhbGlkJyk7XG4gICAgfVxuXG4gICAgc3RyICs9ICc7IFBhdGg9JyArIG9wdC5wYXRoO1xuICB9XG5cbiAgaWYgKG9wdC5leHBpcmVzKSB7XG4gICAgdmFyIGV4cGlyZXMgPSBvcHQuZXhwaXJlc1xuXG4gICAgaWYgKCFpc0RhdGUoZXhwaXJlcykgfHwgaXNOYU4oZXhwaXJlcy52YWx1ZU9mKCkpKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gZXhwaXJlcyBpcyBpbnZhbGlkJyk7XG4gICAgfVxuXG4gICAgc3RyICs9ICc7IEV4cGlyZXM9JyArIGV4cGlyZXMudG9VVENTdHJpbmcoKVxuICB9XG5cbiAgaWYgKG9wdC5odHRwT25seSkge1xuICAgIHN0ciArPSAnOyBIdHRwT25seSc7XG4gIH1cblxuICBpZiAob3B0LnNlY3VyZSkge1xuICAgIHN0ciArPSAnOyBTZWN1cmUnO1xuICB9XG5cbiAgaWYgKG9wdC5wYXJ0aXRpb25lZCkge1xuICAgIHN0ciArPSAnOyBQYXJ0aXRpb25lZCdcbiAgfVxuXG4gIGlmIChvcHQucHJpb3JpdHkpIHtcbiAgICB2YXIgcHJpb3JpdHkgPSB0eXBlb2Ygb3B0LnByaW9yaXR5ID09PSAnc3RyaW5nJ1xuICAgICAgPyBvcHQucHJpb3JpdHkudG9Mb3dlckNhc2UoKVxuICAgICAgOiBvcHQucHJpb3JpdHlcblxuICAgIHN3aXRjaCAocHJpb3JpdHkpIHtcbiAgICAgIGNhc2UgJ2xvdyc6XG4gICAgICAgIHN0ciArPSAnOyBQcmlvcml0eT1Mb3cnXG4gICAgICAgIGJyZWFrXG4gICAgICBjYXNlICdtZWRpdW0nOlxuICAgICAgICBzdHIgKz0gJzsgUHJpb3JpdHk9TWVkaXVtJ1xuICAgICAgICBicmVha1xuICAgICAgY2FzZSAnaGlnaCc6XG4gICAgICAgIHN0ciArPSAnOyBQcmlvcml0eT1IaWdoJ1xuICAgICAgICBicmVha1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignb3B0aW9uIHByaW9yaXR5IGlzIGludmFsaWQnKVxuICAgIH1cbiAgfVxuXG4gIGlmIChvcHQuc2FtZVNpdGUpIHtcbiAgICB2YXIgc2FtZVNpdGUgPSB0eXBlb2Ygb3B0LnNhbWVTaXRlID09PSAnc3RyaW5nJ1xuICAgICAgPyBvcHQuc2FtZVNpdGUudG9Mb3dlckNhc2UoKSA6IG9wdC5zYW1lU2l0ZTtcblxuICAgIHN3aXRjaCAoc2FtZVNpdGUpIHtcbiAgICAgIGNhc2UgdHJ1ZTpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbGF4JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPUxheCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3RyaWN0JzpcbiAgICAgICAgc3RyICs9ICc7IFNhbWVTaXRlPVN0cmljdCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbm9uZSc6XG4gICAgICAgIHN0ciArPSAnOyBTYW1lU2l0ZT1Ob25lJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdvcHRpb24gc2FtZVNpdGUgaXMgaW52YWxpZCcpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBzdHI7XG59XG5cbi8qKlxuICogVVJMLWRlY29kZSBzdHJpbmcgdmFsdWUuIE9wdGltaXplZCB0byBza2lwIG5hdGl2ZSBjYWxsIHdoZW4gbm8gJS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5cbmZ1bmN0aW9uIGRlY29kZSAoc3RyKSB7XG4gIHJldHVybiBzdHIuaW5kZXhPZignJScpICE9PSAtMVxuICAgID8gZGVjb2RlVVJJQ29tcG9uZW50KHN0cilcbiAgICA6IHN0clxufVxuXG4vKipcbiAqIFVSTC1lbmNvZGUgdmFsdWUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbFxuICogQHJldHVybnMge3N0cmluZ31cbiAqL1xuXG5mdW5jdGlvbiBlbmNvZGUgKHZhbCkge1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbClcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgdmFsdWUgaXMgYSBEYXRlLlxuICpcbiAqIEBwYXJhbSB7Kn0gdmFsXG4gKiBAcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGlzRGF0ZSAodmFsKSB7XG4gIHJldHVybiBfX3RvU3RyaW5nLmNhbGwodmFsKSA9PT0gJ1tvYmplY3QgRGF0ZV0nIHx8XG4gICAgdmFsIGluc3RhbmNlb2YgRGF0ZVxufVxuXG4vKipcbiAqIFRyeSBkZWNvZGluZyBhIHN0cmluZyB1c2luZyBhIGRlY29kaW5nIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGRlY29kZVxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiB0cnlEZWNvZGUoc3RyLCBkZWNvZGUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZGVjb2RlKHN0cik7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/cookie/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/lib/buffer_utils.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/buffer_utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   concatKdf: () => (/* binding */ concatKdf),\n/* harmony export */   decoder: () => (/* binding */ decoder),\n/* harmony export */   encoder: () => (/* binding */ encoder),\n/* harmony export */   lengthAndInput: () => (/* binding */ lengthAndInput),\n/* harmony export */   p2s: () => (/* binding */ p2s),\n/* harmony export */   uint32be: () => (/* binding */ uint32be),\n/* harmony export */   uint64be: () => (/* binding */ uint64be)\n/* harmony export */ });\n/* harmony import */ var _runtime_digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/digest.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/runtime/digest.js\");\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nfunction p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nfunction uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nfunction uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nfunction lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nasync function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await (0,_runtime_digest_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvYnVmZmVyX3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUEwQztBQUNuQztBQUNBO0FBQ1A7QUFDTztBQUNQLHdDQUF3QyxRQUFRO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELGNBQWMsYUFBYSxNQUFNO0FBQzNGO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsdUJBQXVCLG1CQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4REFBTTtBQUM1QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxqb3NlXFxkaXN0XFxicm93c2VyXFxsaWJcXGJ1ZmZlcl91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGlnZXN0IGZyb20gJy4uL3J1bnRpbWUvZGlnZXN0LmpzJztcbmV4cG9ydCBjb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5leHBvcnQgY29uc3QgZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuY29uc3QgTUFYX0lOVDMyID0gMiAqKiAzMjtcbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoLi4uYnVmZmVycykge1xuICAgIGNvbnN0IHNpemUgPSBidWZmZXJzLnJlZHVjZSgoYWNjLCB7IGxlbmd0aCB9KSA9PiBhY2MgKyBsZW5ndGgsIDApO1xuICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KHNpemUpO1xuICAgIGxldCBpID0gMDtcbiAgICBmb3IgKGNvbnN0IGJ1ZmZlciBvZiBidWZmZXJzKSB7XG4gICAgICAgIGJ1Zi5zZXQoYnVmZmVyLCBpKTtcbiAgICAgICAgaSArPSBidWZmZXIubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gYnVmO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHAycyhhbGcsIHAyc0lucHV0KSB7XG4gICAgcmV0dXJuIGNvbmNhdChlbmNvZGVyLmVuY29kZShhbGcpLCBuZXcgVWludDhBcnJheShbMF0pLCBwMnNJbnB1dCk7XG59XG5mdW5jdGlvbiB3cml0ZVVJbnQzMkJFKGJ1ZiwgdmFsdWUsIG9mZnNldCkge1xuICAgIGlmICh2YWx1ZSA8IDAgfHwgdmFsdWUgPj0gTUFYX0lOVDMyKSB7XG4gICAgICAgIHRocm93IG5ldyBSYW5nZUVycm9yKGB2YWx1ZSBtdXN0IGJlID49IDAgYW5kIDw9ICR7TUFYX0lOVDMyIC0gMX0uIFJlY2VpdmVkICR7dmFsdWV9YCk7XG4gICAgfVxuICAgIGJ1Zi5zZXQoW3ZhbHVlID4+PiAyNCwgdmFsdWUgPj4+IDE2LCB2YWx1ZSA+Pj4gOCwgdmFsdWUgJiAweGZmXSwgb2Zmc2V0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1aW50NjRiZSh2YWx1ZSkge1xuICAgIGNvbnN0IGhpZ2ggPSBNYXRoLmZsb29yKHZhbHVlIC8gTUFYX0lOVDMyKTtcbiAgICBjb25zdCBsb3cgPSB2YWx1ZSAlIE1BWF9JTlQzMjtcbiAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheSg4KTtcbiAgICB3cml0ZVVJbnQzMkJFKGJ1ZiwgaGlnaCwgMCk7XG4gICAgd3JpdGVVSW50MzJCRShidWYsIGxvdywgNCk7XG4gICAgcmV0dXJuIGJ1Zjtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1aW50MzJiZSh2YWx1ZSkge1xuICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KDQpO1xuICAgIHdyaXRlVUludDMyQkUoYnVmLCB2YWx1ZSk7XG4gICAgcmV0dXJuIGJ1Zjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsZW5ndGhBbmRJbnB1dChpbnB1dCkge1xuICAgIHJldHVybiBjb25jYXQodWludDMyYmUoaW5wdXQubGVuZ3RoKSwgaW5wdXQpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbmNhdEtkZihzZWNyZXQsIGJpdHMsIHZhbHVlKSB7XG4gICAgY29uc3QgaXRlcmF0aW9ucyA9IE1hdGguY2VpbCgoYml0cyA+PiAzKSAvIDMyKTtcbiAgICBjb25zdCByZXMgPSBuZXcgVWludDhBcnJheShpdGVyYXRpb25zICogMzIpO1xuICAgIGZvciAobGV0IGl0ZXIgPSAwOyBpdGVyIDwgaXRlcmF0aW9uczsgaXRlcisrKSB7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KDQgKyBzZWNyZXQubGVuZ3RoICsgdmFsdWUubGVuZ3RoKTtcbiAgICAgICAgYnVmLnNldCh1aW50MzJiZShpdGVyICsgMSkpO1xuICAgICAgICBidWYuc2V0KHNlY3JldCwgNCk7XG4gICAgICAgIGJ1Zi5zZXQodmFsdWUsIDQgKyBzZWNyZXQubGVuZ3RoKTtcbiAgICAgICAgcmVzLnNldChhd2FpdCBkaWdlc3QoJ3NoYTI1NicsIGJ1ZiksIGl0ZXIgKiAzMik7XG4gICAgfVxuICAgIHJldHVybiByZXMuc2xpY2UoMCwgYml0cyA+PiAzKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/lib/buffer_utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/lib/is_object.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/is_object.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isObject)\n/* harmony export */ });\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvaXNfb2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXGpvc2VcXGRpc3RcXGJyb3dzZXJcXGxpYlxcaXNfb2JqZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNPYmplY3QoaW5wdXQpIHtcbiAgICBpZiAoIWlzT2JqZWN0TGlrZShpbnB1dCkgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlucHV0KSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGlucHV0KSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgbGV0IHByb3RvID0gaW5wdXQ7XG4gICAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICAgICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKGlucHV0KSA9PT0gcHJvdG87XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/lib/is_object.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/runtime/base64url.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/base64url.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeBase64: () => (/* binding */ decodeBase64),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64)\n/* harmony export */ });\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n\nconst encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nconst encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nconst decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nconst decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL2Jhc2U2NHVybC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwRDtBQUNuRDtBQUNQO0FBQ0E7QUFDQSxvQkFBb0IseURBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxrQkFBa0IseURBQU87QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxccnVudGltZVxcYmFzZTY0dXJsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuY29kZXIsIGRlY29kZXIgfSBmcm9tICcuLi9saWIvYnVmZmVyX3V0aWxzLmpzJztcbmV4cG9ydCBjb25zdCBlbmNvZGVCYXNlNjQgPSAoaW5wdXQpID0+IHtcbiAgICBsZXQgdW5lbmNvZGVkID0gaW5wdXQ7XG4gICAgaWYgKHR5cGVvZiB1bmVuY29kZWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHVuZW5jb2RlZCA9IGVuY29kZXIuZW5jb2RlKHVuZW5jb2RlZCk7XG4gICAgfVxuICAgIGNvbnN0IENIVU5LX1NJWkUgPSAweDgwMDA7XG4gICAgY29uc3QgYXJyID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1bmVuY29kZWQubGVuZ3RoOyBpICs9IENIVU5LX1NJWkUpIHtcbiAgICAgICAgYXJyLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCB1bmVuY29kZWQuc3ViYXJyYXkoaSwgaSArIENIVU5LX1NJWkUpKSk7XG4gICAgfVxuICAgIHJldHVybiBidG9hKGFyci5qb2luKCcnKSk7XG59O1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChpbnB1dCkgPT4ge1xuICAgIHJldHVybiBlbmNvZGVCYXNlNjQoaW5wdXQpLnJlcGxhY2UoLz0vZywgJycpLnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpO1xufTtcbmV4cG9ydCBjb25zdCBkZWNvZGVCYXNlNjQgPSAoZW5jb2RlZCkgPT4ge1xuICAgIGNvbnN0IGJpbmFyeSA9IGF0b2IoZW5jb2RlZCk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShiaW5hcnkubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJpbmFyeS5sZW5ndGg7IGkrKykge1xuICAgICAgICBieXRlc1tpXSA9IGJpbmFyeS5jaGFyQ29kZUF0KGkpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChpbnB1dCkgPT4ge1xuICAgIGxldCBlbmNvZGVkID0gaW5wdXQ7XG4gICAgaWYgKGVuY29kZWQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIGVuY29kZWQgPSBkZWNvZGVyLmRlY29kZShlbmNvZGVkKTtcbiAgICB9XG4gICAgZW5jb2RlZCA9IGVuY29kZWQucmVwbGFjZSgvLS9nLCAnKycpLnJlcGxhY2UoL18vZywgJy8nKS5yZXBsYWNlKC9cXHMvZywgJycpO1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVCYXNlNjQoZW5jb2RlZCk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGlucHV0IHRvIGJlIGRlY29kZWQgaXMgbm90IGNvcnJlY3RseSBlbmNvZGVkLicpO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/runtime/base64url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/runtime/digest.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/digest.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n\nconst digest = async (algorithm, data) => {\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\n    return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.digest(subtleDigest, data));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (digest);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvQztBQUNwQztBQUNBLGdDQUFnQyxvQkFBb0I7QUFDcEQsZ0NBQWdDLHFEQUFNO0FBQ3RDO0FBQ0EsaUVBQWUsTUFBTSxFQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxccnVudGltZVxcZGlnZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnLi93ZWJjcnlwdG8uanMnO1xuY29uc3QgZGlnZXN0ID0gYXN5bmMgKGFsZ29yaXRobSwgZGF0YSkgPT4ge1xuICAgIGNvbnN0IHN1YnRsZURpZ2VzdCA9IGBTSEEtJHthbGdvcml0aG0uc2xpY2UoLTMpfWA7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGF3YWl0IGNyeXB0by5zdWJ0bGUuZGlnZXN0KHN1YnRsZURpZ2VzdCwgZGF0YSkpO1xufTtcbmV4cG9ydCBkZWZhdWx0IGRpZ2VzdDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/runtime/digest.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/runtime/webcrypto.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/webcrypto.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   isCryptoKey: () => (/* binding */ isCryptoKey)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (crypto);\nconst isCryptoKey = (key) => key instanceof CryptoKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL3dlYmNyeXB0by5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGlFQUFlLE1BQU0sRUFBQztBQUNmIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxccnVudGltZVxcd2ViY3J5cHRvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNyeXB0bztcbmV4cG9ydCBjb25zdCBpc0NyeXB0b0tleSA9IChrZXkpID0+IGtleSBpbnN0YW5jZW9mIENyeXB0b0tleTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/runtime/webcrypto.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/util/base64url.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/base64url.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n\nconst encode = _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode;\nconst decode = _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci91dGlsL2Jhc2U2NHVybC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFDOUMsZUFBZSx5REFBZ0I7QUFDL0IsZUFBZSx5REFBZ0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxqb3NlXFxkaXN0XFxicm93c2VyXFx1dGlsXFxiYXNlNjR1cmwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYmFzZTY0dXJsIGZyb20gJy4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzJztcbmV4cG9ydCBjb25zdCBlbmNvZGUgPSBiYXNlNjR1cmwuZW5jb2RlO1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IGJhc2U2NHVybC5kZWNvZGU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/util/base64url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/util/decode_jwt.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/decode_jwt.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt)\n/* harmony export */ });\n/* harmony import */ var _base64url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base64url.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/util/base64url.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/is_object.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/lib/is_object.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/jose/dist/browser/util/errors.js\");\n\n\n\n\nfunction decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = (0,_base64url_js__WEBPACK_IMPORTED_MODULE_1__.decode)(payload);\n    }\n    catch {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__.decoder.decode(decoded));\n    }\n    catch {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(result))\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci91dGlsL2RlY29kZV9qd3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUQ7QUFDSjtBQUNOO0FBQ0Y7QUFDbEM7QUFDUDtBQUNBLGtCQUFrQixrREFBVTtBQUM1QixZQUFZLHFCQUFxQjtBQUNqQztBQUNBLGtCQUFrQixrREFBVTtBQUM1QjtBQUNBLGtCQUFrQixrREFBVTtBQUM1QjtBQUNBLGtCQUFrQixrREFBVTtBQUM1QjtBQUNBO0FBQ0Esa0JBQWtCLHFEQUFTO0FBQzNCO0FBQ0E7QUFDQSxrQkFBa0Isa0RBQVU7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHlEQUFPO0FBQ25DO0FBQ0E7QUFDQSxrQkFBa0Isa0RBQVU7QUFDNUI7QUFDQSxTQUFTLDZEQUFRO0FBQ2pCLGtCQUFrQixrREFBVTtBQUM1QjtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxcdXRpbFxcZGVjb2RlX2p3dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGUgYXMgYmFzZTY0dXJsIH0gZnJvbSAnLi9iYXNlNjR1cmwuanMnO1xuaW1wb3J0IHsgZGVjb2RlciB9IGZyb20gJy4uL2xpYi9idWZmZXJfdXRpbHMuanMnO1xuaW1wb3J0IGlzT2JqZWN0IGZyb20gJy4uL2xpYi9pc19vYmplY3QuanMnO1xuaW1wb3J0IHsgSldUSW52YWxpZCB9IGZyb20gJy4vZXJyb3JzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVKd3Qoand0KSB7XG4gICAgaWYgKHR5cGVvZiBqd3QgIT09ICdzdHJpbmcnKVxuICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnSldUcyBtdXN0IHVzZSBDb21wYWN0IEpXUyBzZXJpYWxpemF0aW9uLCBKV1QgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgIGNvbnN0IHsgMTogcGF5bG9hZCwgbGVuZ3RoIH0gPSBqd3Quc3BsaXQoJy4nKTtcbiAgICBpZiAobGVuZ3RoID09PSA1KVxuICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnT25seSBKV1RzIHVzaW5nIENvbXBhY3QgSldTIHNlcmlhbGl6YXRpb24gY2FuIGJlIGRlY29kZWQnKTtcbiAgICBpZiAobGVuZ3RoICE9PSAzKVxuICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnSW52YWxpZCBKV1QnKTtcbiAgICBpZiAoIXBheWxvYWQpXG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdKV1RzIG11c3QgY29udGFpbiBhIHBheWxvYWQnKTtcbiAgICBsZXQgZGVjb2RlZDtcbiAgICB0cnkge1xuICAgICAgICBkZWNvZGVkID0gYmFzZTY0dXJsKHBheWxvYWQpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdGYWlsZWQgdG8gYmFzZTY0dXJsIGRlY29kZSB0aGUgcGF5bG9hZCcpO1xuICAgIH1cbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IEpTT04ucGFyc2UoZGVjb2Rlci5kZWNvZGUoZGVjb2RlZCkpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdGYWlsZWQgdG8gcGFyc2UgdGhlIGRlY29kZWQgcGF5bG9hZCBhcyBKU09OJyk7XG4gICAgfVxuICAgIGlmICghaXNPYmplY3QocmVzdWx0KSlcbiAgICAgICAgdGhyb3cgbmV3IEpXVEludmFsaWQoJ0ludmFsaWQgSldUIENsYWltcyBTZXQnKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/util/decode_jwt.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/jose/dist/browser/util/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JOSEAlgNotAllowed: () => (/* binding */ JOSEAlgNotAllowed),\n/* harmony export */   JOSEError: () => (/* binding */ JOSEError),\n/* harmony export */   JOSENotSupported: () => (/* binding */ JOSENotSupported),\n/* harmony export */   JWEDecryptionFailed: () => (/* binding */ JWEDecryptionFailed),\n/* harmony export */   JWEInvalid: () => (/* binding */ JWEInvalid),\n/* harmony export */   JWKInvalid: () => (/* binding */ JWKInvalid),\n/* harmony export */   JWKSInvalid: () => (/* binding */ JWKSInvalid),\n/* harmony export */   JWKSMultipleMatchingKeys: () => (/* binding */ JWKSMultipleMatchingKeys),\n/* harmony export */   JWKSNoMatchingKey: () => (/* binding */ JWKSNoMatchingKey),\n/* harmony export */   JWKSTimeout: () => (/* binding */ JWKSTimeout),\n/* harmony export */   JWSInvalid: () => (/* binding */ JWSInvalid),\n/* harmony export */   JWSSignatureVerificationFailed: () => (/* binding */ JWSSignatureVerificationFailed),\n/* harmony export */   JWTClaimValidationFailed: () => (/* binding */ JWTClaimValidationFailed),\n/* harmony export */   JWTExpired: () => (/* binding */ JWTExpired),\n/* harmony export */   JWTInvalid: () => (/* binding */ JWTInvalid)\n/* harmony export */ });\nclass JOSEError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nJOSEError.code = 'ERR_JOSE_GENERIC';\nclass JWTClaimValidationFailed extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTClaimValidationFailed.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\nclass JWTExpired extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTExpired.code = 'ERR_JWT_EXPIRED';\nclass JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nJOSEAlgNotAllowed.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\nclass JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nJOSENotSupported.code = 'ERR_JOSE_NOT_SUPPORTED';\nclass JWEDecryptionFailed extends JOSEError {\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nJWEDecryptionFailed.code = 'ERR_JWE_DECRYPTION_FAILED';\nclass JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n}\nJWEInvalid.code = 'ERR_JWE_INVALID';\nclass JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n}\nJWSInvalid.code = 'ERR_JWS_INVALID';\nclass JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n}\nJWTInvalid.code = 'ERR_JWT_INVALID';\nclass JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n}\nJWKInvalid.code = 'ERR_JWK_INVALID';\nclass JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n}\nJWKSInvalid.code = 'ERR_JWKS_INVALID';\nclass JWKSNoMatchingKey extends JOSEError {\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nJWKSNoMatchingKey.code = 'ERR_JWKS_NO_MATCHING_KEY';\nclass JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nJWKSMultipleMatchingKeys.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\nclass JWKSTimeout extends JOSEError {\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_TIMEOUT';\n    }\n}\nJWKSTimeout.code = 'ERR_JWKS_TIMEOUT';\nclass JWSSignatureVerificationFailed extends JOSEError {\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nJWSSignatureVerificationFailed.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci91dGlsL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EseUJBQXlCLFNBQVMsMEJBQTBCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHlCQUF5QixTQUFTLDBCQUEwQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcam9zZVxcZGlzdFxcYnJvd3NlclxcdXRpbFxcZXJyb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBKT1NFRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KT1NFX0dFTkVSSUMnO1xuICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlPy4odGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gICAgfVxufVxuSk9TRUVycm9yLmNvZGUgPSAnRVJSX0pPU0VfR0VORVJJQyc7XG5leHBvcnQgY2xhc3MgSldUQ2xhaW1WYWxpZGF0aW9uRmFpbGVkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBwYXlsb2FkLCBjbGFpbSA9ICd1bnNwZWNpZmllZCcsIHJlYXNvbiA9ICd1bnNwZWNpZmllZCcpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgeyBjYXVzZTogeyBjbGFpbSwgcmVhc29uLCBwYXlsb2FkIH0gfSk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldUX0NMQUlNX1ZBTElEQVRJT05fRkFJTEVEJztcbiAgICAgICAgdGhpcy5jbGFpbSA9IGNsYWltO1xuICAgICAgICB0aGlzLnJlYXNvbiA9IHJlYXNvbjtcbiAgICAgICAgdGhpcy5wYXlsb2FkID0gcGF5bG9hZDtcbiAgICB9XG59XG5KV1RDbGFpbVZhbGlkYXRpb25GYWlsZWQuY29kZSA9ICdFUlJfSldUX0NMQUlNX1ZBTElEQVRJT05fRkFJTEVEJztcbmV4cG9ydCBjbGFzcyBKV1RFeHBpcmVkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBwYXlsb2FkLCBjbGFpbSA9ICd1bnNwZWNpZmllZCcsIHJlYXNvbiA9ICd1bnNwZWNpZmllZCcpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgeyBjYXVzZTogeyBjbGFpbSwgcmVhc29uLCBwYXlsb2FkIH0gfSk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldUX0VYUElSRUQnO1xuICAgICAgICB0aGlzLmNsYWltID0gY2xhaW07XG4gICAgICAgIHRoaXMucmVhc29uID0gcmVhc29uO1xuICAgICAgICB0aGlzLnBheWxvYWQgPSBwYXlsb2FkO1xuICAgIH1cbn1cbkpXVEV4cGlyZWQuY29kZSA9ICdFUlJfSldUX0VYUElSRUQnO1xuZXhwb3J0IGNsYXNzIEpPU0VBbGdOb3RBbGxvd2VkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KT1NFX0FMR19OT1RfQUxMT1dFRCc7XG4gICAgfVxufVxuSk9TRUFsZ05vdEFsbG93ZWQuY29kZSA9ICdFUlJfSk9TRV9BTEdfTk9UX0FMTE9XRUQnO1xuZXhwb3J0IGNsYXNzIEpPU0VOb3RTdXBwb3J0ZWQgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNvZGUgPSAnRVJSX0pPU0VfTk9UX1NVUFBPUlRFRCc7XG4gICAgfVxufVxuSk9TRU5vdFN1cHBvcnRlZC5jb2RlID0gJ0VSUl9KT1NFX05PVF9TVVBQT1JURUQnO1xuZXhwb3J0IGNsYXNzIEpXRURlY3J5cHRpb25GYWlsZWQgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UgPSAnZGVjcnlwdGlvbiBvcGVyYXRpb24gZmFpbGVkJywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV0VfREVDUllQVElPTl9GQUlMRUQnO1xuICAgIH1cbn1cbkpXRURlY3J5cHRpb25GYWlsZWQuY29kZSA9ICdFUlJfSldFX0RFQ1JZUFRJT05fRkFJTEVEJztcbmV4cG9ydCBjbGFzcyBKV0VJbnZhbGlkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV0VfSU5WQUxJRCc7XG4gICAgfVxufVxuSldFSW52YWxpZC5jb2RlID0gJ0VSUl9KV0VfSU5WQUxJRCc7XG5leHBvcnQgY2xhc3MgSldTSW52YWxpZCBleHRlbmRzIEpPU0VFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldTX0lOVkFMSUQnO1xuICAgIH1cbn1cbkpXU0ludmFsaWQuY29kZSA9ICdFUlJfSldTX0lOVkFMSUQnO1xuZXhwb3J0IGNsYXNzIEpXVEludmFsaWQgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNvZGUgPSAnRVJSX0pXVF9JTlZBTElEJztcbiAgICB9XG59XG5KV1RJbnZhbGlkLmNvZGUgPSAnRVJSX0pXVF9JTlZBTElEJztcbmV4cG9ydCBjbGFzcyBKV0tJbnZhbGlkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV0tfSU5WQUxJRCc7XG4gICAgfVxufVxuSldLSW52YWxpZC5jb2RlID0gJ0VSUl9KV0tfSU5WQUxJRCc7XG5leHBvcnQgY2xhc3MgSldLU0ludmFsaWQgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNvZGUgPSAnRVJSX0pXS1NfSU5WQUxJRCc7XG4gICAgfVxufVxuSldLU0ludmFsaWQuY29kZSA9ICdFUlJfSldLU19JTlZBTElEJztcbmV4cG9ydCBjbGFzcyBKV0tTTm9NYXRjaGluZ0tleSBleHRlbmRzIEpPU0VFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSA9ICdubyBhcHBsaWNhYmxlIGtleSBmb3VuZCBpbiB0aGUgSlNPTiBXZWIgS2V5IFNldCcsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldLU19OT19NQVRDSElOR19LRVknO1xuICAgIH1cbn1cbkpXS1NOb01hdGNoaW5nS2V5LmNvZGUgPSAnRVJSX0pXS1NfTk9fTUFUQ0hJTkdfS0VZJztcbmV4cG9ydCBjbGFzcyBKV0tTTXVsdGlwbGVNYXRjaGluZ0tleXMgZXh0ZW5kcyBKT1NFRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UgPSAnbXVsdGlwbGUgbWF0Y2hpbmcga2V5cyBmb3VuZCBpbiB0aGUgSlNPTiBXZWIgS2V5IFNldCcsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY29kZSA9ICdFUlJfSldLU19NVUxUSVBMRV9NQVRDSElOR19LRVlTJztcbiAgICB9XG59XG5TeW1ib2wuYXN5bmNJdGVyYXRvcjtcbkpXS1NNdWx0aXBsZU1hdGNoaW5nS2V5cy5jb2RlID0gJ0VSUl9KV0tTX01VTFRJUExFX01BVENISU5HX0tFWVMnO1xuZXhwb3J0IGNsYXNzIEpXS1NUaW1lb3V0IGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gJ3JlcXVlc3QgdGltZWQgb3V0Jywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV0tTX1RJTUVPVVQnO1xuICAgIH1cbn1cbkpXS1NUaW1lb3V0LmNvZGUgPSAnRVJSX0pXS1NfVElNRU9VVCc7XG5leHBvcnQgY2xhc3MgSldTU2lnbmF0dXJlVmVyaWZpY2F0aW9uRmFpbGVkIGV4dGVuZHMgSk9TRUVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlID0gJ3NpZ25hdHVyZSB2ZXJpZmljYXRpb24gZmFpbGVkJywgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jb2RlID0gJ0VSUl9KV1NfU0lHTkFUVVJFX1ZFUklGSUNBVElPTl9GQUlMRUQnO1xuICAgIH1cbn1cbkpXU1NpZ25hdHVyZVZlcmlmaWNhdGlvbkZhaWxlZC5jb2RlID0gJ0VSUl9KV1NfU0lHTkFUVVJFX1ZFUklGSUNBVElPTl9GQUlMRUQnO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/jose/dist/browser/util/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs":
/*!***************************************************!*\
  !*** ./node_modules/js-cookie/dist/js.cookie.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ api)\n/* harmony export */ });\n/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9qcy1jb29raWUvZGlzdC9qcy5jb29raWUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLEVBQUU7QUFDdEMsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSx1RUFBdUU7QUFDdkU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSw2Q0FBNkM7QUFDN0MsT0FBTztBQUNQO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLHlDQUF5QztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBOztBQUVBLG1DQUFtQyxXQUFXO0FBQzlDOztBQUUwQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXGpzLWNvb2tpZVxcZGlzdFxcanMuY29va2llLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEganMtY29va2llIHYzLjAuNSB8IE1JVCAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyICovXG5mdW5jdGlvbiBhc3NpZ24gKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG4gICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRhcmdldFxufVxuLyogZXNsaW50LWVuYWJsZSBuby12YXIgKi9cblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyICovXG52YXIgZGVmYXVsdENvbnZlcnRlciA9IHtcbiAgcmVhZDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlWzBdID09PSAnXCInKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnNsaWNlKDEsIC0xKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoLyglW1xcZEEtRl17Mn0pKy9naSwgZGVjb2RlVVJJQ29tcG9uZW50KVxuICB9LFxuICB3cml0ZTogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSkucmVwbGFjZShcbiAgICAgIC8lKDJbMzQ2QkZdfDNbQUMtRl18NDB8NVtCREVdfDYwfDdbQkNEXSkvZyxcbiAgICAgIGRlY29kZVVSSUNvbXBvbmVudFxuICAgIClcbiAgfVxufTtcbi8qIGVzbGludC1lbmFibGUgbm8tdmFyICovXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXZhciAqL1xuXG5mdW5jdGlvbiBpbml0IChjb252ZXJ0ZXIsIGRlZmF1bHRBdHRyaWJ1dGVzKSB7XG4gIGZ1bmN0aW9uIHNldCAobmFtZSwgdmFsdWUsIGF0dHJpYnV0ZXMpIHtcbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgYXR0cmlidXRlcyA9IGFzc2lnbih7fSwgZGVmYXVsdEF0dHJpYnV0ZXMsIGF0dHJpYnV0ZXMpO1xuXG4gICAgaWYgKHR5cGVvZiBhdHRyaWJ1dGVzLmV4cGlyZXMgPT09ICdudW1iZXInKSB7XG4gICAgICBhdHRyaWJ1dGVzLmV4cGlyZXMgPSBuZXcgRGF0ZShEYXRlLm5vdygpICsgYXR0cmlidXRlcy5leHBpcmVzICogODY0ZTUpO1xuICAgIH1cbiAgICBpZiAoYXR0cmlidXRlcy5leHBpcmVzKSB7XG4gICAgICBhdHRyaWJ1dGVzLmV4cGlyZXMgPSBhdHRyaWJ1dGVzLmV4cGlyZXMudG9VVENTdHJpbmcoKTtcbiAgICB9XG5cbiAgICBuYW1lID0gZW5jb2RlVVJJQ29tcG9uZW50KG5hbWUpXG4gICAgICAucmVwbGFjZSgvJSgyWzM0NkJdfDVFfDYwfDdDKS9nLCBkZWNvZGVVUklDb21wb25lbnQpXG4gICAgICAucmVwbGFjZSgvWygpXS9nLCBlc2NhcGUpO1xuXG4gICAgdmFyIHN0cmluZ2lmaWVkQXR0cmlidXRlcyA9ICcnO1xuICAgIGZvciAodmFyIGF0dHJpYnV0ZU5hbWUgaW4gYXR0cmlidXRlcykge1xuICAgICAgaWYgKCFhdHRyaWJ1dGVzW2F0dHJpYnV0ZU5hbWVdKSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIHN0cmluZ2lmaWVkQXR0cmlidXRlcyArPSAnOyAnICsgYXR0cmlidXRlTmFtZTtcblxuICAgICAgaWYgKGF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0gPT09IHRydWUpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgLy8gQ29uc2lkZXJzIFJGQyA2MjY1IHNlY3Rpb24gNS4yOlxuICAgICAgLy8gLi4uXG4gICAgICAvLyAzLiAgSWYgdGhlIHJlbWFpbmluZyB1bnBhcnNlZC1hdHRyaWJ1dGVzIGNvbnRhaW5zIGEgJXgzQiAoXCI7XCIpXG4gICAgICAvLyAgICAgY2hhcmFjdGVyOlxuICAgICAgLy8gQ29uc3VtZSB0aGUgY2hhcmFjdGVycyBvZiB0aGUgdW5wYXJzZWQtYXR0cmlidXRlcyB1cCB0byxcbiAgICAgIC8vIG5vdCBpbmNsdWRpbmcsIHRoZSBmaXJzdCAleDNCIChcIjtcIikgY2hhcmFjdGVyLlxuICAgICAgLy8gLi4uXG4gICAgICBzdHJpbmdpZmllZEF0dHJpYnV0ZXMgKz0gJz0nICsgYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXS5zcGxpdCgnOycpWzBdO1xuICAgIH1cblxuICAgIHJldHVybiAoZG9jdW1lbnQuY29va2llID1cbiAgICAgIG5hbWUgKyAnPScgKyBjb252ZXJ0ZXIud3JpdGUodmFsdWUsIG5hbWUpICsgc3RyaW5naWZpZWRBdHRyaWJ1dGVzKVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0IChuYW1lKSB7XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcgfHwgKGFyZ3VtZW50cy5sZW5ndGggJiYgIW5hbWUpKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICAvLyBUbyBwcmV2ZW50IHRoZSBmb3IgbG9vcCBpbiB0aGUgZmlyc3QgcGxhY2UgYXNzaWduIGFuIGVtcHR5IGFycmF5XG4gICAgLy8gaW4gY2FzZSB0aGVyZSBhcmUgbm8gY29va2llcyBhdCBhbGwuXG4gICAgdmFyIGNvb2tpZXMgPSBkb2N1bWVudC5jb29raWUgPyBkb2N1bWVudC5jb29raWUuc3BsaXQoJzsgJykgOiBbXTtcbiAgICB2YXIgamFyID0ge307XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb29raWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcGFydHMgPSBjb29raWVzW2ldLnNwbGl0KCc9Jyk7XG4gICAgICB2YXIgdmFsdWUgPSBwYXJ0cy5zbGljZSgxKS5qb2luKCc9Jyk7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBmb3VuZCA9IGRlY29kZVVSSUNvbXBvbmVudChwYXJ0c1swXSk7XG4gICAgICAgIGphcltmb3VuZF0gPSBjb252ZXJ0ZXIucmVhZCh2YWx1ZSwgZm91bmQpO1xuXG4gICAgICAgIGlmIChuYW1lID09PSBmb3VuZCkge1xuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5hbWUgPyBqYXJbbmFtZV0gOiBqYXJcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuY3JlYXRlKFxuICAgIHtcbiAgICAgIHNldCxcbiAgICAgIGdldCxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gKG5hbWUsIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgc2V0KFxuICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgJycsXG4gICAgICAgICAgYXNzaWduKHt9LCBhdHRyaWJ1dGVzLCB7XG4gICAgICAgICAgICBleHBpcmVzOiAtMVxuICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICB9LFxuICAgICAgd2l0aEF0dHJpYnV0ZXM6IGZ1bmN0aW9uIChhdHRyaWJ1dGVzKSB7XG4gICAgICAgIHJldHVybiBpbml0KHRoaXMuY29udmVydGVyLCBhc3NpZ24oe30sIHRoaXMuYXR0cmlidXRlcywgYXR0cmlidXRlcykpXG4gICAgICB9LFxuICAgICAgd2l0aENvbnZlcnRlcjogZnVuY3Rpb24gKGNvbnZlcnRlcikge1xuICAgICAgICByZXR1cm4gaW5pdChhc3NpZ24oe30sIHRoaXMuY29udmVydGVyLCBjb252ZXJ0ZXIpLCB0aGlzLmF0dHJpYnV0ZXMpXG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBhdHRyaWJ1dGVzOiB7IHZhbHVlOiBPYmplY3QuZnJlZXplKGRlZmF1bHRBdHRyaWJ1dGVzKSB9LFxuICAgICAgY29udmVydGVyOiB7IHZhbHVlOiBPYmplY3QuZnJlZXplKGNvbnZlcnRlcikgfVxuICAgIH1cbiAgKVxufVxuXG52YXIgYXBpID0gaW5pdChkZWZhdWx0Q29udmVydGVyLCB7IHBhdGg6ICcvJyB9KTtcbi8qIGVzbGludC1lbmFibGUgbm8tdmFyICovXG5cbmV4cG9ydCB7IGFwaSBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/headers.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/api/headers.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __esModule: () => (/* reexport safe */ _server_request_cookies__WEBPACK_IMPORTED_MODULE_0__.__esModule),\n/* harmony export */   cookies: () => (/* reexport safe */ _server_request_cookies__WEBPACK_IMPORTED_MODULE_0__.cookies),\n/* harmony export */   draftMode: () => (/* reexport safe */ _server_request_draft_mode__WEBPACK_IMPORTED_MODULE_2__.draftMode),\n/* harmony export */   headers: () => (/* reexport safe */ _server_request_headers__WEBPACK_IMPORTED_MODULE_1__.headers)\n/* harmony export */ });\n/* harmony import */ var _server_request_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../server/request/cookies */ \"(app-pages-browser)/./node_modules/next/dist/server/request/cookies.js\");\n/* harmony import */ var _server_request_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../server/request/headers */ \"(app-pages-browser)/./node_modules/next/dist/server/request/headers.js\");\n/* harmony import */ var _server_request_draft_mode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../server/request/draft-mode */ \"(app-pages-browser)/./node_modules/next/dist/server/request/draft-mode.js\");\n\n\n\n\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUEwQztBQUNBO0FBQ0c7O0FBRTdDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcYXBpXFxoZWFkZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4uL3NlcnZlci9yZXF1ZXN0L2Nvb2tpZXMnO1xuZXhwb3J0ICogZnJvbSAnLi4vc2VydmVyL3JlcXVlc3QvaGVhZGVycyc7XG5leHBvcnQgKiBmcm9tICcuLi9zZXJ2ZXIvcmVxdWVzdC9kcmFmdC1tb2RlJztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/headers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceMappingURL=navigation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdEOztBQUVoRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGFwaVxcbmF2aWdhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuLi9jbGllbnQvY29tcG9uZW50cy9uYXZpZ2F0aW9uJztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CLuis%5C%5CDesktop%5C%5CCOLLEGE%5C%5CCAPSTONE%5C%5CSugarcane_Artist_Management%5C%5Capp%5C%5Cimport%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CLuis%5C%5CDesktop%5C%5CCOLLEGE%5C%5CCAPSTONE%5C%5CSugarcane_Artist_Management%5C%5Capp%5C%5Cimport%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/import/page.tsx */ \"(app-pages-browser)/./app/import/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDTHVpcyU1QyU1Q0Rlc2t0b3AlNUMlNUNDT0xMRUdFJTVDJTVDQ0FQU1RPTkUlNUMlNUNTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnQlNUMlNUNhcHAlNUMlNUNpbXBvcnQlNUMlNUNwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLG9LQUFvSSIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcTHVpc1xcXFxEZXNrdG9wXFxcXENPTExFR0VcXFxcQ0FQU1RPTkVcXFxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxcXGFwcFxcXFxpbXBvcnRcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CLuis%5C%5CDesktop%5C%5CCOLLEGE%5C%5CCAPSTONE%5C%5CSugarcane_Artist_Management%5C%5Capp%5C%5Cimport%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/app-dir/link.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    /**\n * A React component that extends the HTML `<a>` element to provide\n * [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation. This is the primary way to navigate between routes in Next.js.\n *\n * @remarks\n * - Prefetching is only enabled in production.\n *\n * @see https://nextjs.org/docs/app/api-reference/components/link\n */ default: function() {\n        return LinkComponent;\n    },\n    useLinkStatus: function() {\n        return useLinkStatus;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _formaturl = __webpack_require__(/*! ../../shared/lib/router/utils/format-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nconst _approutercontextsharedruntime = __webpack_require__(/*! ../../shared/lib/app-router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js\");\nconst _routerreducertypes = __webpack_require__(/*! ../components/router-reducer/router-reducer-types */ \"(app-pages-browser)/./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js\");\nconst _usemergedref = __webpack_require__(/*! ../use-merged-ref */ \"(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js\");\nconst _utils = __webpack_require__(/*! ../../shared/lib/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _addbasepath = __webpack_require__(/*! ../add-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/add-base-path.js\");\nconst _warnonce = __webpack_require__(/*! ../../shared/lib/utils/warn-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nconst _links = __webpack_require__(/*! ../components/links */ \"(app-pages-browser)/./node_modules/next/dist/client/components/links.js\");\nconst _islocalurl = __webpack_require__(/*! ../../shared/lib/router/utils/is-local-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nconst _approuterinstance = __webpack_require__(/*! ../components/app-router-instance */ \"(app-pages-browser)/./node_modules/next/dist/client/components/app-router-instance.js\");\nconst _erroronce = __webpack_require__(/*! ../../shared/lib/utils/error-once */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js\");\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute('target');\n    return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n    if (isAnchorNodeName && isModifiedEvent(e) || e.currentTarget.hasAttribute('download')) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    if (!(0, _islocalurl.isLocalURL)(href)) {\n        if (replace) {\n            // browser default behavior does not replace the history state\n            // so we need to do it manually\n            e.preventDefault();\n            location.replace(href);\n        }\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    if (onNavigate) {\n        let isDefaultPrevented = false;\n        onNavigate({\n            preventDefault: ()=>{\n                isDefaultPrevented = true;\n            }\n        });\n        if (isDefaultPrevented) {\n            return;\n        }\n    }\n    _react.default.startTransition(()=>{\n        (0, _approuterinstance.dispatchNavigateAction)(as || href, replace ? 'replace' : 'push', scroll != null ? scroll : true, linkInstanceRef.current);\n    });\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === 'string') {\n        return urlObjOrString;\n    }\n    return (0, _formaturl.formatUrl)(urlObjOrString);\n}\nfunction LinkComponent(props) {\n    _s();\n    const [linkStatus, setOptimisticLinkStatus] = (0, _react.useOptimistic)(_links.IDLE_LINK_STATUS);\n    let children;\n    const linkInstanceRef = (0, _react.useRef)(null);\n    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, onClick, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, onNavigate, ref: forwardedRef, unstable_dynamicOnHover, ...restProps } = props;\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {\n        children = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            children: children\n        });\n    }\n    const router = _react.default.useContext(_approutercontextsharedruntime.AppRouterContext);\n    const prefetchEnabled = prefetchProp !== false;\n    /**\n   * The possible states for prefetch are:\n   * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n   * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n   * - false: we will not prefetch if in the viewport at all\n   * - 'unstable_dynamicOnHover': this starts in \"auto\" mode, but switches to \"full\" when the link is hovered\n   */ const appPrefetchKind = prefetchProp === null || prefetchProp === 'auto' ? _routerreducertypes.PrefetchKind.AUTO : _routerreducertypes.PrefetchKind.FULL;\n    if (true) {\n        function createPropError(args) {\n            return Object.defineProperty(new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0)), \"__NEXT_ERROR_CODE\", {\n                value: \"E319\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === 'href') {\n                if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: props[key] === null ? 'null' : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            unstable_dynamicOnHover: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true,\n            onNavigate: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === 'as') {\n                if (props[key] && valType !== 'string' && valType !== 'object') {\n                    throw createPropError({\n                        key,\n                        expected: '`string` or `object`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart' || key === 'onNavigate') {\n                if (props[key] && valType !== 'function') {\n                    throw createPropError({\n                        key,\n                        expected: '`function`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'legacyBehavior' || key === 'unstable_dynamicOnHover') {\n                if (props[key] != null && valType !== 'boolean') {\n                    throw createPropError({\n                        key,\n                        expected: '`boolean`',\n                        actual: valType\n                    });\n                }\n            } else if (key === 'prefetch') {\n                if (props[key] != null && valType !== 'boolean' && props[key] !== 'auto') {\n                    throw createPropError({\n                        key,\n                        expected: '`boolean | \"auto\"`',\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n    }\n    if (true) {\n        if (props.locale) {\n            (0, _warnonce.warnOnce)('The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization');\n        }\n        if (!asProp) {\n            let href;\n            if (typeof hrefProp === 'string') {\n                href = hrefProp;\n            } else if (typeof hrefProp === 'object' && typeof hrefProp.pathname === 'string') {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split('/').some((segment)=>segment.startsWith('[') && segment.endsWith(']'));\n                if (hasDynamicSegment) {\n                    throw Object.defineProperty(new Error(\"Dynamic href `\" + href + \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\"), \"__NEXT_ERROR_CODE\", {\n                        value: \"E267\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            }\n        }\n    }\n    const { href, as } = _react.default.useMemo({\n        \"LinkComponent.useMemo\": ()=>{\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n    }[\"LinkComponent.useMemo\"], [\n        hrefProp,\n        asProp\n    ]);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw Object.defineProperty(new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\"), \"__NEXT_ERROR_CODE\", {\n                        value: \"E320\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n                throw Object.defineProperty(new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0)), \"__NEXT_ERROR_CODE\", {\n                    value: \"E266\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        } else {}\n    } else {\n        if (true) {\n            if ((children == null ? void 0 : children.type) === 'a') {\n                throw Object.defineProperty(new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'), \"__NEXT_ERROR_CODE\", {\n                    value: \"E209\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;\n    // Use a callback ref to attach an IntersectionObserver to the anchor tag on\n    // mount. In the future we will also use this to keep track of all the\n    // currently mounted <Link> instances, e.g. so we can re-prefetch them after\n    // a revalidation or refresh.\n    const observeLinkVisibilityOnMount = _react.default.useCallback({\n        \"LinkComponent.useCallback[observeLinkVisibilityOnMount]\": (element)=>{\n            if (router !== null) {\n                linkInstanceRef.current = (0, _links.mountLinkInstance)(element, href, router, appPrefetchKind, prefetchEnabled, setOptimisticLinkStatus);\n            }\n            return ({\n                \"LinkComponent.useCallback[observeLinkVisibilityOnMount]\": ()=>{\n                    if (linkInstanceRef.current) {\n                        (0, _links.unmountLinkForCurrentNavigation)(linkInstanceRef.current);\n                        linkInstanceRef.current = null;\n                    }\n                    (0, _links.unmountPrefetchableInstance)(element);\n                }\n            })[\"LinkComponent.useCallback[observeLinkVisibilityOnMount]\"];\n        }\n    }[\"LinkComponent.useCallback[observeLinkVisibilityOnMount]\"], [\n        prefetchEnabled,\n        href,\n        router,\n        appPrefetchKind,\n        setOptimisticLinkStatus\n    ]);\n    const mergedRef = (0, _usemergedref.useMergedRef)(observeLinkVisibilityOnMount, childRef);\n    const childProps = {\n        ref: mergedRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw Object.defineProperty(new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.'), \"__NEXT_ERROR_CODE\", {\n                        value: \"E312\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                }\n            }\n            if (!legacyBehavior && typeof onClick === 'function') {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, href, as, linkInstanceRef, replace, scroll, onNavigate);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled || \"development\" === 'development') {\n                return;\n            }\n            const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true;\n            (0, _links.onNavigationIntent)(e.currentTarget, upgradeToDynamicPrefetch);\n        },\n        onTouchStart:  false ? 0 : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled) {\n                return;\n            }\n            const upgradeToDynamicPrefetch = unstable_dynamicOnHover === true;\n            (0, _links.onNavigationIntent)(e.currentTarget, upgradeToDynamicPrefetch);\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the basePath.\n    if ((0, _utils.isAbsoluteUrl)(as)) {\n        childProps.href = as;\n    } else if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {\n        childProps.href = (0, _addbasepath.addBasePath)(as);\n    }\n    let link;\n    if (legacyBehavior) {\n        if (true) {\n            (0, _erroronce.errorOnce)('`legacyBehavior` is deprecated and will be removed in a future ' + 'release. A codemod is available to upgrade your components:\\n\\n' + 'npx @next/codemod@latest new-link .\\n\\n' + 'Learn more: https://nextjs.org/docs/app/building-your-application/upgrading/codemods#remove-a-tags-from-link-components');\n        }\n        link = /*#__PURE__*/ _react.default.cloneElement(child, childProps);\n    } else {\n        link = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            ...restProps,\n            ...childProps,\n            children: children\n        });\n    }\n    return /*#__PURE__*/ (0, _jsxruntime.jsx)(LinkStatusContext.Provider, {\n        value: linkStatus,\n        children: link\n    });\n}\n_s(LinkComponent, \"MNV6IdWv8Lu3MKc7Fm4v59uGRY0=\");\n_c = LinkComponent;\nconst LinkStatusContext = /*#__PURE__*/ (0, _react.createContext)(_links.IDLE_LINK_STATUS);\nconst useLinkStatus = ()=>{\n    return (0, _react.useContext)(LinkStatusContext);\n};\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\nvar _c;\n$RefreshReg$(_c, \"LinkComponent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/app-dir/link.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/components/hooks-server-context.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/hooks-server-context.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    DynamicServerError: function() {\n        return DynamicServerError;\n    },\n    isDynamicServerError: function() {\n        return isDynamicServerError;\n    }\n});\nconst DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE';\nclass DynamicServerError extends Error {\n    constructor(description){\n        super(\"Dynamic server usage: \" + description), this.description = description, this.digest = DYNAMIC_ERROR_CODE;\n    }\n}\nfunction isDynamicServerError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err) || typeof err.digest !== 'string') {\n        return false;\n    }\n    return err.digest === DYNAMIC_ERROR_CODE;\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=hooks-server-context.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaG9va3Mtc2VydmVyLWNvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBRWFBLGtCQUFrQjtlQUFsQkE7O0lBUUdDLG9CQUFvQjtlQUFwQkE7OztBQVZoQixNQUFNQyxxQkFBcUI7QUFFcEIsTUFBTUYsMkJBQTJCRztJQUd0Q0MsWUFBNEJDLFdBQW1CLENBQUU7UUFDL0MsS0FBSyxDQUFFLDJCQUF3QkEsY0FBQUEsSUFBQUEsQ0FETEEsV0FBQUEsR0FBQUEsYUFBQUEsSUFBQUEsQ0FGNUJDLE1BQUFBLEdBQW9DSjtJQUlwQztBQUNGO0FBRU8sU0FBU0QscUJBQXFCTSxHQUFZO0lBQy9DLElBQ0UsT0FBT0EsUUFBUSxZQUNmQSxRQUFRLFFBQ1IsQ0FBRSxhQUFZQSxHQUFBQSxDQUFFLElBQ2hCLE9BQU9BLElBQUlELE1BQU0sS0FBSyxVQUN0QjtRQUNBLE9BQU87SUFDVDtJQUVBLE9BQU9DLElBQUlELE1BQU0sS0FBS0o7QUFDeEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcc3JjXFxjbGllbnRcXGNvbXBvbmVudHNcXGhvb2tzLXNlcnZlci1jb250ZXh0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERZTkFNSUNfRVJST1JfQ09ERSA9ICdEWU5BTUlDX1NFUlZFUl9VU0FHRSdcblxuZXhwb3J0IGNsYXNzIER5bmFtaWNTZXJ2ZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgZGlnZXN0OiB0eXBlb2YgRFlOQU1JQ19FUlJPUl9DT0RFID0gRFlOQU1JQ19FUlJPUl9DT0RFXG5cbiAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IGRlc2NyaXB0aW9uOiBzdHJpbmcpIHtcbiAgICBzdXBlcihgRHluYW1pYyBzZXJ2ZXIgdXNhZ2U6ICR7ZGVzY3JpcHRpb259YClcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNEeW5hbWljU2VydmVyRXJyb3IoZXJyOiB1bmtub3duKTogZXJyIGlzIER5bmFtaWNTZXJ2ZXJFcnJvciB7XG4gIGlmIChcbiAgICB0eXBlb2YgZXJyICE9PSAnb2JqZWN0JyB8fFxuICAgIGVyciA9PT0gbnVsbCB8fFxuICAgICEoJ2RpZ2VzdCcgaW4gZXJyKSB8fFxuICAgIHR5cGVvZiBlcnIuZGlnZXN0ICE9PSAnc3RyaW5nJ1xuICApIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIHJldHVybiBlcnIuZGlnZXN0ID09PSBEWU5BTUlDX0VSUk9SX0NPREVcbn1cbiJdLCJuYW1lcyI6WyJEeW5hbWljU2VydmVyRXJyb3IiLCJpc0R5bmFtaWNTZXJ2ZXJFcnJvciIsIkRZTkFNSUNfRVJST1JfQ09ERSIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJkZXNjcmlwdGlvbiIsImRpZ2VzdCIsImVyciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/hooks-server-context.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/static-generation-bailout.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    StaticGenBailoutError: function() {\n        return StaticGenBailoutError;\n    },\n    isStaticGenBailoutError: function() {\n        return isStaticGenBailoutError;\n    }\n});\nconst NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT';\nclass StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args), this.code = NEXT_STATIC_GEN_BAILOUT;\n    }\n}\nfunction isStaticGenBailoutError(error) {\n    if (typeof error !== 'object' || error === null || !('code' in error)) {\n        return false;\n    }\n    return error.code === NEXT_STATIC_GEN_BAILOUT;\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=static-generation-bailout.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFFYUEscUJBQXFCO2VBQXJCQTs7SUFJR0MsdUJBQXVCO2VBQXZCQTs7O0FBTmhCLE1BQU1DLDBCQUEwQjtBQUV6QixNQUFNRiw4QkFBOEJHOztRQUFwQyxxQkFDV0MsSUFBQUEsR0FBT0Y7O0FBQ3pCO0FBRU8sU0FBU0Qsd0JBQ2RJLEtBQWM7SUFFZCxJQUFJLE9BQU9BLFVBQVUsWUFBWUEsVUFBVSxRQUFRLENBQUUsV0FBVUEsS0FBQUEsQ0FBSSxFQUFJO1FBQ3JFLE9BQU87SUFDVDtJQUVBLE9BQU9BLE1BQU1ELElBQUksS0FBS0Y7QUFDeEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcc3JjXFxjbGllbnRcXGNvbXBvbmVudHNcXHN0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVQgPSAnTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVQnXG5cbmV4cG9ydCBjbGFzcyBTdGF0aWNHZW5CYWlsb3V0RXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIHB1YmxpYyByZWFkb25seSBjb2RlID0gTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RhdGljR2VuQmFpbG91dEVycm9yKFxuICBlcnJvcjogdW5rbm93blxuKTogZXJyb3IgaXMgU3RhdGljR2VuQmFpbG91dEVycm9yIHtcbiAgaWYgKHR5cGVvZiBlcnJvciAhPT0gJ29iamVjdCcgfHwgZXJyb3IgPT09IG51bGwgfHwgISgnY29kZScgaW4gZXJyb3IpKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICByZXR1cm4gZXJyb3IuY29kZSA9PT0gTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVRcbn1cbiJdLCJuYW1lcyI6WyJTdGF0aWNHZW5CYWlsb3V0RXJyb3IiLCJpc1N0YXRpY0dlbkJhaWxvdXRFcnJvciIsIk5FWFRfU1RBVElDX0dFTl9CQUlMT1VUIiwiRXJyb3IiLCJjb2RlIiwiZXJyb3IiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/client/use-merged-ref.js ***!
  \*********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useMergedRef\", ({\n    enumerable: true,\n    get: function() {\n        return useMergedRef;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nfunction useMergedRef(refA, refB) {\n    const cleanupA = (0, _react.useRef)(null);\n    const cleanupB = (0, _react.useRef)(null);\n    // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n    // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n    // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),\n    // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n    // (because it hasn't been updated for React 19)\n    // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n    // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n    return (0, _react.useCallback)((current)=>{\n        if (current === null) {\n            const cleanupFnA = cleanupA.current;\n            if (cleanupFnA) {\n                cleanupA.current = null;\n                cleanupFnA();\n            }\n            const cleanupFnB = cleanupB.current;\n            if (cleanupFnB) {\n                cleanupB.current = null;\n                cleanupFnB();\n            }\n        } else {\n            if (refA) {\n                cleanupA.current = applyRef(refA, current);\n            }\n            if (refB) {\n                cleanupB.current = applyRef(refB, current);\n            }\n        }\n    }, [\n        refA,\n        refB\n    ]);\n}\nfunction applyRef(refA, current) {\n    if (typeof refA === 'function') {\n        const cleanup = refA(current);\n        if (typeof cleanup === 'function') {\n            return cleanup;\n        } else {\n            return ()=>refA(null);\n        }\n    } else {\n        refA.current = current;\n        return ()=>{\n            refA.current = null;\n        };\n    }\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-merged-ref.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3VzZS1tZXJnZWQtcmVmLmpzIiwibWFwcGluZ3MiOiI7Ozs7Z0RBU2dCQTs7O2VBQUFBOzs7bUNBVDhCO0FBU3ZDLFNBQVNBLGFBQ2RDLElBQW1CLEVBQ25CQyxJQUFtQjtJQUVuQixNQUFNQyxXQUFXQyxDQUFBQSxHQUFBQSxPQUFBQSxNQUFBQSxFQUE0QjtJQUM3QyxNQUFNQyxXQUFXRCxDQUFBQSxHQUFBQSxPQUFBQSxNQUFBQSxFQUE0QjtJQUU3QyxtRkFBbUY7SUFDbkYseUVBQXlFO0lBQ3pFLGlHQUFpRztJQUNqRyw4RkFBOEY7SUFDOUYsZ0RBQWdEO0lBQ2hELG1HQUFtRztJQUNuRyx3RkFBd0Y7SUFDeEYsT0FBT0UsQ0FBQUEsR0FBQUEsT0FBQUEsV0FBQUEsRUFDTCxDQUFDQztRQUNDLElBQUlBLFlBQVksTUFBTTtZQUNwQixNQUFNQyxhQUFhTCxTQUFTSSxPQUFPO1lBQ25DLElBQUlDLFlBQVk7Z0JBQ2RMLFNBQVNJLE9BQU8sR0FBRztnQkFDbkJDO1lBQ0Y7WUFDQSxNQUFNQyxhQUFhSixTQUFTRSxPQUFPO1lBQ25DLElBQUlFLFlBQVk7Z0JBQ2RKLFNBQVNFLE9BQU8sR0FBRztnQkFDbkJFO1lBQ0Y7UUFDRixPQUFPO1lBQ0wsSUFBSVIsTUFBTTtnQkFDUkUsU0FBU0ksT0FBTyxHQUFHRyxTQUFTVCxNQUFNTTtZQUNwQztZQUNBLElBQUlMLE1BQU07Z0JBQ1JHLFNBQVNFLE9BQU8sR0FBR0csU0FBU1IsTUFBTUs7WUFDcEM7UUFDRjtJQUNGLEdBQ0E7UUFBQ047UUFBTUM7S0FBSztBQUVoQjtBQUVBLFNBQVNRLFNBQ1BULElBQWdDLEVBQ2hDTSxPQUFpQjtJQUVqQixJQUFJLE9BQU9OLFNBQVMsWUFBWTtRQUM5QixNQUFNVSxVQUFVVixLQUFLTTtRQUNyQixJQUFJLE9BQU9JLFlBQVksWUFBWTtZQUNqQyxPQUFPQTtRQUNULE9BQU87WUFDTCxPQUFPLElBQU1WLEtBQUs7UUFDcEI7SUFDRixPQUFPO1FBQ0xBLEtBQUtNLE9BQU8sR0FBR0E7UUFDZixPQUFPO1lBQ0xOLEtBQUtNLE9BQU8sR0FBRztRQUNqQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcc3JjXFxjbGllbnRcXHVzZS1tZXJnZWQtcmVmLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYsIHR5cGUgUmVmIH0gZnJvbSAncmVhY3QnXG5cbi8vIFRoaXMgaXMgYSBjb21wYXRpYmlsaXR5IGhvb2sgdG8gc3VwcG9ydCBSZWFjdCAxOCBhbmQgMTkgcmVmcy5cbi8vIEluIDE5LCBhIGNsZWFudXAgZnVuY3Rpb24gZnJvbSByZWZzIG1heSBiZSByZXR1cm5lZC5cbi8vIEluIDE4LCByZXR1cm5pbmcgYSBjbGVhbnVwIGZ1bmN0aW9uIGNyZWF0ZXMgYSB3YXJuaW5nLlxuLy8gU2luY2Ugd2UgdGFrZSB1c2Vyc3BhY2UgcmVmcywgd2UgZG9uJ3Qga25vdyBhaGVhZCBvZiB0aW1lIGlmIGEgY2xlYW51cCBmdW5jdGlvbiB3aWxsIGJlIHJldHVybmVkLlxuLy8gVGhpcyBpbXBsZW1lbnRzIGNsZWFudXAgZnVuY3Rpb25zIHdpdGggdGhlIG9sZCBiZWhhdmlvciBpbiAxOC5cbi8vIFdlIGtub3cgcmVmcyBhcmUgYWx3YXlzIGNhbGxlZCBhbHRlcm5hdGluZyB3aXRoIGBudWxsYCBhbmQgdGhlbiBgVGAuXG4vLyBTbyBhIGNhbGwgd2l0aCBgbnVsbGAgbWVhbnMgd2UgbmVlZCB0byBjYWxsIHRoZSBwcmV2aW91cyBjbGVhbnVwIGZ1bmN0aW9ucy5cbmV4cG9ydCBmdW5jdGlvbiB1c2VNZXJnZWRSZWY8VEVsZW1lbnQ+KFxuICByZWZBOiBSZWY8VEVsZW1lbnQ+LFxuICByZWZCOiBSZWY8VEVsZW1lbnQ+XG4pOiBSZWY8VEVsZW1lbnQ+IHtcbiAgY29uc3QgY2xlYW51cEEgPSB1c2VSZWY8KCgpID0+IHZvaWQpIHwgbnVsbD4obnVsbClcbiAgY29uc3QgY2xlYW51cEIgPSB1c2VSZWY8KCgpID0+IHZvaWQpIHwgbnVsbD4obnVsbClcblxuICAvLyBOT1RFOiBJbiB0aGVvcnksIHdlIGNvdWxkIHNraXAgdGhlIHdyYXBwaW5nIGlmIG9ubHkgb25lIG9mIHRoZSByZWZzIGlzIG5vbi1udWxsLlxuICAvLyAodGhpcyBoYXBwZW5zIG9mdGVuIGlmIHRoZSB1c2VyIGRvZXNuJ3QgcGFzcyBhIHJlZiB0byBMaW5rL0Zvcm0vSW1hZ2UpXG4gIC8vIEJ1dCB0aGlzIGNhbiBjYXVzZSB1cyB0byBsZWFrIGEgY2xlYW51cC1yZWYgaW50byB1c2VyIGNvZGUgKGUuZy4gdmlhIGA8TGluayBsZWdhY3lCZWhhdmlvcj5gKSxcbiAgLy8gYW5kIHRoZSB1c2VyIG1pZ2h0IHBhc3MgdGhhdCByZWYgaW50byByZWYtbWVyZ2luZyBsaWJyYXJ5IHRoYXQgZG9lc24ndCBzdXBwb3J0IGNsZWFudXAgcmVmc1xuICAvLyAoYmVjYXVzZSBpdCBoYXNuJ3QgYmVlbiB1cGRhdGVkIGZvciBSZWFjdCAxOSlcbiAgLy8gd2hpY2ggY2FuIHRoZW4gY2F1c2UgdGhpbmdzIHRvIGJsb3cgdXAsIGJlY2F1c2UgYSBjbGVhbnVwLXJldHVybmluZyByZWYgZ2V0cyBjYWxsZWQgd2l0aCBgbnVsbGAuXG4gIC8vIFNvIGluIHByYWN0aWNlLCBpdCdzIHNhZmVyIHRvIGJlIGRlZmVuc2l2ZSBhbmQgYWx3YXlzIHdyYXAgdGhlIHJlZiwgZXZlbiBvbiBSZWFjdCAxOS5cbiAgcmV0dXJuIHVzZUNhbGxiYWNrKFxuICAgIChjdXJyZW50OiBURWxlbWVudCB8IG51bGwpOiB2b2lkID0+IHtcbiAgICAgIGlmIChjdXJyZW50ID09PSBudWxsKSB7XG4gICAgICAgIGNvbnN0IGNsZWFudXBGbkEgPSBjbGVhbnVwQS5jdXJyZW50XG4gICAgICAgIGlmIChjbGVhbnVwRm5BKSB7XG4gICAgICAgICAgY2xlYW51cEEuY3VycmVudCA9IG51bGxcbiAgICAgICAgICBjbGVhbnVwRm5BKClcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjbGVhbnVwRm5CID0gY2xlYW51cEIuY3VycmVudFxuICAgICAgICBpZiAoY2xlYW51cEZuQikge1xuICAgICAgICAgIGNsZWFudXBCLmN1cnJlbnQgPSBudWxsXG4gICAgICAgICAgY2xlYW51cEZuQigpXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChyZWZBKSB7XG4gICAgICAgICAgY2xlYW51cEEuY3VycmVudCA9IGFwcGx5UmVmKHJlZkEsIGN1cnJlbnQpXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlZkIpIHtcbiAgICAgICAgICBjbGVhbnVwQi5jdXJyZW50ID0gYXBwbHlSZWYocmVmQiwgY3VycmVudClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgW3JlZkEsIHJlZkJdXG4gIClcbn1cblxuZnVuY3Rpb24gYXBwbHlSZWY8VEVsZW1lbnQ+KFxuICByZWZBOiBOb25OdWxsYWJsZTxSZWY8VEVsZW1lbnQ+PixcbiAgY3VycmVudDogVEVsZW1lbnRcbikge1xuICBpZiAodHlwZW9mIHJlZkEgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjb25zdCBjbGVhbnVwID0gcmVmQShjdXJyZW50KVxuICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIGNsZWFudXBcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICgpID0+IHJlZkEobnVsbClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmVmQS5jdXJyZW50ID0gY3VycmVudFxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICByZWZBLmN1cnJlbnQgPSBudWxsXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsidXNlTWVyZ2VkUmVmIiwicmVmQSIsInJlZkIiLCJjbGVhbnVwQSIsInVzZVJlZiIsImNsZWFudXBCIiwidXNlQ2FsbGJhY2siLCJjdXJyZW50IiwiY2xlYW51cEZuQSIsImNsZWFudXBGbkIiLCJhcHBseVJlZiIsImNsZWFudXAiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/use-merged-ref.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n true &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return type.displayName || \"Context\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\"),\n      REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      react_stack_bottom_frame: function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxjb21waWxlZFxccmVhY3RcXGpzeC1kZXYtcnVudGltZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-constants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/lib/metadata/metadata-constants.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    METADATA_BOUNDARY_NAME: function() {\n        return METADATA_BOUNDARY_NAME;\n    },\n    OUTLET_BOUNDARY_NAME: function() {\n        return OUTLET_BOUNDARY_NAME;\n    },\n    VIEWPORT_BOUNDARY_NAME: function() {\n        return VIEWPORT_BOUNDARY_NAME;\n    }\n});\nconst METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nconst VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nconst OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL21ldGFkYXRhL21ldGFkYXRhLWNvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLE1BQU0sQ0FJTDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXGxpYlxcbWV0YWRhdGFcXG1ldGFkYXRhLWNvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIE1FVEFEQVRBX0JPVU5EQVJZX05BTUU6IG51bGwsXG4gICAgT1VUTEVUX0JPVU5EQVJZX05BTUU6IG51bGwsXG4gICAgVklFV1BPUlRfQk9VTkRBUllfTkFNRTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBNRVRBREFUQV9CT1VOREFSWV9OQU1FOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIE1FVEFEQVRBX0JPVU5EQVJZX05BTUU7XG4gICAgfSxcbiAgICBPVVRMRVRfQk9VTkRBUllfTkFNRTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBPVVRMRVRfQk9VTkRBUllfTkFNRTtcbiAgICB9LFxuICAgIFZJRVdQT1JUX0JPVU5EQVJZX05BTUU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gVklFV1BPUlRfQk9VTkRBUllfTkFNRTtcbiAgICB9XG59KTtcbmNvbnN0IE1FVEFEQVRBX0JPVU5EQVJZX05BTUUgPSAnX19uZXh0X21ldGFkYXRhX2JvdW5kYXJ5X18nO1xuY29uc3QgVklFV1BPUlRfQk9VTkRBUllfTkFNRSA9ICdfX25leHRfdmlld3BvcnRfYm91bmRhcnlfXyc7XG5jb25zdCBPVVRMRVRfQk9VTkRBUllfTkFNRSA9ICdfX25leHRfb3V0bGV0X2JvdW5kYXJ5X18nO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXRhZGF0YS1jb25zdGFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/lib/scheduler.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    atLeastOneTask: function() {\n        return atLeastOneTask;\n    },\n    scheduleImmediate: function() {\n        return scheduleImmediate;\n    },\n    scheduleOnNextTick: function() {\n        return scheduleOnNextTick;\n    },\n    waitAtLeastOneReactRenderTask: function() {\n        return waitAtLeastOneReactRenderTask;\n    }\n});\nconst scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (false) {} else {\n            process.nextTick(cb);\n        }\n    });\n};\nconst scheduleImmediate = (cb)=>{\n    if (false) {} else {\n        setImmediate(cb);\n    }\n};\nfunction atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\nfunction waitAtLeastOneReactRenderTask() {\n    if (false) {} else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL3NjaGVkdWxlci5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBS0w7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLEtBQW1DLEVBQUUsRUFFeEMsQ0FBQztBQUNWLFlBQVksT0FBTztBQUNuQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsUUFBUSxLQUFtQyxFQUFFLEVBRXhDLENBQUM7QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsS0FBbUMsRUFBRSxFQUV4QyxDQUFDO0FBQ047QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcbGliXFxzY2hlZHVsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBhdExlYXN0T25lVGFzazogbnVsbCxcbiAgICBzY2hlZHVsZUltbWVkaWF0ZTogbnVsbCxcbiAgICBzY2hlZHVsZU9uTmV4dFRpY2s6IG51bGwsXG4gICAgd2FpdEF0TGVhc3RPbmVSZWFjdFJlbmRlclRhc2s6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgYXRMZWFzdE9uZVRhc2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXRMZWFzdE9uZVRhc2s7XG4gICAgfSxcbiAgICBzY2hlZHVsZUltbWVkaWF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzY2hlZHVsZUltbWVkaWF0ZTtcbiAgICB9LFxuICAgIHNjaGVkdWxlT25OZXh0VGljazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzY2hlZHVsZU9uTmV4dFRpY2s7XG4gICAgfSxcbiAgICB3YWl0QXRMZWFzdE9uZVJlYWN0UmVuZGVyVGFzazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3YWl0QXRMZWFzdE9uZVJlYWN0UmVuZGVyVGFzaztcbiAgICB9XG59KTtcbmNvbnN0IHNjaGVkdWxlT25OZXh0VGljayA9IChjYik9PntcbiAgICAvLyBXZSB1c2UgUHJvbWlzZS5yZXNvbHZlKCkudGhlbigpIGhlcmUgc28gdGhhdCB0aGUgb3BlcmF0aW9uIGlzIHNjaGVkdWxlZCBhdFxuICAgIC8vIHRoZSBlbmQgb2YgdGhlIHByb21pc2Ugam9iIHF1ZXVlLCB3ZSB0aGVuIGFkZCBpdCB0byB0aGUgbmV4dCBwcm9jZXNzIHRpY2tcbiAgICAvLyB0byBlbnN1cmUgaXQncyBldmFsdWF0ZWQgYWZ0ZXJ3YXJkcy5cbiAgICAvL1xuICAgIC8vIFRoaXMgd2FzIGluc3BpcmVkIGJ5IHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgRGF0YUxvYWRlciBpbnRlcmZhY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2RhdGFsb2FkZXIvYmxvYi9kMzM2YmQxNTI4MjY2NGUwYmU0YjRhNjU3Y2I3OTZmMDliYWZiYzZiL3NyYy9pbmRleC5qcyNMMjEzLUwyNTVcbiAgICAvL1xuICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oKCk9PntcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUlVOVElNRSA9PT0gJ2VkZ2UnKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGNiLCAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb2Nlc3MubmV4dFRpY2soY2IpO1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuY29uc3Qgc2NoZWR1bGVJbW1lZGlhdGUgPSAoY2IpPT57XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5FWFRfUlVOVElNRSA9PT0gJ2VkZ2UnKSB7XG4gICAgICAgIHNldFRpbWVvdXQoY2IsIDApO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHNldEltbWVkaWF0ZShjYik7XG4gICAgfVxufTtcbmZ1bmN0aW9uIGF0TGVhc3RPbmVUYXNrKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSk9PnNjaGVkdWxlSW1tZWRpYXRlKHJlc29sdmUpKTtcbn1cbmZ1bmN0aW9uIHdhaXRBdExlYXN0T25lUmVhY3RSZW5kZXJUYXNrKCkge1xuICAgIGlmIChwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgPT09ICdlZGdlJykge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHIpPT5zZXRUaW1lb3V0KHIsIDApKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHIpPT5zZXRJbW1lZGlhdGUocikpO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NoZWR1bGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"afterTaskAsyncStorageInstance\", ({\n    enumerable: true,\n    get: function() {\n        return afterTaskAsyncStorageInstance;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/async-local-storage.js\");\nconst afterTaskAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=after-task-async-storage-instance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvYWZ0ZXItdGFzay1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsaUVBQWdFO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkJBQTJCLG1CQUFPLENBQUMsb0hBQXVCO0FBQzFEOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFxhcHAtcmVuZGVyXFxhZnRlci10YXNrLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhZnRlclRhc2tBc3luY1N0b3JhZ2VJbnN0YW5jZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfYXN5bmNsb2NhbHN0b3JhZ2UgPSByZXF1aXJlKFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCIpO1xuY29uc3QgYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlSW5zdGFuY2UgPSAoMCwgX2FzeW5jbG9jYWxzdG9yYWdlLmNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlKSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZnRlci10YXNrLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage.external.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/after-task-async-storage.external.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"afterTaskAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return _aftertaskasyncstorageinstance.afterTaskAsyncStorageInstance;\n    }\n}));\nconst _aftertaskasyncstorageinstance = __webpack_require__(/*! ./after-task-async-storage-instance */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage-instance.js\");\n\n//# sourceMappingURL=after-task-async-storage.external.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvYWZ0ZXItdGFzay1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YseURBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsdUNBQXVDLG1CQUFPLENBQUMsZ0pBQXFDOztBQUVwRiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcYXBwLXJlbmRlclxcYWZ0ZXItdGFzay1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfYWZ0ZXJ0YXNrYXN5bmNzdG9yYWdlaW5zdGFuY2UuYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfYWZ0ZXJ0YXNrYXN5bmNzdG9yYWdlaW5zdGFuY2UgPSByZXF1aXJlKFwiLi9hZnRlci10YXNrLWFzeW5jLXN0b3JhZ2UtaW5zdGFuY2VcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFmdGVyLXRhc2stYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage.external.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/app-render/async-local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/async-local-storage.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    bindSnapshot: function() {\n        return bindSnapshot;\n    },\n    createAsyncLocalStorage: function() {\n        return createAsyncLocalStorage;\n    },\n    createSnapshot: function() {\n        return createSnapshot;\n    }\n});\nconst sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nfunction bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nfunction createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvYXN5bmMtbG9jYWwtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLE1BQU0sQ0FJTDtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcYXBwLXJlbmRlclxcYXN5bmMtbG9jYWwtc3RvcmFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGJpbmRTbmFwc2hvdDogbnVsbCxcbiAgICBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZTogbnVsbCxcbiAgICBjcmVhdGVTbmFwc2hvdDogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBiaW5kU25hcHNob3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYmluZFNuYXBzaG90O1xuICAgIH0sXG4gICAgY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2U7XG4gICAgfSxcbiAgICBjcmVhdGVTbmFwc2hvdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVTbmFwc2hvdDtcbiAgICB9XG59KTtcbmNvbnN0IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3IEVycm9yKCdJbnZhcmlhbnQ6IEFzeW5jTG9jYWxTdG9yYWdlIGFjY2Vzc2VkIGluIHJ1bnRpbWUgd2hlcmUgaXQgaXMgbm90IGF2YWlsYWJsZScpLCBcIl9fTkVYVF9FUlJPUl9DT0RFXCIsIHtcbiAgICB2YWx1ZTogXCJFNTA0XCIsXG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlXG59KTtcbmNsYXNzIEZha2VBc3luY0xvY2FsU3RvcmFnZSB7XG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZ2V0U3RvcmUoKSB7XG4gICAgICAgIC8vIFRoaXMgZmFrZSBpbXBsZW1lbnRhdGlvbiBvZiBBc3luY0xvY2FsU3RvcmFnZSBhbHdheXMgcmV0dXJucyBgdW5kZWZpbmVkYC5cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcnVuKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBleGl0KCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBlbnRlcldpdGgoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIHN0YXRpYyBiaW5kKGZuKSB7XG4gICAgICAgIHJldHVybiBmbjtcbiAgICB9XG59XG5jb25zdCBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlID0gdHlwZW9mIGdsb2JhbFRoaXMgIT09ICd1bmRlZmluZWQnICYmIGdsb2JhbFRoaXMuQXN5bmNMb2NhbFN0b3JhZ2U7XG5mdW5jdGlvbiBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpIHtcbiAgICBpZiAobWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSkge1xuICAgICAgICByZXR1cm4gbmV3IG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbn1cbmZ1bmN0aW9uIGJpbmRTbmFwc2hvdChmbikge1xuICAgIGlmIChtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlLmJpbmQoZm4pO1xuICAgIH1cbiAgICByZXR1cm4gRmFrZUFzeW5jTG9jYWxTdG9yYWdlLmJpbmQoZm4pO1xufVxuZnVuY3Rpb24gY3JlYXRlU25hcHNob3QoKSB7XG4gICAgaWYgKG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2Uuc25hcHNob3QoKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGZuLCAuLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiBmbiguLi5hcmdzKTtcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3luYy1sb2NhbC1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/app-render/async-local-storage.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/dynamic-rendering.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    Postpone: function() {\n        return Postpone;\n    },\n    PreludeState: function() {\n        return PreludeState;\n    },\n    abortAndThrowOnSynchronousRequestDataAccess: function() {\n        return abortAndThrowOnSynchronousRequestDataAccess;\n    },\n    abortOnSynchronousPlatformIOAccess: function() {\n        return abortOnSynchronousPlatformIOAccess;\n    },\n    accessedDynamicData: function() {\n        return accessedDynamicData;\n    },\n    annotateDynamicAccess: function() {\n        return annotateDynamicAccess;\n    },\n    consumeDynamicAccess: function() {\n        return consumeDynamicAccess;\n    },\n    createDynamicTrackingState: function() {\n        return createDynamicTrackingState;\n    },\n    createDynamicValidationState: function() {\n        return createDynamicValidationState;\n    },\n    createHangingInputAbortSignal: function() {\n        return createHangingInputAbortSignal;\n    },\n    createPostponedAbortSignal: function() {\n        return createPostponedAbortSignal;\n    },\n    formatDynamicAPIAccesses: function() {\n        return formatDynamicAPIAccesses;\n    },\n    getFirstDynamicReason: function() {\n        return getFirstDynamicReason;\n    },\n    isDynamicPostpone: function() {\n        return isDynamicPostpone;\n    },\n    isPrerenderInterruptedError: function() {\n        return isPrerenderInterruptedError;\n    },\n    markCurrentScopeAsDynamic: function() {\n        return markCurrentScopeAsDynamic;\n    },\n    postponeWithTracking: function() {\n        return postponeWithTracking;\n    },\n    throwIfDisallowedDynamic: function() {\n        return throwIfDisallowedDynamic;\n    },\n    throwToInterruptStaticGeneration: function() {\n        return throwToInterruptStaticGeneration;\n    },\n    trackAllowedDynamicAccess: function() {\n        return trackAllowedDynamicAccess;\n    },\n    trackDynamicDataInDynamicRender: function() {\n        return trackDynamicDataInDynamicRender;\n    },\n    trackFallbackParamAccessed: function() {\n        return trackFallbackParamAccessed;\n    },\n    trackSynchronousPlatformIOAccessInDev: function() {\n        return trackSynchronousPlatformIOAccessInDev;\n    },\n    trackSynchronousRequestDataAccessInDev: function() {\n        return trackSynchronousRequestDataAccessInDev;\n    },\n    useDynamicRouteParams: function() {\n        return useDynamicRouteParams;\n    }\n});\nconst _react = /*#__PURE__*/ _interop_require_default(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _hooksservercontext = __webpack_require__(/*! ../../client/components/hooks-server-context */ \"(app-pages-browser)/./node_modules/next/dist/client/components/hooks-server-context.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ./work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _dynamicrenderingutils = __webpack_require__(/*! ../dynamic-rendering-utils */ \"(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js\");\nconst _metadataconstants = __webpack_require__(/*! ../../lib/metadata/metadata-constants */ \"(app-pages-browser)/./node_modules/next/dist/lib/metadata/metadata-constants.js\");\nconst _scheduler = __webpack_require__(/*! ../../lib/scheduler */ \"(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst hasPostpone = typeof _react.default.unstable_postpone === 'function';\nfunction createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicErrorWithStack: null\n    };\n}\nfunction createDynamicValidationState() {\n    return {\n        hasSuspenseAboveBody: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasAllowedDynamic: false,\n        dynamicErrors: []\n    };\n}\nfunction getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\nfunction markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(\"Route \".concat(store.route, ' with `dynamic = \"error\"` couldn\\'t be rendered statically because it used `').concat(expression, \"`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\")), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = Object.defineProperty(new _hooksservercontext.DynamicServerError(\"Route \".concat(store.route, \" couldn't be rendered statically because it used \").concat(expression, \". See more info here: https://nextjs.org/docs/messages/dynamic-server-error\")), \"__NEXT_ERROR_CODE\", {\n                value: \"E550\",\n                enumerable: false,\n                configurable: true\n            });\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if ( true && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\nfunction trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\nfunction throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = Object.defineProperty(new _hooksservercontext.DynamicServerError(\"Route \".concat(store.route, \" couldn't be rendered statically because it used `\").concat(expression, \"`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error\")), \"__NEXT_ERROR_CODE\", {\n        value: \"E558\",\n        enumerable: false,\n        configurable: true\n    });\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\nfunction trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        // TODO: it makes no sense to have these work unit store types during a dev render.\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-client' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if ( true && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = \"Route \".concat(route, \" needs to bail out of prerendering at this point because it used \").concat(expression, \".\");\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nfunction abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    // It is important that we set this tracking value after aborting. Aborts are executed\n    // synchronously except for the case where you abort during render itself. By setting this\n    // value late we can use it to determine if any of the aborted tasks are the task that\n    // called the sync IO expression in the first place.\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n}\nfunction trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\nfunction abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const prerenderSignal = prerenderStore.controller.signal;\n    if (prerenderSignal.aborted === false) {\n        // TODO it would be better to move this aborted check into the callsite so we can avoid making\n        // the error object when it isn't relevant to the aborting of the prerender however\n        // since we need the throw semantics regardless of whether we abort it is easier to land\n        // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n        // to ideal implementation\n        abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n        // It is important that we set this tracking value after aborting. Aborts are executed\n        // synchronously except for the case where you abort during render itself. By setting this\n        // value late we can use it to determine if any of the aborted tasks are the task that\n        // called the sync IO expression in the first place.\n        const dynamicTracking = prerenderStore.dynamicTracking;\n        if (dynamicTracking) {\n            if (dynamicTracking.syncDynamicErrorWithStack === null) {\n                dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n            }\n        }\n    }\n    throw createPrerenderInterruptedError(\"Route \".concat(route, \" needs to bail out of prerendering at this point because it used \").concat(expression, \".\"));\n}\nconst trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nfunction Postpone(param) {\n    let { reason, route } = param;\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\n_c = Postpone;\nfunction postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    _react.default.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return \"Route \".concat(route, \" needs to bail out of prerendering at this point because it used \").concat(expression, \". \") + \"React throws this special object to indicate where. It should not be caught by \" + \"your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error\";\n}\nfunction isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw Object.defineProperty(new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n        value: \"E296\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nfunction isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nfunction accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nfunction consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nfunction formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map((param)=>{\n        let { expression, stack } = param;\n        stack = stack.split('\\n') // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return \"Dynamic API Usage Debug - \".concat(expression, \":\\n\").concat(stack);\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw Object.defineProperty(new Error(\"Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js\"), \"__NEXT_ERROR_CODE\", {\n            value: \"E224\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nfunction createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        _react.default.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\nfunction createHangingInputAbortSignal(workUnitStore) {\n    const controller = new AbortController();\n    if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If the input\n        // we're waiting on is coming from another cache, we do want to wait for it so that\n        // we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(()=>{\n            controller.abort();\n        });\n    } else {\n        // Otherwise we're in the final render and we should already have all our caches\n        // filled. We might still be waiting on some microtasks so we wait one tick before\n        // giving up. When we give up, we still want to render the content of this cache\n        // as deeply as we can so that we can suspend as deeply as possible in the tree\n        // or not at all if we don't end up waiting for the input.\n        (0, _scheduler.scheduleOnNextTick)(()=>controller.abort());\n    }\n    return controller.signal;\n}\nfunction annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nfunction useDynamicRouteParams(expression) {\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n        // There are fallback route params, we should track these as dynamic\n        // accesses.\n        const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            // We're prerendering with dynamicIO or PPR or both\n            if (workUnitStore.type === 'prerender-client') {\n                // We are in a prerender with dynamicIO semantics\n                // We are going to hang here and never resolve. This will cause the currently\n                // rendering component to effectively be a dynamic hole\n                _react.default.use((0, _dynamicrenderingutils.makeHangingPromise)(workUnitStore.renderSignal, expression));\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // We're prerendering with PPR\n                postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasSuspenseAfterBodyOrHtmlRegex = /\\n\\s+at (?:body|html) \\(<anonymous>\\)[\\s\\S]*?\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(\"\\\\n\\\\s+at \".concat(_metadataconstants.METADATA_BOUNDARY_NAME, \"[\\\\n\\\\s]\"));\nconst hasViewportRegex = new RegExp(\"\\\\n\\\\s+at \".concat(_metadataconstants.VIEWPORT_BOUNDARY_NAME, \"[\\\\n\\\\s]\"));\nconst hasOutletRegex = new RegExp(\"\\\\n\\\\s+at \".concat(_metadataconstants.OUTLET_BOUNDARY_NAME, \"[\\\\n\\\\s]\"));\nfunction trackAllowedDynamicAccess(workStore, componentStack, dynamicValidation, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseAfterBodyOrHtmlRegex.test(componentStack)) {\n        // This prerender has a Suspense boundary above the body which\n        // effectively opts the page into allowing 100% dynamic rendering\n        dynamicValidation.hasAllowedDynamic = true;\n        dynamicValidation.hasSuspenseAboveBody = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        // this error had a Suspense boundary above it so we don't need to report it as a source\n        // of disallowed\n        dynamicValidation.hasAllowedDynamic = true;\n        return;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        // This task was the task that called the sync error.\n        dynamicValidation.dynamicErrors.push(clientDynamic.syncDynamicErrorWithStack);\n        return;\n    } else {\n        const message = 'Route \"'.concat(workStore.route, '\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense');\n        const error = createErrorWithComponentOrOwnerStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\n/**\n * In dev mode, we prefer using the owner stack, otherwise the provided\n * component stack is used.\n */ function createErrorWithComponentOrOwnerStack(message, componentStack) {\n    const ownerStack =  true && _react.default.captureOwnerStack ? _react.default.captureOwnerStack() : null;\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.stack = error.name + ': ' + message + (ownerStack !== null && ownerStack !== void 0 ? ownerStack : componentStack);\n    return error;\n}\nvar PreludeState = /*#__PURE__*/ function(PreludeState) {\n    PreludeState[PreludeState[\"Full\"] = 0] = \"Full\";\n    PreludeState[PreludeState[\"Empty\"] = 1] = \"Empty\";\n    PreludeState[PreludeState[\"Errored\"] = 2] = \"Errored\";\n    return PreludeState;\n}({});\nfunction logDisallowedDynamicError(workStore, error) {\n    console.error(error);\n    if (!workStore.dev) {\n        if (workStore.hasReadableErrorStacks) {\n            console.error('To get a more detailed stack trace and pinpoint the issue, start the app in development mode by running `next dev`, then open \"'.concat(workStore.route, '\" in your browser to investigate the error.'));\n        } else {\n            console.error('To get a more detailed stack trace and pinpoint the issue, try one of the following:\\n  - Start the app in development mode by running `next dev`, then open \"'.concat(workStore.route, '\" in your browser to investigate the error.\\n  - Rerun the production build with `next build --debug-prerender` to generate better stack traces.'));\n        }\n    }\n}\nfunction throwIfDisallowedDynamic(workStore, prelude, dynamicValidation, serverDynamic) {\n    if (workStore.invalidDynamicUsageError) {\n        logDisallowedDynamicError(workStore, workStore.invalidDynamicUsageError);\n        throw new _staticgenerationbailout.StaticGenBailoutError();\n    }\n    if (prelude !== 0) {\n        if (dynamicValidation.hasSuspenseAboveBody) {\n            // This route has opted into allowing fully dynamic rendering\n            // by including a Suspense boundary above the body. In this case\n            // a lack of a shell is not considered disallowed so we simply return\n            return;\n        }\n        if (serverDynamic.syncDynamicErrorWithStack) {\n            // There is no shell and the server did something sync dynamic likely\n            // leading to an early termination of the prerender before the shell\n            // could be completed. We terminate the build/validating render.\n            logDisallowedDynamicError(workStore, serverDynamic.syncDynamicErrorWithStack);\n            throw new _staticgenerationbailout.StaticGenBailoutError();\n        }\n        // We didn't have any sync bailouts but there may be user code which\n        // blocked the root. We would have captured these during the prerender\n        // and can log them here and then terminate the build/validating render\n        const dynamicErrors = dynamicValidation.dynamicErrors;\n        if (dynamicErrors.length > 0) {\n            for(let i = 0; i < dynamicErrors.length; i++){\n                logDisallowedDynamicError(workStore, dynamicErrors[i]);\n            }\n            throw new _staticgenerationbailout.StaticGenBailoutError();\n        }\n        // If we got this far then the only other thing that could be blocking\n        // the root is dynamic Viewport. If this is dynamic then\n        // you need to opt into that by adding a Suspense boundary above the body\n        // to indicate your are ok with fully dynamic rendering.\n        if (dynamicValidation.hasDynamicViewport) {\n            console.error('Route \"'.concat(workStore.route, '\" has a `generateViewport` that depends on Request data (`cookies()`, etc...) or uncached external data (`fetch(...)`, etc...) without explicitly allowing fully dynamic rendering. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-viewport'));\n            throw new _staticgenerationbailout.StaticGenBailoutError();\n        }\n        if (prelude === 1) {\n            // If we ever get this far then we messed up the tracking of invalid dynamic.\n            // We still adhere to the constraint that you must produce a shell but invite the\n            // user to report this as a bug in Next.js.\n            console.error('Route \"'.concat(workStore.route, '\" did not produce a static shell and Next.js was unable to determine a reason. This is a bug in Next.js.'));\n            throw new _staticgenerationbailout.StaticGenBailoutError();\n        }\n    } else {\n        if (dynamicValidation.hasAllowedDynamic === false && dynamicValidation.hasDynamicMetadata) {\n            console.error('Route \"'.concat(workStore.route, '\" has a `generateMetadata` that depends on Request data (`cookies()`, etc...) or uncached external data (`fetch(...)`, etc...) when the rest of the route does not. See more info here: https://nextjs.org/docs/messages/next-prerender-dynamic-metadata'));\n            throw new _staticgenerationbailout.StaticGenBailoutError();\n        }\n    }\n} //# sourceMappingURL=dynamic-rendering.js.map\nvar _c;\n$RefreshReg$(_c, \"Postpone\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"createDedupedByCallsiteServerErrorLoggerDev\", ({\n    enumerable: true,\n    get: function() {\n        return createDedupedByCallsiteServerErrorLoggerDev;\n    }\n}));\nconst _react = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {\n        __proto__: null\n    };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nconst errorRef = {\n    current: null\n};\n// React.cache is currently only available in canary/experimental React channels.\nconst cache = typeof _react.cache === 'function' ? _react.cache : (fn)=>fn;\n// When Dynamic IO is enabled, we record these as errors so that they\n// are captured by the dev overlay as it's more critical to fix these\n// when enabled.\nconst logErrorOrWarn =  false ? 0 : console.warn;\n// We don't want to dedupe across requests.\n// The developer might've just attempted to fix the warning so we should warn again if it still happens.\nconst flushCurrentErrorIfNew = cache(// eslint-disable-next-line @typescript-eslint/no-unused-vars -- cache key\n(key)=>{\n    try {\n        logErrorOrWarn(errorRef.current);\n    } finally{\n        errorRef.current = null;\n    }\n});\nfunction createDedupedByCallsiteServerErrorLoggerDev(getMessage) {\n    return function logDedupedError(...args) {\n        const message = getMessage(...args);\n        if (true) {\n            var _stack;\n            const callStackFrames = (_stack = new Error().stack) == null ? void 0 : _stack.split('\\n');\n            if (callStackFrames === undefined || callStackFrames.length < 4) {\n                logErrorOrWarn(message);\n            } else {\n                // Error:\n                //   logDedupedError\n                //   asyncApiBeingAccessedSynchronously\n                //   <userland callsite>\n                // TODO: This breaks if sourcemaps with ignore lists are enabled.\n                const key = callStackFrames[4];\n                errorRef.current = message;\n                flushCurrentErrorIfNew(key);\n            }\n        } else {}\n    };\n}\n\n//# sourceMappingURL=create-deduped-by-callsite-server-error-logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2NyZWF0ZS1kZWR1cGVkLWJ5LWNhbGxzaXRlLXNlcnZlci1lcnJvci1sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRiwrRUFBOEU7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLEVBQUM7QUFDRix1REFBdUQsbUJBQU8sQ0FBQyxtRkFBTztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsTUFBNkIsR0FBRyxDQUFhO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFlBQVksSUFBcUM7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxLQUFLLEVBRU47QUFDVDtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFxjcmVhdGUtZGVkdXBlZC1ieS1jYWxsc2l0ZS1zZXJ2ZXItZXJyb3ItbG9nZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlRGVkdXBlZEJ5Q2FsbHNpdGVTZXJ2ZXJFcnJvckxvZ2dlckRldlwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlRGVkdXBlZEJ5Q2FsbHNpdGVTZXJ2ZXJFcnJvckxvZ2dlckRldjtcbiAgICB9XG59KTtcbmNvbnN0IF9yZWFjdCA9IC8qI19fUFVSRV9fKi8gX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZChyZXF1aXJlKFwicmVhY3RcIikpO1xuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7XG4gICAgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsO1xuICAgIHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7XG4gICAgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpO1xuICAgIHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24obm9kZUludGVyb3ApIHtcbiAgICAgICAgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wO1xuICAgIH0pKG5vZGVJbnRlcm9wKTtcbn1cbmZ1bmN0aW9uIF9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkge1xuICAgIGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7XG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6IG9ialxuICAgICAgICB9O1xuICAgIH1cbiAgICB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApO1xuICAgIGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkge1xuICAgICAgICByZXR1cm4gY2FjaGUuZ2V0KG9iaik7XG4gICAgfVxuICAgIHZhciBuZXdPYmogPSB7XG4gICAgICAgIF9fcHJvdG9fXzogbnVsbFxuICAgIH07XG4gICAgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuICAgIGZvcih2YXIga2V5IGluIG9iail7XG4gICAgICAgIGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgICAgICAgIHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsO1xuICAgICAgICAgICAgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7XG4gICAgaWYgKGNhY2hlKSB7XG4gICAgICAgIGNhY2hlLnNldChvYmosIG5ld09iaik7XG4gICAgfVxuICAgIHJldHVybiBuZXdPYmo7XG59XG5jb25zdCBlcnJvclJlZiA9IHtcbiAgICBjdXJyZW50OiBudWxsXG59O1xuLy8gUmVhY3QuY2FjaGUgaXMgY3VycmVudGx5IG9ubHkgYXZhaWxhYmxlIGluIGNhbmFyeS9leHBlcmltZW50YWwgUmVhY3QgY2hhbm5lbHMuXG5jb25zdCBjYWNoZSA9IHR5cGVvZiBfcmVhY3QuY2FjaGUgPT09ICdmdW5jdGlvbicgPyBfcmVhY3QuY2FjaGUgOiAoZm4pPT5mbjtcbi8vIFdoZW4gRHluYW1pYyBJTyBpcyBlbmFibGVkLCB3ZSByZWNvcmQgdGhlc2UgYXMgZXJyb3JzIHNvIHRoYXQgdGhleVxuLy8gYXJlIGNhcHR1cmVkIGJ5IHRoZSBkZXYgb3ZlcmxheSBhcyBpdCdzIG1vcmUgY3JpdGljYWwgdG8gZml4IHRoZXNlXG4vLyB3aGVuIGVuYWJsZWQuXG5jb25zdCBsb2dFcnJvck9yV2FybiA9IHByb2Nlc3MuZW52Ll9fTkVYVF9EWU5BTUlDX0lPID8gY29uc29sZS5lcnJvciA6IGNvbnNvbGUud2Fybjtcbi8vIFdlIGRvbid0IHdhbnQgdG8gZGVkdXBlIGFjcm9zcyByZXF1ZXN0cy5cbi8vIFRoZSBkZXZlbG9wZXIgbWlnaHQndmUganVzdCBhdHRlbXB0ZWQgdG8gZml4IHRoZSB3YXJuaW5nIHNvIHdlIHNob3VsZCB3YXJuIGFnYWluIGlmIGl0IHN0aWxsIGhhcHBlbnMuXG5jb25zdCBmbHVzaEN1cnJlbnRFcnJvcklmTmV3ID0gY2FjaGUoLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAtLSBjYWNoZSBrZXlcbihrZXkpPT57XG4gICAgdHJ5IHtcbiAgICAgICAgbG9nRXJyb3JPcldhcm4oZXJyb3JSZWYuY3VycmVudCk7XG4gICAgfSBmaW5hbGx5e1xuICAgICAgICBlcnJvclJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGNyZWF0ZURlZHVwZWRCeUNhbGxzaXRlU2VydmVyRXJyb3JMb2dnZXJEZXYoZ2V0TWVzc2FnZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBsb2dEZWR1cGVkRXJyb3IoLi4uYXJncykge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gZ2V0TWVzc2FnZSguLi5hcmdzKTtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHZhciBfc3RhY2s7XG4gICAgICAgICAgICBjb25zdCBjYWxsU3RhY2tGcmFtZXMgPSAoX3N0YWNrID0gbmV3IEVycm9yKCkuc3RhY2spID09IG51bGwgPyB2b2lkIDAgOiBfc3RhY2suc3BsaXQoJ1xcbicpO1xuICAgICAgICAgICAgaWYgKGNhbGxTdGFja0ZyYW1lcyA9PT0gdW5kZWZpbmVkIHx8IGNhbGxTdGFja0ZyYW1lcy5sZW5ndGggPCA0KSB7XG4gICAgICAgICAgICAgICAgbG9nRXJyb3JPcldhcm4obWVzc2FnZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEVycm9yOlxuICAgICAgICAgICAgICAgIC8vICAgbG9nRGVkdXBlZEVycm9yXG4gICAgICAgICAgICAgICAgLy8gICBhc3luY0FwaUJlaW5nQWNjZXNzZWRTeW5jaHJvbm91c2x5XG4gICAgICAgICAgICAgICAgLy8gICA8dXNlcmxhbmQgY2FsbHNpdGU+XG4gICAgICAgICAgICAgICAgLy8gVE9ETzogVGhpcyBicmVha3MgaWYgc291cmNlbWFwcyB3aXRoIGlnbm9yZSBsaXN0cyBhcmUgZW5hYmxlZC5cbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBjYWxsU3RhY2tGcmFtZXNbNF07XG4gICAgICAgICAgICAgICAgZXJyb3JSZWYuY3VycmVudCA9IG1lc3NhZ2U7XG4gICAgICAgICAgICAgICAgZmx1c2hDdXJyZW50RXJyb3JJZk5ldyhrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbG9nRXJyb3JPcldhcm4obWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcmVhdGUtZGVkdXBlZC1ieS1jYWxsc2l0ZS1zZXJ2ZXItZXJyb3ItbG9nZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/server/dynamic-rendering-utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    isHangingPromiseRejectionError: function() {\n        return isHangingPromiseRejectionError;\n    },\n    makeHangingPromise: function() {\n        return makeHangingPromise;\n    }\n});\nfunction isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`), this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\nfunction makeHangingPromise(signal, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2R5bmFtaWMtcmVuZGVyaW5nLXV0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQUdMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxZQUFZLHNHQUFzRyxZQUFZO0FBQ3BLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsc0JBQXNCO0FBQ3pEO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcZHluYW1pYy1yZW5kZXJpbmctdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBpc0hhbmdpbmdQcm9taXNlUmVqZWN0aW9uRXJyb3I6IG51bGwsXG4gICAgbWFrZUhhbmdpbmdQcm9taXNlOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIGlzSGFuZ2luZ1Byb21pc2VSZWplY3Rpb25FcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpc0hhbmdpbmdQcm9taXNlUmVqZWN0aW9uRXJyb3I7XG4gICAgfSxcbiAgICBtYWtlSGFuZ2luZ1Byb21pc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbWFrZUhhbmdpbmdQcm9taXNlO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gaXNIYW5naW5nUHJvbWlzZVJlamVjdGlvbkVycm9yKGVycikge1xuICAgIGlmICh0eXBlb2YgZXJyICE9PSAnb2JqZWN0JyB8fCBlcnIgPT09IG51bGwgfHwgISgnZGlnZXN0JyBpbiBlcnIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGVyci5kaWdlc3QgPT09IEhBTkdJTkdfUFJPTUlTRV9SRUpFQ1RJT047XG59XG5jb25zdCBIQU5HSU5HX1BST01JU0VfUkVKRUNUSU9OID0gJ0hBTkdJTkdfUFJPTUlTRV9SRUpFQ1RJT04nO1xuY2xhc3MgSGFuZ2luZ1Byb21pc2VSZWplY3Rpb25FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihleHByZXNzaW9uKXtcbiAgICAgICAgc3VwZXIoYER1cmluZyBwcmVyZW5kZXJpbmcsICR7ZXhwcmVzc2lvbn0gcmVqZWN0cyB3aGVuIHRoZSBwcmVyZW5kZXIgaXMgY29tcGxldGUuIFR5cGljYWxseSB0aGVzZSBlcnJvcnMgYXJlIGhhbmRsZWQgYnkgUmVhY3QgYnV0IGlmIHlvdSBtb3ZlICR7ZXhwcmVzc2lvbn0gdG8gYSBkaWZmZXJlbnQgY29udGV4dCBieSB1c2luZyBcXGBzZXRUaW1lb3V0XFxgLCBcXGBhZnRlclxcYCwgb3Igc2ltaWxhciBmdW5jdGlvbnMgeW91IG1heSBvYnNlcnZlIHRoaXMgZXJyb3IgYW5kIHlvdSBzaG91bGQgaGFuZGxlIGl0IGluIHRoYXQgY29udGV4dC5gKSwgdGhpcy5leHByZXNzaW9uID0gZXhwcmVzc2lvbiwgdGhpcy5kaWdlc3QgPSBIQU5HSU5HX1BST01JU0VfUkVKRUNUSU9OO1xuICAgIH1cbn1cbmNvbnN0IGFib3J0TGlzdGVuZXJzQnlTaWduYWwgPSBuZXcgV2Vha01hcCgpO1xuZnVuY3Rpb24gbWFrZUhhbmdpbmdQcm9taXNlKHNpZ25hbCwgZXhwcmVzc2lvbikge1xuICAgIGlmIChzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEhhbmdpbmdQcm9taXNlUmVqZWN0aW9uRXJyb3IoZXhwcmVzc2lvbikpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGhhbmdpbmdQcm9taXNlID0gbmV3IFByb21pc2UoKF8sIHJlamVjdCk9PntcbiAgICAgICAgICAgIGNvbnN0IGJvdW5kUmVqZWN0aW9uID0gcmVqZWN0LmJpbmQobnVsbCwgbmV3IEhhbmdpbmdQcm9taXNlUmVqZWN0aW9uRXJyb3IoZXhwcmVzc2lvbikpO1xuICAgICAgICAgICAgbGV0IGN1cnJlbnRMaXN0ZW5lcnMgPSBhYm9ydExpc3RlbmVyc0J5U2lnbmFsLmdldChzaWduYWwpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRMaXN0ZW5lcnMpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50TGlzdGVuZXJzLnB1c2goYm91bmRSZWplY3Rpb24pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsaXN0ZW5lcnMgPSBbXG4gICAgICAgICAgICAgICAgICAgIGJvdW5kUmVqZWN0aW9uXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgICAgICBhYm9ydExpc3RlbmVyc0J5U2lnbmFsLnNldChzaWduYWwsIGxpc3RlbmVycyk7XG4gICAgICAgICAgICAgICAgc2lnbmFsLmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgKCk9PntcbiAgICAgICAgICAgICAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lcnNbaV0oKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgb25jZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gV2UgYXJlIGZpbmUgaWYgbm8gb25lIGFjdHVhbGx5IGF3YWl0cyB0aGlzIHByb21pc2UuIFdlIHNob3VsZG4ndCBjb25zaWRlciB0aGlzIGFuIHVuaGFuZGxlZCByZWplY3Rpb24gc29cbiAgICAgICAgLy8gd2UgYXR0YWNoIGEgbm9vcCBjYXRjaCBoYW5kbGVyIGhlcmUgdG8gc3VwcHJlc3MgdGhpcyB3YXJuaW5nLiBJZiB5b3UgYWN0dWFsbHkgYXdhaXQgc29tZXdoZXJlIG9yIGNvbnN0cnVjdFxuICAgICAgICAvLyB5b3VyIG93biBwcm9taXNlIG91dCBvZiBpdCB5b3UnbGwgbmVlZCB0byBlbnN1cmUgeW91IGhhbmRsZSB0aGUgZXJyb3Igd2hlbiBpdCByZWplY3RzLlxuICAgICAgICBoYW5naW5nUHJvbWlzZS5jYXRjaChpZ25vcmVSZWplY3QpO1xuICAgICAgICByZXR1cm4gaGFuZ2luZ1Byb21pc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gaWdub3JlUmVqZWN0KCkge31cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHluYW1pYy1yZW5kZXJpbmctdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/request/cookies.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/server/request/cookies.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"cookies\", ({\n    enumerable: true,\n    get: function() {\n        return cookies;\n    }\n}));\nconst _requestcookies = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nconst _cookies = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ../app-render/work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nconst _dynamicrendering = __webpack_require__(/*! ../app-render/dynamic-rendering */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _dynamicrenderingutils = __webpack_require__(/*! ../dynamic-rendering-utils */ \"(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js\");\nconst _creatededupedbycallsiteservererrorlogger = __webpack_require__(/*! ../create-deduped-by-callsite-server-error-logger */ \"(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js\");\nconst _scheduler = __webpack_require__(/*! ../../lib/scheduler */ \"(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js\");\nconst _utils = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/next/dist/server/request/utils.js\");\nconst _invarianterror = __webpack_require__(/*! ../../shared/lib/invariant-error */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/invariant-error.js\");\nconst _reflect = __webpack_require__(/*! ../web/spec-extension/adapters/reflect */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nfunction cookies() {\n    const callingExpression = 'cookies';\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workStore) {\n        if (workUnitStore && workUnitStore.phase === 'after' && !(0, _utils.isRequestAPICallableInsideAfter)()) {\n            throw Object.defineProperty(new Error(\"Route \".concat(workStore.route, ' used \"cookies\" inside \"after(...)\". This is not supported. If you need this data inside an \"after\" callback, use \"cookies\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after')), \"__NEXT_ERROR_CODE\", {\n                value: \"E88\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workStore.forceStatic) {\n            // When using forceStatic we override all other logic and always just return an empty\n            // cookies object without tracking\n            const underlyingCookies = createEmptyCookies();\n            return makeUntrackedExoticCookies(underlyingCookies);\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(\"Route \".concat(workStore.route, ' used \"cookies\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache')), \"__NEXT_ERROR_CODE\", {\n                    value: \"E398\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(\"Route \".concat(workStore.route, ' used \"cookies\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"cookies\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache')), \"__NEXT_ERROR_CODE\", {\n                    value: \"E157\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (workStore.dynamicShouldError) {\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(\"Route \".concat(workStore.route, ' with `dynamic = \"error\"` couldn\\'t be rendered statically because it used `cookies`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering')), \"__NEXT_ERROR_CODE\", {\n                value: \"E549\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            switch(workUnitStore.type){\n                case 'prerender':\n                    return makeHangingCookies(workUnitStore);\n                case 'prerender-client':\n                    const exportName = '`cookies`';\n                    throw Object.defineProperty(new _invarianterror.InvariantError(\"\".concat(exportName, \" must not be used within a client component. Next.js should be preventing \").concat(exportName, \" from being included in client components statically, but did not in this case.\")), \"__NEXT_ERROR_CODE\", {\n                        value: \"E693\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                case 'prerender-ppr':\n                    // PPR Prerender (no dynamicIO)\n                    // We are prerendering with PPR. We need track dynamic access here eagerly\n                    // to keep continuity with how cookies has worked in PPR without dynamicIO.\n                    (0, _dynamicrendering.postponeWithTracking)(workStore.route, callingExpression, workUnitStore.dynamicTracking);\n                    break;\n                case 'prerender-legacy':\n                    // Legacy Prerender\n                    // We track dynamic access here so we don't need to wrap the cookies in\n                    // individual property access tracking.\n                    (0, _dynamicrendering.throwToInterruptStaticGeneration)(callingExpression, workStore, workUnitStore);\n                    break;\n                default:\n            }\n        }\n        // We fall through to the dynamic context below but we still track dynamic access\n        // because in dev we can still error for things like using cookies inside a cache context\n        (0, _dynamicrendering.trackDynamicDataInDynamicRender)(workStore, workUnitStore);\n    }\n    // cookies is being called in a dynamic context\n    const requestStore = (0, _workunitasyncstorageexternal.getExpectedRequestStore)(callingExpression);\n    let underlyingCookies;\n    if ((0, _requestcookies.areCookiesMutableInCurrentPhase)(requestStore)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        underlyingCookies = requestStore.userspaceMutableCookies;\n    } else {\n        underlyingCookies = requestStore.cookies;\n    }\n    if ( true && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        if (false) {}\n        return makeUntrackedExoticCookiesWithDevWarnings(underlyingCookies, workStore == null ? void 0 : workStore.route);\n    } else {\n        return makeUntrackedExoticCookies(underlyingCookies);\n    }\n}\nfunction createEmptyCookies() {\n    return _requestcookies.RequestCookiesAdapter.seal(new _cookies.RequestCookies(new Headers({})));\n}\nconst CachedCookies = new WeakMap();\nfunction makeHangingCookies(prerenderStore) {\n    const cachedPromise = CachedCookies.get(prerenderStore);\n    if (cachedPromise) {\n        return cachedPromise;\n    }\n    const promise = (0, _dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal, '`cookies()`');\n    CachedCookies.set(prerenderStore, promise);\n    return promise;\n}\nfunction makeUntrackedExoticCookies(underlyingCookies) {\n    const cachedCookies = CachedCookies.get(underlyingCookies);\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    const promise = Promise.resolve(underlyingCookies);\n    CachedCookies.set(underlyingCookies, promise);\n    Object.defineProperties(promise, {\n        [Symbol.iterator]: {\n            value: underlyingCookies[Symbol.iterator] ? underlyingCookies[Symbol.iterator].bind(underlyingCookies) : // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesIterator.bind(underlyingCookies)\n        },\n        size: {\n            get () {\n                return underlyingCookies.size;\n            }\n        },\n        get: {\n            value: underlyingCookies.get.bind(underlyingCookies)\n        },\n        getAll: {\n            value: underlyingCookies.getAll.bind(underlyingCookies)\n        },\n        has: {\n            value: underlyingCookies.has.bind(underlyingCookies)\n        },\n        set: {\n            value: underlyingCookies.set.bind(underlyingCookies)\n        },\n        delete: {\n            value: underlyingCookies.delete.bind(underlyingCookies)\n        },\n        clear: {\n            value: typeof underlyingCookies.clear === 'function' ? underlyingCookies.clear.bind(underlyingCookies) : // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n            // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n            // has extra properties not available on RequestCookie instances.\n            polyfilledResponseCookiesClear.bind(underlyingCookies, promise)\n        },\n        toString: {\n            value: underlyingCookies.toString.bind(underlyingCookies)\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticCookiesWithDevWarnings(underlyingCookies, route) {\n    const cachedCookies = CachedCookies.get(underlyingCookies);\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    const promise = new Promise((resolve)=>(0, _scheduler.scheduleImmediate)(()=>resolve(underlyingCookies)));\n    CachedCookies.set(underlyingCookies, promise);\n    Object.defineProperties(promise, {\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`...cookies()` or similar iteration';\n                syncIODev(route, expression);\n                return underlyingCookies[Symbol.iterator] ? underlyingCookies[Symbol.iterator].apply(underlyingCookies, arguments) : // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n                // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n                // has extra properties not available on RequestCookie instances.\n                polyfilledResponseCookiesIterator.call(underlyingCookies);\n            },\n            writable: false\n        },\n        size: {\n            get () {\n                const expression = '`cookies().size`';\n                syncIODev(route, expression);\n                return underlyingCookies.size;\n            }\n        },\n        get: {\n            value: function get() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().get()`';\n                } else {\n                    expression = \"`cookies().get(\".concat(describeNameArg(arguments[0]), \")`\");\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.get.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        getAll: {\n            value: function getAll() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().getAll()`';\n                } else {\n                    expression = \"`cookies().getAll(\".concat(describeNameArg(arguments[0]), \")`\");\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.getAll.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        has: {\n            value: function get() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().has()`';\n                } else {\n                    expression = \"`cookies().has(\".concat(describeNameArg(arguments[0]), \")`\");\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.has.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        set: {\n            value: function set() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().set()`';\n                } else {\n                    const arg = arguments[0];\n                    if (arg) {\n                        expression = \"`cookies().set(\".concat(describeNameArg(arg), \", ...)`\");\n                    } else {\n                        expression = '`cookies().set(...)`';\n                    }\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.set.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        delete: {\n            value: function() {\n                let expression;\n                if (arguments.length === 0) {\n                    expression = '`cookies().delete()`';\n                } else if (arguments.length === 1) {\n                    expression = \"`cookies().delete(\".concat(describeNameArg(arguments[0]), \")`\");\n                } else {\n                    expression = \"`cookies().delete(\".concat(describeNameArg(arguments[0]), \", ...)`\");\n                }\n                syncIODev(route, expression);\n                return underlyingCookies.delete.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        },\n        clear: {\n            value: function clear() {\n                const expression = '`cookies().clear()`';\n                syncIODev(route, expression);\n                // @ts-ignore clear is defined in RequestCookies implementation but not in the type\n                return typeof underlyingCookies.clear === 'function' ? underlyingCookies.clear.apply(underlyingCookies, arguments) : // but that's already a hard thing to debug so we may as well implement it consistently. The biggest problem with\n                // implementing this in this way is the underlying cookie type is a ResponseCookie and not a RequestCookie and so it\n                // has extra properties not available on RequestCookie instances.\n                polyfilledResponseCookiesClear.call(underlyingCookies, promise);\n            },\n            writable: false\n        },\n        toString: {\n            value: function toString() {\n                const expression = '`cookies().toString()` or implicit casting';\n                syncIODev(route, expression);\n                return underlyingCookies.toString.apply(underlyingCookies, arguments);\n            },\n            writable: false\n        }\n    });\n    return promise;\n}\n// Similar to `makeUntrackedExoticCookiesWithDevWarnings`, but just logging the\n// sync access without actually defining the cookies properties on the promise.\nfunction makeUntrackedCookiesWithDevWarnings(underlyingCookies, route) {\n    const cachedCookies = CachedCookies.get(underlyingCookies);\n    if (cachedCookies) {\n        return cachedCookies;\n    }\n    const promise = new Promise((resolve)=>(0, _scheduler.scheduleImmediate)(()=>resolve(underlyingCookies)));\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case Symbol.iterator:\n                    {\n                        warnForSyncAccess(route, '`...cookies()` or similar iteration');\n                        break;\n                    }\n                case 'size':\n                case 'get':\n                case 'getAll':\n                case 'has':\n                case 'set':\n                case 'delete':\n                case 'clear':\n                case 'toString':\n                    {\n                        warnForSyncAccess(route, \"`cookies().\".concat(prop, \"`\"));\n                        break;\n                    }\n                default:\n                    {\n                    // We only warn for well-defined properties of the cookies object.\n                    }\n            }\n            return _reflect.ReflectAdapter.get(target, prop, receiver);\n        }\n    });\n    CachedCookies.set(underlyingCookies, proxiedPromise);\n    return proxiedPromise;\n}\nfunction describeNameArg(arg) {\n    return typeof arg === 'object' && arg !== null && typeof arg.name === 'string' ? \"'\".concat(arg.name, \"'\") : typeof arg === 'string' ? \"'\".concat(arg, \"'\") : '...';\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        (0, _dynamicrendering.trackSynchronousRequestDataAccessInDev)(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createCookiesAccessError);\nfunction createCookiesAccessError(route, expression) {\n    const prefix = route ? 'Route \"'.concat(route, '\" ') : 'This route ';\n    return Object.defineProperty(new Error(\"\".concat(prefix, \"used \").concat(expression, \". \") + \"`cookies()` should be awaited before using its value. \" + \"Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis\"), \"__NEXT_ERROR_CODE\", {\n        value: \"E223\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction polyfilledResponseCookiesIterator() {\n    return this.getAll().map((c)=>[\n            c.name,\n            c\n        ]).values();\n}\nfunction polyfilledResponseCookiesClear(returnable) {\n    for (const cookie of this.getAll()){\n        this.delete(cookie.name);\n    }\n    return returnable;\n} //# sourceMappingURL=cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/request/cookies.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/request/draft-mode.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/server/request/draft-mode.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"draftMode\", ({\n    enumerable: true,\n    get: function() {\n        return draftMode;\n    }\n}));\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ../app-render/work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _dynamicrendering = __webpack_require__(/*! ../app-render/dynamic-rendering */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js\");\nconst _creatededupedbycallsiteservererrorlogger = __webpack_require__(/*! ../create-deduped-by-callsite-server-error-logger */ \"(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _hooksservercontext = __webpack_require__(/*! ../../client/components/hooks-server-context */ \"(app-pages-browser)/./node_modules/next/dist/client/components/hooks-server-context.js\");\nconst _invarianterror = __webpack_require__(/*! ../../shared/lib/invariant-error */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/invariant-error.js\");\nconst _reflect = __webpack_require__(/*! ../web/spec-extension/adapters/reflect */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nfunction draftMode() {\n    const callingExpression = 'draftMode';\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (!workStore || !workUnitStore) {\n        (0, _workunitasyncstorageexternal.throwForMissingRequestStore)(callingExpression);\n    }\n    switch(workUnitStore.type){\n        case 'request':\n            return createOrGetCachedDraftMode(workUnitStore.draftMode, workStore);\n        case 'cache':\n        case 'unstable-cache':\n            // Inside of `\"use cache\"` or `unstable_cache`, draft mode is available if\n            // the outmost work unit store is a request store, and if draft mode is\n            // enabled.\n            const draftModeProvider = (0, _workunitasyncstorageexternal.getDraftModeProviderForCacheScope)(workStore, workUnitStore);\n            if (draftModeProvider) {\n                return createOrGetCachedDraftMode(draftModeProvider, workStore);\n            }\n        // Otherwise, we fall through to providing an empty draft mode.\n        // eslint-disable-next-line no-fallthrough\n        case 'prerender':\n        case 'prerender-client':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // Return empty draft mode\n            return createOrGetCachedDraftMode(null, workStore);\n        default:\n            const _exhaustiveCheck = workUnitStore;\n            return _exhaustiveCheck;\n    }\n}\nfunction createOrGetCachedDraftMode(draftModeProvider, workStore) {\n    const cacheKey = draftModeProvider !== null && draftModeProvider !== void 0 ? draftModeProvider : NullDraftMode;\n    const cachedDraftMode = CachedDraftModes.get(cacheKey);\n    if (cachedDraftMode) {\n        return cachedDraftMode;\n    }\n    let promise;\n    if ( true && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        const route = workStore == null ? void 0 : workStore.route;\n        if (false) {}\n        promise = createExoticDraftModeWithDevWarnings(draftModeProvider, route);\n    } else {\n        if (false) {}\n        promise = createExoticDraftMode(draftModeProvider);\n    }\n    CachedDraftModes.set(cacheKey, promise);\n    return promise;\n}\nconst NullDraftMode = {};\nconst CachedDraftModes = new WeakMap();\nfunction createExoticDraftMode(underlyingProvider) {\n    const instance = new DraftMode(underlyingProvider);\n    const promise = Promise.resolve(instance);\n    Object.defineProperty(promise, 'isEnabled', {\n        get () {\n            return instance.isEnabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    promise.enable = instance.enable.bind(instance);\n    promise.disable = instance.disable.bind(instance);\n    return promise;\n}\nfunction createExoticDraftModeWithDevWarnings(underlyingProvider, route) {\n    const instance = new DraftMode(underlyingProvider);\n    const promise = Promise.resolve(instance);\n    Object.defineProperty(promise, 'isEnabled', {\n        get () {\n            const expression = '`draftMode().isEnabled`';\n            syncIODev(route, expression);\n            return instance.isEnabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(promise, 'enable', {\n        value: function get() {\n            const expression = '`draftMode().enable()`';\n            syncIODev(route, expression);\n            return instance.enable.apply(instance, arguments);\n        }\n    });\n    Object.defineProperty(promise, 'disable', {\n        value: function get() {\n            const expression = '`draftMode().disable()`';\n            syncIODev(route, expression);\n            return instance.disable.apply(instance, arguments);\n        }\n    });\n    return promise;\n}\n// Similar to `createExoticDraftModeWithDevWarnings`, but just logging the sync\n// access without actually defining the draftMode properties on the promise.\nfunction createDraftModeWithDevWarnings(underlyingProvider, route) {\n    const instance = new DraftMode(underlyingProvider);\n    const promise = Promise.resolve(instance);\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'isEnabled':\n                    warnForSyncAccess(route, \"`draftMode().\".concat(prop, \"`\"));\n                    break;\n                case 'enable':\n                case 'disable':\n                    {\n                        warnForSyncAccess(route, \"`draftMode().\".concat(prop, \"()`\"));\n                        break;\n                    }\n                default:\n                    {\n                    // We only warn for well-defined properties of the draftMode object.\n                    }\n            }\n            return _reflect.ReflectAdapter.get(target, prop, receiver);\n        }\n    });\n    return proxiedPromise;\n}\nclass DraftMode {\n    get isEnabled() {\n        if (this._provider !== null) {\n            return this._provider.isEnabled;\n        }\n        return false;\n    }\n    enable() {\n        // We have a store we want to track dynamic data access to ensure we\n        // don't statically generate routes that manipulate draft mode.\n        trackDynamicDraftMode('draftMode().enable()');\n        if (this._provider !== null) {\n            this._provider.enable();\n        }\n    }\n    disable() {\n        trackDynamicDraftMode('draftMode().disable()');\n        if (this._provider !== null) {\n            this._provider.disable();\n        }\n    }\n    constructor(provider){\n        this._provider = provider;\n    }\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        (0, _dynamicrendering.trackSynchronousRequestDataAccessInDev)(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createDraftModeAccessError);\nfunction createDraftModeAccessError(route, expression) {\n    const prefix = route ? 'Route \"'.concat(route, '\" ') : 'This route ';\n    return Object.defineProperty(new Error(\"\".concat(prefix, \"used \").concat(expression, \". \") + \"`draftMode()` should be awaited before using its value. \" + \"Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis\"), \"__NEXT_ERROR_CODE\", {\n        value: \"E377\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction trackDynamicDraftMode(expression) {\n    const store = _workasyncstorageexternal.workAsyncStorage.getStore();\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (store) {\n        // We have a store we want to track dynamic data access to ensure we\n        // don't statically generate routes that manipulate draft mode.\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(\"Route \".concat(store.route, ' used \"').concat(expression, '\" inside \"use cache\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache')), \"__NEXT_ERROR_CODE\", {\n                    value: \"E246\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(\"Route \".concat(store.route, ' used \"').concat(expression, '\" inside a function cached with \"unstable_cache(...)\". The enabled status of draftMode can be read in caches but you must not enable or disable draftMode inside a cache. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache')), \"__NEXT_ERROR_CODE\", {\n                    value: \"E259\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.phase === 'after') {\n                throw Object.defineProperty(new Error(\"Route \".concat(store.route, ' used \"').concat(expression, '\" inside `after`. The enabled status of draftMode can be read inside `after` but you cannot enable or disable draftMode. See more info here: https://nextjs.org/docs/app/api-reference/functions/after')), \"__NEXT_ERROR_CODE\", {\n                    value: \"E348\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (store.dynamicShouldError) {\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(\"Route \".concat(store.route, ' with `dynamic = \"error\"` couldn\\'t be rendered statically because it used `').concat(expression, \"`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\")), \"__NEXT_ERROR_CODE\", {\n                value: \"E553\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            switch(workUnitStore.type){\n                case 'prerender':\n                    // dynamicIO Prerender\n                    const error = Object.defineProperty(new Error(\"Route \".concat(store.route, \" used \").concat(expression, \" without first calling `await connection()`. See more info here: https://nextjs.org/docs/messages/next-prerender-sync-headers\")), \"__NEXT_ERROR_CODE\", {\n                        value: \"E126\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                    (0, _dynamicrendering.abortAndThrowOnSynchronousRequestDataAccess)(store.route, expression, error, workUnitStore);\n                    break;\n                case 'prerender-client':\n                    const exportName = '`draftMode`';\n                    throw Object.defineProperty(new _invarianterror.InvariantError(\"\".concat(exportName, \" must not be used within a client component. Next.js should be preventing \").concat(exportName, \" from being included in client components statically, but did not in this case.\")), \"__NEXT_ERROR_CODE\", {\n                        value: \"E693\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                case 'prerender-ppr':\n                    // PPR Prerender\n                    (0, _dynamicrendering.postponeWithTracking)(store.route, expression, workUnitStore.dynamicTracking);\n                    break;\n                case 'prerender-legacy':\n                    // legacy Prerender\n                    workUnitStore.revalidate = 0;\n                    const err = Object.defineProperty(new _hooksservercontext.DynamicServerError(\"Route \".concat(store.route, \" couldn't be rendered statically because it used `\").concat(expression, \"`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error\")), \"__NEXT_ERROR_CODE\", {\n                        value: \"E558\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                    store.dynamicUsageDescription = expression;\n                    store.dynamicUsageStack = err.stack;\n                    throw err;\n                case 'request':\n                    if (true) {\n                        workUnitStore.usedDynamic = true;\n                    }\n                    break;\n                default:\n            }\n        }\n    }\n} //# sourceMappingURL=draft-mode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/request/draft-mode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/request/headers.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/server/request/headers.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"headers\", ({\n    enumerable: true,\n    get: function() {\n        return headers;\n    }\n}));\nconst _headers = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ../app-render/work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nconst _dynamicrendering = __webpack_require__(/*! ../app-render/dynamic-rendering */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/dynamic-rendering.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _dynamicrenderingutils = __webpack_require__(/*! ../dynamic-rendering-utils */ \"(app-pages-browser)/./node_modules/next/dist/server/dynamic-rendering-utils.js\");\nconst _creatededupedbycallsiteservererrorlogger = __webpack_require__(/*! ../create-deduped-by-callsite-server-error-logger */ \"(app-pages-browser)/./node_modules/next/dist/server/create-deduped-by-callsite-server-error-logger.js\");\nconst _scheduler = __webpack_require__(/*! ../../lib/scheduler */ \"(app-pages-browser)/./node_modules/next/dist/lib/scheduler.js\");\nconst _utils = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./node_modules/next/dist/server/request/utils.js\");\nconst _invarianterror = __webpack_require__(/*! ../../shared/lib/invariant-error */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/invariant-error.js\");\nconst _reflect = __webpack_require__(/*! ../web/spec-extension/adapters/reflect */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nfunction headers() {\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workStore) {\n        if (workUnitStore && workUnitStore.phase === 'after' && !(0, _utils.isRequestAPICallableInsideAfter)()) {\n            throw Object.defineProperty(new Error(\"Route \".concat(workStore.route, ' used \"headers\" inside \"after(...)\". This is not supported. If you need this data inside an \"after\" callback, use \"headers\" outside of the callback. See more info here: https://nextjs.org/docs/canary/app/api-reference/functions/after')), \"__NEXT_ERROR_CODE\", {\n                value: \"E367\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workStore.forceStatic) {\n            // When using forceStatic we override all other logic and always just return an empty\n            // headers object without tracking\n            const underlyingHeaders = _headers.HeadersAdapter.seal(new Headers({}));\n            return makeUntrackedExoticHeaders(underlyingHeaders);\n        }\n        if (workUnitStore) {\n            if (workUnitStore.type === 'cache') {\n                throw Object.defineProperty(new Error(\"Route \".concat(workStore.route, ' used \"headers\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache')), \"__NEXT_ERROR_CODE\", {\n                    value: \"E304\",\n                    enumerable: false,\n                    configurable: true\n                });\n            } else if (workUnitStore.type === 'unstable-cache') {\n                throw Object.defineProperty(new Error(\"Route \".concat(workStore.route, ' used \"headers\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache')), \"__NEXT_ERROR_CODE\", {\n                    value: \"E127\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        }\n        if (workStore.dynamicShouldError) {\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(\"Route \".concat(workStore.route, ' with `dynamic = \"error\"` couldn\\'t be rendered statically because it used `headers`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering')), \"__NEXT_ERROR_CODE\", {\n                value: \"E525\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n        if (workUnitStore) {\n            switch(workUnitStore.type){\n                case 'prerender':\n                    return makeHangingHeaders(workUnitStore);\n                case 'prerender-client':\n                    const exportName = '`headers`';\n                    throw Object.defineProperty(new _invarianterror.InvariantError(\"\".concat(exportName, \" must not be used within a client component. Next.js should be preventing \").concat(exportName, \" from being included in client components statically, but did not in this case.\")), \"__NEXT_ERROR_CODE\", {\n                        value: \"E693\",\n                        enumerable: false,\n                        configurable: true\n                    });\n                case 'prerender-ppr':\n                    // PPR Prerender (no dynamicIO)\n                    // We are prerendering with PPR. We need track dynamic access here eagerly\n                    // to keep continuity with how headers has worked in PPR without dynamicIO.\n                    // TODO consider switching the semantic to throw on property access instead\n                    (0, _dynamicrendering.postponeWithTracking)(workStore.route, 'headers', workUnitStore.dynamicTracking);\n                    break;\n                case 'prerender-legacy':\n                    // Legacy Prerender\n                    // We are in a legacy static generation mode while prerendering\n                    // We track dynamic access here so we don't need to wrap the headers in\n                    // individual property access tracking.\n                    (0, _dynamicrendering.throwToInterruptStaticGeneration)('headers', workStore, workUnitStore);\n                    break;\n                default:\n            }\n        }\n        // We fall through to the dynamic context below but we still track dynamic access\n        // because in dev we can still error for things like using headers inside a cache context\n        (0, _dynamicrendering.trackDynamicDataInDynamicRender)(workStore, workUnitStore);\n    }\n    const requestStore = (0, _workunitasyncstorageexternal.getExpectedRequestStore)('headers');\n    if ( true && !(workStore == null ? void 0 : workStore.isPrefetchRequest)) {\n        if (false) {}\n        return makeUntrackedExoticHeadersWithDevWarnings(requestStore.headers, workStore == null ? void 0 : workStore.route);\n    } else {\n        return makeUntrackedExoticHeaders(requestStore.headers);\n    }\n}\nconst CachedHeaders = new WeakMap();\nfunction makeHangingHeaders(prerenderStore) {\n    const cachedHeaders = CachedHeaders.get(prerenderStore);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = (0, _dynamicrenderingutils.makeHangingPromise)(prerenderStore.renderSignal, '`headers()`');\n    CachedHeaders.set(prerenderStore, promise);\n    return promise;\n}\nfunction makeUntrackedExoticHeaders(underlyingHeaders) {\n    const cachedHeaders = CachedHeaders.get(underlyingHeaders);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = Promise.resolve(underlyingHeaders);\n    CachedHeaders.set(underlyingHeaders, promise);\n    Object.defineProperties(promise, {\n        append: {\n            value: underlyingHeaders.append.bind(underlyingHeaders)\n        },\n        delete: {\n            value: underlyingHeaders.delete.bind(underlyingHeaders)\n        },\n        get: {\n            value: underlyingHeaders.get.bind(underlyingHeaders)\n        },\n        has: {\n            value: underlyingHeaders.has.bind(underlyingHeaders)\n        },\n        set: {\n            value: underlyingHeaders.set.bind(underlyingHeaders)\n        },\n        getSetCookie: {\n            value: underlyingHeaders.getSetCookie.bind(underlyingHeaders)\n        },\n        forEach: {\n            value: underlyingHeaders.forEach.bind(underlyingHeaders)\n        },\n        keys: {\n            value: underlyingHeaders.keys.bind(underlyingHeaders)\n        },\n        values: {\n            value: underlyingHeaders.values.bind(underlyingHeaders)\n        },\n        entries: {\n            value: underlyingHeaders.entries.bind(underlyingHeaders)\n        },\n        [Symbol.iterator]: {\n            value: underlyingHeaders[Symbol.iterator].bind(underlyingHeaders)\n        }\n    });\n    return promise;\n}\nfunction makeUntrackedExoticHeadersWithDevWarnings(underlyingHeaders, route) {\n    const cachedHeaders = CachedHeaders.get(underlyingHeaders);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = new Promise((resolve)=>(0, _scheduler.scheduleImmediate)(()=>resolve(underlyingHeaders)));\n    CachedHeaders.set(underlyingHeaders, promise);\n    Object.defineProperties(promise, {\n        append: {\n            value: function append() {\n                const expression = \"`headers().append(\".concat(describeNameArg(arguments[0]), \", ...)`\");\n                syncIODev(route, expression);\n                return underlyingHeaders.append.apply(underlyingHeaders, arguments);\n            }\n        },\n        delete: {\n            value: function _delete() {\n                const expression = \"`headers().delete(\".concat(describeNameArg(arguments[0]), \")`\");\n                syncIODev(route, expression);\n                return underlyingHeaders.delete.apply(underlyingHeaders, arguments);\n            }\n        },\n        get: {\n            value: function get() {\n                const expression = \"`headers().get(\".concat(describeNameArg(arguments[0]), \")`\");\n                syncIODev(route, expression);\n                return underlyingHeaders.get.apply(underlyingHeaders, arguments);\n            }\n        },\n        has: {\n            value: function has() {\n                const expression = \"`headers().has(\".concat(describeNameArg(arguments[0]), \")`\");\n                syncIODev(route, expression);\n                return underlyingHeaders.has.apply(underlyingHeaders, arguments);\n            }\n        },\n        set: {\n            value: function set() {\n                const expression = \"`headers().set(\".concat(describeNameArg(arguments[0]), \", ...)`\");\n                syncIODev(route, expression);\n                return underlyingHeaders.set.apply(underlyingHeaders, arguments);\n            }\n        },\n        getSetCookie: {\n            value: function getSetCookie() {\n                const expression = '`headers().getSetCookie()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.getSetCookie.apply(underlyingHeaders, arguments);\n            }\n        },\n        forEach: {\n            value: function forEach() {\n                const expression = '`headers().forEach(...)`';\n                syncIODev(route, expression);\n                return underlyingHeaders.forEach.apply(underlyingHeaders, arguments);\n            }\n        },\n        keys: {\n            value: function keys() {\n                const expression = '`headers().keys()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.keys.apply(underlyingHeaders, arguments);\n            }\n        },\n        values: {\n            value: function values() {\n                const expression = '`headers().values()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.values.apply(underlyingHeaders, arguments);\n            }\n        },\n        entries: {\n            value: function entries() {\n                const expression = '`headers().entries()`';\n                syncIODev(route, expression);\n                return underlyingHeaders.entries.apply(underlyingHeaders, arguments);\n            }\n        },\n        [Symbol.iterator]: {\n            value: function() {\n                const expression = '`...headers()` or similar iteration';\n                syncIODev(route, expression);\n                return underlyingHeaders[Symbol.iterator].apply(underlyingHeaders, arguments);\n            }\n        }\n    });\n    return promise;\n}\n// Similar to `makeUntrackedExoticHeadersWithDevWarnings`, but just logging the\n// sync access without actually defining the headers properties on the promise.\nfunction makeUntrackedHeadersWithDevWarnings(underlyingHeaders, route) {\n    const cachedHeaders = CachedHeaders.get(underlyingHeaders);\n    if (cachedHeaders) {\n        return cachedHeaders;\n    }\n    const promise = new Promise((resolve)=>(0, _scheduler.scheduleImmediate)(()=>resolve(underlyingHeaders)));\n    const proxiedPromise = new Proxy(promise, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case Symbol.iterator:\n                    {\n                        warnForSyncAccess(route, '`...headers()` or similar iteration');\n                        break;\n                    }\n                case 'append':\n                case 'delete':\n                case 'get':\n                case 'has':\n                case 'set':\n                case 'getSetCookie':\n                case 'forEach':\n                case 'keys':\n                case 'values':\n                case 'entries':\n                    {\n                        warnForSyncAccess(route, \"`headers().\".concat(prop, \"`\"));\n                        break;\n                    }\n                default:\n                    {\n                    // We only warn for well-defined properties of the headers object.\n                    }\n            }\n            return _reflect.ReflectAdapter.get(target, prop, receiver);\n        }\n    });\n    CachedHeaders.set(underlyingHeaders, proxiedPromise);\n    return proxiedPromise;\n}\nfunction describeNameArg(arg) {\n    return typeof arg === 'string' ? \"'\".concat(arg, \"'\") : '...';\n}\nfunction syncIODev(route, expression) {\n    const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (workUnitStore && workUnitStore.type === 'request' && workUnitStore.prerenderPhase === true) {\n        // When we're rendering dynamically in dev we need to advance out of the\n        // Prerender environment when we read Request data synchronously\n        const requestStore = workUnitStore;\n        (0, _dynamicrendering.trackSynchronousRequestDataAccessInDev)(requestStore);\n    }\n    // In all cases we warn normally\n    warnForSyncAccess(route, expression);\n}\nconst warnForSyncAccess = (0, _creatededupedbycallsiteservererrorlogger.createDedupedByCallsiteServerErrorLoggerDev)(createHeadersAccessError);\nfunction createHeadersAccessError(route, expression) {\n    const prefix = route ? 'Route \"'.concat(route, '\" ') : 'This route ';\n    return Object.defineProperty(new Error(\"\".concat(prefix, \"used \").concat(expression, \". \") + \"`headers()` should be awaited before using its value. \" + \"Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis\"), \"__NEXT_ERROR_CODE\", {\n        value: \"E277\",\n        enumerable: false,\n        configurable: true\n    });\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/request/headers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/request/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/server/request/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    isRequestAPICallableInsideAfter: function() {\n        return isRequestAPICallableInsideAfter;\n    },\n    throwForSearchParamsAccessInUseCache: function() {\n        return throwForSearchParamsAccessInUseCache;\n    },\n    throwWithStaticGenerationBailoutError: function() {\n        return throwWithStaticGenerationBailoutError;\n    },\n    throwWithStaticGenerationBailoutErrorWithDynamicError: function() {\n        return throwWithStaticGenerationBailoutErrorWithDynamicError;\n    }\n});\nconst _staticgenerationbailout = __webpack_require__(/*! ../../client/components/static-generation-bailout */ \"(app-pages-browser)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _aftertaskasyncstorageexternal = __webpack_require__(/*! ../app-render/after-task-async-storage.external */ \"(app-pages-browser)/./node_modules/next/dist/server/app-render/after-task-async-storage.external.js\");\nfunction throwWithStaticGenerationBailoutError(route, expression) {\n    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(\"Route \".concat(route, \" couldn't be rendered statically because it used \").concat(expression, \". See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\")), \"__NEXT_ERROR_CODE\", {\n        value: \"E576\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(\"Route \".concat(route, ' with `dynamic = \"error\"` couldn\\'t be rendered statically because it used ').concat(expression, \". See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\")), \"__NEXT_ERROR_CODE\", {\n        value: \"E543\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction throwForSearchParamsAccessInUseCache(workStore, constructorOpt) {\n    var _workStore;\n    const error = Object.defineProperty(new Error(\"Route \".concat(workStore.route, ' used \"searchParams\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"searchParams\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache')), \"__NEXT_ERROR_CODE\", {\n        value: \"E634\",\n        enumerable: false,\n        configurable: true\n    });\n    Error.captureStackTrace(error, constructorOpt);\n    var _invalidDynamicUsageError;\n    (_invalidDynamicUsageError = (_workStore = workStore).invalidDynamicUsageError) !== null && _invalidDynamicUsageError !== void 0 ? _invalidDynamicUsageError : _workStore.invalidDynamicUsageError = error;\n    throw error;\n}\nfunction isRequestAPICallableInsideAfter() {\n    const afterTaskStore = _aftertaskasyncstorageexternal.afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3JlcXVlc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBb0NnQkEsK0JBQStCO2VBQS9CQTs7SUFkQUMsb0NBQW9DO2VBQXBDQTs7SUFsQkFDLHFDQUFxQztlQUFyQ0E7O0lBU0FDLHFEQUFxRDtlQUFyREE7OztxREFic0I7MkRBQ0E7QUFHL0IsU0FBU0Qsc0NBQ2RFLEtBQWEsRUFDYkMsVUFBa0I7SUFFbEIsTUFBTSxxQkFFTCxDQUZLLElBQUlDLHlCQUFBQSxxQkFBcUIsQ0FDN0IsTUFBTyxVQUFFRixPQUFNLGlEQUFpRCxXQUFFQyxZQUFXLDBIQUEwSCxDQUFDLEtBRHBNO2VBQUE7b0JBQUE7c0JBQUE7SUFFTjtBQUNGO0FBRU8sU0FBU0Ysc0RBQ2RDLEtBQWEsRUFDYkMsVUFBa0I7SUFFbEIsTUFBTSxxQkFFTCxDQUZLLElBQUlDLHlCQUFBQSxxQkFBcUIsQ0FDN0IsTUFBTyxVQUFFRixPQUFNLDRFQUE0RSxVQUFFQyxZQUFXLDBIQUEwSCxDQUFDLEtBRC9OO2VBQUE7b0JBQUE7c0JBQUE7SUFFTjtBQUNGO0FBRU8sU0FBU0oscUNBQ2RNLFNBQW9CLEVBQ3BCQyxjQUF3QjtRQU94QkQ7SUFMQSxNQUFNRSxRQUFRLHFCQUViLENBRmEsSUFBSUMsTUFDZixNQUFNLFVBQUVILFVBQVVILEtBQUssRUFBQyxvVkFBb1YsQ0FBQyxLQURsVztlQUFBO29CQUFBO3NCQUFBO0lBRWQ7SUFFQU0sTUFBTUMsaUJBQWlCLENBQUNGLE9BQU9EOzs4S0FDckJJLHdCQUF3QixHQUFLSDtJQUV2QyxNQUFNQTtBQUNSO0FBRU8sU0FBU1Q7SUFDZCxNQUFNYSxpQkFBaUJDLCtCQUFBQSxxQkFBcUIsQ0FBQ0MsUUFBUTtJQUNyRCxPQUFPRixDQUFBQSxrQkFBQUEsT0FBQUEsS0FBQUEsSUFBQUEsZUFBZ0JHLGtCQUFBQSxNQUF1QjtBQUNoRCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxzcmNcXHNlcnZlclxccmVxdWVzdFxcdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RhdGljR2VuQmFpbG91dEVycm9yIH0gZnJvbSAnLi4vLi4vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dCdcbmltcG9ydCB7IGFmdGVyVGFza0FzeW5jU3RvcmFnZSB9IGZyb20gJy4uL2FwcC1yZW5kZXIvYWZ0ZXItdGFzay1hc3luYy1zdG9yYWdlLmV4dGVybmFsJ1xuaW1wb3J0IHR5cGUgeyBXb3JrU3RvcmUgfSBmcm9tICcuLi9hcHAtcmVuZGVyL3dvcmstYXN5bmMtc3RvcmFnZS5leHRlcm5hbCdcblxuZXhwb3J0IGZ1bmN0aW9uIHRocm93V2l0aFN0YXRpY0dlbmVyYXRpb25CYWlsb3V0RXJyb3IoXG4gIHJvdXRlOiBzdHJpbmcsXG4gIGV4cHJlc3Npb246IHN0cmluZ1xuKTogbmV2ZXIge1xuICB0aHJvdyBuZXcgU3RhdGljR2VuQmFpbG91dEVycm9yKFxuICAgIGBSb3V0ZSAke3JvdXRlfSBjb3VsZG4ndCBiZSByZW5kZXJlZCBzdGF0aWNhbGx5IGJlY2F1c2UgaXQgdXNlZCAke2V4cHJlc3Npb259LiBTZWUgbW9yZSBpbmZvIGhlcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3JlbmRlcmluZy9zdGF0aWMtYW5kLWR5bmFtaWMjZHluYW1pYy1yZW5kZXJpbmdgXG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRocm93V2l0aFN0YXRpY0dlbmVyYXRpb25CYWlsb3V0RXJyb3JXaXRoRHluYW1pY0Vycm9yKFxuICByb3V0ZTogc3RyaW5nLFxuICBleHByZXNzaW9uOiBzdHJpbmdcbik6IG5ldmVyIHtcbiAgdGhyb3cgbmV3IFN0YXRpY0dlbkJhaWxvdXRFcnJvcihcbiAgICBgUm91dGUgJHtyb3V0ZX0gd2l0aCBcXGBkeW5hbWljID0gXCJlcnJvclwiXFxgIGNvdWxkbid0IGJlIHJlbmRlcmVkIHN0YXRpY2FsbHkgYmVjYXVzZSBpdCB1c2VkICR7ZXhwcmVzc2lvbn0uIFNlZSBtb3JlIGluZm8gaGVyZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2J1aWxkaW5nLXlvdXItYXBwbGljYXRpb24vcmVuZGVyaW5nL3N0YXRpYy1hbmQtZHluYW1pYyNkeW5hbWljLXJlbmRlcmluZ2BcbiAgKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdGhyb3dGb3JTZWFyY2hQYXJhbXNBY2Nlc3NJblVzZUNhY2hlKFxuICB3b3JrU3RvcmU6IFdvcmtTdG9yZSxcbiAgY29uc3RydWN0b3JPcHQ6IEZ1bmN0aW9uXG4pOiBuZXZlciB7XG4gIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFxuICAgIGBSb3V0ZSAke3dvcmtTdG9yZS5yb3V0ZX0gdXNlZCBcInNlYXJjaFBhcmFtc1wiIGluc2lkZSBcInVzZSBjYWNoZVwiLiBBY2Nlc3NpbmcgRHluYW1pYyBkYXRhIHNvdXJjZXMgaW5zaWRlIGEgY2FjaGUgc2NvcGUgaXMgbm90IHN1cHBvcnRlZC4gSWYgeW91IG5lZWQgdGhpcyBkYXRhIGluc2lkZSBhIGNhY2hlZCBmdW5jdGlvbiB1c2UgXCJzZWFyY2hQYXJhbXNcIiBvdXRzaWRlIG9mIHRoZSBjYWNoZWQgZnVuY3Rpb24gYW5kIHBhc3MgdGhlIHJlcXVpcmVkIGR5bmFtaWMgZGF0YSBpbiBhcyBhbiBhcmd1bWVudC4gU2VlIG1vcmUgaW5mbyBoZXJlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LXJlcXVlc3QtaW4tdXNlLWNhY2hlYFxuICApXG5cbiAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UoZXJyb3IsIGNvbnN0cnVjdG9yT3B0KVxuICB3b3JrU3RvcmUuaW52YWxpZER5bmFtaWNVc2FnZUVycm9yID8/PSBlcnJvclxuXG4gIHRocm93IGVycm9yXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1JlcXVlc3RBUElDYWxsYWJsZUluc2lkZUFmdGVyKCkge1xuICBjb25zdCBhZnRlclRhc2tTdG9yZSA9IGFmdGVyVGFza0FzeW5jU3RvcmFnZS5nZXRTdG9yZSgpXG4gIHJldHVybiBhZnRlclRhc2tTdG9yZT8ucm9vdFRhc2tTcGF3blBoYXNlID09PSAnYWN0aW9uJ1xufVxuIl0sIm5hbWVzIjpbImlzUmVxdWVzdEFQSUNhbGxhYmxlSW5zaWRlQWZ0ZXIiLCJ0aHJvd0ZvclNlYXJjaFBhcmFtc0FjY2Vzc0luVXNlQ2FjaGUiLCJ0aHJvd1dpdGhTdGF0aWNHZW5lcmF0aW9uQmFpbG91dEVycm9yIiwidGhyb3dXaXRoU3RhdGljR2VuZXJhdGlvbkJhaWxvdXRFcnJvcldpdGhEeW5hbWljRXJyb3IiLCJyb3V0ZSIsImV4cHJlc3Npb24iLCJTdGF0aWNHZW5CYWlsb3V0RXJyb3IiLCJ3b3JrU3RvcmUiLCJjb25zdHJ1Y3Rvck9wdCIsImVycm9yIiwiRXJyb3IiLCJjYXB0dXJlU3RhY2tUcmFjZSIsImludmFsaWREeW5hbWljVXNhZ2VFcnJvciIsImFmdGVyVGFza1N0b3JlIiwiYWZ0ZXJUYXNrQXN5bmNTdG9yYWdlIiwiZ2V0U3RvcmUiLCJyb290VGFza1NwYXduUGhhc2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/request/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/headers.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    HeadersAdapter: function() {\n        return HeadersAdapter;\n    },\n    ReadonlyHeadersError: function() {\n        return ReadonlyHeadersError;\n    }\n});\nconst _reflect = __webpack_require__(/*! ./reflect */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nclass ReadonlyHeadersError extends Error {\n    constructor(){\n        super('Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers');\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === 'symbol') {\n                    return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === 'undefined') return;\n                // If the original casing exists, return the value.\n                return _reflect.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === 'symbol') {\n                    return _reflect.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === 'symbol') return _reflect.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === 'undefined') return false;\n                // If the original casing exists, return true.\n                return _reflect.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === 'symbol') return _reflect.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === 'undefined') return true;\n                // If the original casing exists, delete the property.\n                return _reflect.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'append':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(', ');\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === 'string') {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== 'undefined') return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== 'undefined';\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n}\n\n//# sourceMappingURL=headers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQUdMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGlCQUFpQixtQkFBTyxDQUFDLDZHQUFXO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcd2ViXFxzcGVjLWV4dGVuc2lvblxcYWRhcHRlcnNcXGhlYWRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBIZWFkZXJzQWRhcHRlcjogbnVsbCxcbiAgICBSZWFkb25seUhlYWRlcnNFcnJvcjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBIZWFkZXJzQWRhcHRlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBIZWFkZXJzQWRhcHRlcjtcbiAgICB9LFxuICAgIFJlYWRvbmx5SGVhZGVyc0Vycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFJlYWRvbmx5SGVhZGVyc0Vycm9yO1xuICAgIH1cbn0pO1xuY29uc3QgX3JlZmxlY3QgPSByZXF1aXJlKFwiLi9yZWZsZWN0XCIpO1xuY2xhc3MgUmVhZG9ubHlIZWFkZXJzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgc3VwZXIoJ0hlYWRlcnMgY2Fubm90IGJlIG1vZGlmaWVkLiBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9hcGktcmVmZXJlbmNlL2Z1bmN0aW9ucy9oZWFkZXJzJyk7XG4gICAgfVxuICAgIHN0YXRpYyBjYWxsYWJsZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlYWRvbmx5SGVhZGVyc0Vycm9yKCk7XG4gICAgfVxufVxuY2xhc3MgSGVhZGVyc0FkYXB0ZXIgZXh0ZW5kcyBIZWFkZXJzIHtcbiAgICBjb25zdHJ1Y3RvcihoZWFkZXJzKXtcbiAgICAgICAgLy8gV2UndmUgYWxyZWFkeSBvdmVycmlkZGVuIHRoZSBtZXRob2RzIHRoYXQgd291bGQgYmUgY2FsbGVkLCBzbyB3ZSdyZSBqdXN0XG4gICAgICAgIC8vIGNhbGxpbmcgdGhlIHN1cGVyIGNvbnN0cnVjdG9yIHRvIGVuc3VyZSB0aGF0IHRoZSBpbnN0YW5jZW9mIGNoZWNrIHdvcmtzLlxuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBuZXcgUHJveHkoaGVhZGVycywge1xuICAgICAgICAgICAgZ2V0ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSB7XG4gICAgICAgICAgICAgICAgLy8gQmVjYXVzZSB0aGlzIGlzIGp1c3QgYW4gb2JqZWN0LCB3ZSBleHBlY3QgdGhhdCBhbGwgXCJnZXRcIiBvcGVyYXRpb25zXG4gICAgICAgICAgICAgICAgLy8gYXJlIGZvciBwcm9wZXJ0aWVzLiBJZiBpdCdzIGEgXCJnZXRcIiBmb3IgYSBzeW1ib2wsIHdlJ2xsIGp1c3QgcmV0dXJuXG4gICAgICAgICAgICAgICAgLy8gdGhlIHN5bWJvbC5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHByb3AgPT09ICdzeW1ib2wnKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmbGVjdC5SZWZsZWN0QWRhcHRlci5nZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGxvd2VyY2FzZWQgPSBwcm9wLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgLy8gTGV0J3MgZmluZCB0aGUgb3JpZ2luYWwgY2FzaW5nIG9mIHRoZSBrZXkuIFRoaXMgYXNzdW1lcyB0aGF0IHRoZXJlIGlzXG4gICAgICAgICAgICAgICAgLy8gbm8gbWl4ZWQgY2FzZSBrZXlzIChlLmcuIFwiQ29udGVudC1UeXBlXCIgYW5kIFwiY29udGVudC10eXBlXCIpIGluIHRoZVxuICAgICAgICAgICAgICAgIC8vIGhlYWRlcnMgb2JqZWN0LlxuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsID0gT2JqZWN0LmtleXMoaGVhZGVycykuZmluZCgobyk9Pm8udG9Mb3dlckNhc2UoKSA9PT0gbG93ZXJjYXNlZCk7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBkb2Vzbid0IGV4aXN0LCByZXR1cm4gdW5kZWZpbmVkLlxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3JpZ2luYWwgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBleGlzdHMsIHJldHVybiB0aGUgdmFsdWUuXG4gICAgICAgICAgICAgICAgcmV0dXJuIF9yZWZsZWN0LlJlZmxlY3RBZGFwdGVyLmdldCh0YXJnZXQsIG9yaWdpbmFsLCByZWNlaXZlcik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2V0ICh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcikge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gJ3N5bWJvbCcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWZsZWN0LlJlZmxlY3RBZGFwdGVyLnNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGxvd2VyY2FzZWQgPSBwcm9wLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgLy8gTGV0J3MgZmluZCB0aGUgb3JpZ2luYWwgY2FzaW5nIG9mIHRoZSBrZXkuIFRoaXMgYXNzdW1lcyB0aGF0IHRoZXJlIGlzXG4gICAgICAgICAgICAgICAgLy8gbm8gbWl4ZWQgY2FzZSBrZXlzIChlLmcuIFwiQ29udGVudC1UeXBlXCIgYW5kIFwiY29udGVudC10eXBlXCIpIGluIHRoZVxuICAgICAgICAgICAgICAgIC8vIGhlYWRlcnMgb2JqZWN0LlxuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsID0gT2JqZWN0LmtleXMoaGVhZGVycykuZmluZCgobyk9Pm8udG9Mb3dlckNhc2UoKSA9PT0gbG93ZXJjYXNlZCk7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBkb2Vzbid0IGV4aXN0LCB1c2UgdGhlIHByb3AgYXMgdGhlIGtleS5cbiAgICAgICAgICAgICAgICByZXR1cm4gX3JlZmxlY3QuUmVmbGVjdEFkYXB0ZXIuc2V0KHRhcmdldCwgb3JpZ2luYWwgPz8gcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoYXMgKHRhcmdldCwgcHJvcCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gJ3N5bWJvbCcpIHJldHVybiBfcmVmbGVjdC5SZWZsZWN0QWRhcHRlci5oYXModGFyZ2V0LCBwcm9wKTtcbiAgICAgICAgICAgICAgICBjb25zdCBsb3dlcmNhc2VkID0gcHJvcC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIC8vIExldCdzIGZpbmQgdGhlIG9yaWdpbmFsIGNhc2luZyBvZiB0aGUga2V5LiBUaGlzIGFzc3VtZXMgdGhhdCB0aGVyZSBpc1xuICAgICAgICAgICAgICAgIC8vIG5vIG1peGVkIGNhc2Uga2V5cyAoZS5nLiBcIkNvbnRlbnQtVHlwZVwiIGFuZCBcImNvbnRlbnQtdHlwZVwiKSBpbiB0aGVcbiAgICAgICAgICAgICAgICAvLyBoZWFkZXJzIG9iamVjdC5cbiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbCA9IE9iamVjdC5rZXlzKGhlYWRlcnMpLmZpbmQoKG8pPT5vLnRvTG93ZXJDYXNlKCkgPT09IGxvd2VyY2FzZWQpO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBvcmlnaW5hbCBjYXNpbmcgZG9lc24ndCBleGlzdCwgcmV0dXJuIGZhbHNlLlxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb3JpZ2luYWwgPT09ICd1bmRlZmluZWQnKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBleGlzdHMsIHJldHVybiB0cnVlLlxuICAgICAgICAgICAgICAgIHJldHVybiBfcmVmbGVjdC5SZWZsZWN0QWRhcHRlci5oYXModGFyZ2V0LCBvcmlnaW5hbCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVsZXRlUHJvcGVydHkgKHRhcmdldCwgcHJvcCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gJ3N5bWJvbCcpIHJldHVybiBfcmVmbGVjdC5SZWZsZWN0QWRhcHRlci5kZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvd2VyY2FzZWQgPSBwcm9wLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgLy8gTGV0J3MgZmluZCB0aGUgb3JpZ2luYWwgY2FzaW5nIG9mIHRoZSBrZXkuIFRoaXMgYXNzdW1lcyB0aGF0IHRoZXJlIGlzXG4gICAgICAgICAgICAgICAgLy8gbm8gbWl4ZWQgY2FzZSBrZXlzIChlLmcuIFwiQ29udGVudC1UeXBlXCIgYW5kIFwiY29udGVudC10eXBlXCIpIGluIHRoZVxuICAgICAgICAgICAgICAgIC8vIGhlYWRlcnMgb2JqZWN0LlxuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsID0gT2JqZWN0LmtleXMoaGVhZGVycykuZmluZCgobyk9Pm8udG9Mb3dlckNhc2UoKSA9PT0gbG93ZXJjYXNlZCk7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBkb2Vzbid0IGV4aXN0LCByZXR1cm4gdHJ1ZS5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9yaWdpbmFsID09PSAndW5kZWZpbmVkJykgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBleGlzdHMsIGRlbGV0ZSB0aGUgcHJvcGVydHkuXG4gICAgICAgICAgICAgICAgcmV0dXJuIF9yZWZsZWN0LlJlZmxlY3RBZGFwdGVyLmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgb3JpZ2luYWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAqIFNlYWxzIGEgSGVhZGVycyBpbnN0YW5jZSB0byBwcmV2ZW50IG1vZGlmaWNhdGlvbiBieSB0aHJvd2luZyBhbiBlcnJvciB3aGVuXG4gICAqIGFueSBtdXRhdGluZyBtZXRob2QgaXMgY2FsbGVkLlxuICAgKi8gc3RhdGljIHNlYWwoaGVhZGVycykge1xuICAgICAgICByZXR1cm4gbmV3IFByb3h5KGhlYWRlcnMsIHtcbiAgICAgICAgICAgIGdldCAodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgICAgICAgICAgIHN3aXRjaChwcm9wKXtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnYXBwZW5kJzpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnZGVsZXRlJzpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnc2V0JzpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFkb25seUhlYWRlcnNFcnJvci5jYWxsYWJsZTtcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmbGVjdC5SZWZsZWN0QWRhcHRlci5nZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAqIE1lcmdlcyBhIGhlYWRlciB2YWx1ZSBpbnRvIGEgc3RyaW5nLiBUaGlzIHN0b3JlcyBtdWx0aXBsZSB2YWx1ZXMgYXMgYW5cbiAgICogYXJyYXksIHNvIHdlIG5lZWQgdG8gbWVyZ2UgdGhlbSBpbnRvIGEgc3RyaW5nLlxuICAgKlxuICAgKiBAcGFyYW0gdmFsdWUgYSBoZWFkZXIgdmFsdWVcbiAgICogQHJldHVybnMgYSBtZXJnZWQgaGVhZGVyIHZhbHVlIChhIHN0cmluZylcbiAgICovIG1lcmdlKHZhbHVlKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkgcmV0dXJuIHZhbHVlLmpvaW4oJywgJyk7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAqIENyZWF0ZXMgYSBIZWFkZXJzIGluc3RhbmNlIGZyb20gYSBwbGFpbiBvYmplY3Qgb3IgYSBIZWFkZXJzIGluc3RhbmNlLlxuICAgKlxuICAgKiBAcGFyYW0gaGVhZGVycyBhIHBsYWluIG9iamVjdCBvciBhIEhlYWRlcnMgaW5zdGFuY2VcbiAgICogQHJldHVybnMgYSBoZWFkZXJzIGluc3RhbmNlXG4gICAqLyBzdGF0aWMgZnJvbShoZWFkZXJzKSB7XG4gICAgICAgIGlmIChoZWFkZXJzIGluc3RhbmNlb2YgSGVhZGVycykgcmV0dXJuIGhlYWRlcnM7XG4gICAgICAgIHJldHVybiBuZXcgSGVhZGVyc0FkYXB0ZXIoaGVhZGVycyk7XG4gICAgfVxuICAgIGFwcGVuZChuYW1lLCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBleGlzdGluZyA9IHRoaXMuaGVhZGVyc1tuYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiBleGlzdGluZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVyc1tuYW1lXSA9IFtcbiAgICAgICAgICAgICAgICBleGlzdGluZyxcbiAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGV4aXN0aW5nKSkge1xuICAgICAgICAgICAgZXhpc3RpbmcucHVzaCh2YWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmhlYWRlcnNbbmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICBkZWxldGUgdGhpcy5oZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgICBnZXQobmFtZSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuaGVhZGVyc1tuYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3VuZGVmaW5lZCcpIHJldHVybiB0aGlzLm1lcmdlKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGhhcyhuYW1lKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgdGhpcy5oZWFkZXJzW25hbWVdICE9PSAndW5kZWZpbmVkJztcbiAgICB9XG4gICAgc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuaGVhZGVyc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcpIHtcbiAgICAgICAgZm9yIChjb25zdCBbbmFtZSwgdmFsdWVdIG9mIHRoaXMuZW50cmllcygpKXtcbiAgICAgICAgICAgIGNhbGxiYWNrZm4uY2FsbCh0aGlzQXJnLCB2YWx1ZSwgbmFtZSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgKmVudHJpZXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVycykpe1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgLy8gV2UgYXNzZXJ0IGhlcmUgdGhhdCB0aGlzIGlzIGEgc3RyaW5nIGJlY2F1c2Ugd2UgZ290IGl0IGZyb20gdGhlXG4gICAgICAgICAgICAvLyBPYmplY3Qua2V5cygpIGNhbGwgYWJvdmUuXG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZ2V0KG5hbWUpO1xuICAgICAgICAgICAgeWllbGQgW1xuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICB9XG4gICAgKmtleXMoKSB7XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVycykpe1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IGtleS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgeWllbGQgbmFtZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAqdmFsdWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh0aGlzLmhlYWRlcnMpKXtcbiAgICAgICAgICAgIC8vIFdlIGFzc2VydCBoZXJlIHRoYXQgdGhpcyBpcyBhIHN0cmluZyBiZWNhdXNlIHdlIGdvdCBpdCBmcm9tIHRoZVxuICAgICAgICAgICAgLy8gT2JqZWN0LmtleXMoKSBjYWxsIGFib3ZlLlxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldChrZXkpO1xuICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMoKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"ReflectAdapter\", ({\n    enumerable: true,\n    get: function() {\n        return ReflectAdapter;\n    }\n}));\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0RBQWlEO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFx3ZWJcXHNwZWMtZXh0ZW5zaW9uXFxhZGFwdGVyc1xccmVmbGVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlZmxlY3RBZGFwdGVyXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlcjtcbiAgICB9XG59KTtcbmNsYXNzIFJlZmxlY3RBZGFwdGVyIHtcbiAgICBzdGF0aWMgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBSZWZsZWN0LmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmJpbmQodGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHN0YXRpYyBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgc3RhdGljIGhhcyh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuaGFzKHRhcmdldCwgcHJvcCk7XG4gICAgfVxuICAgIHN0YXRpYyBkZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZmxlY3QuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    MutableRequestCookiesAdapter: function() {\n        return MutableRequestCookiesAdapter;\n    },\n    ReadonlyRequestCookiesError: function() {\n        return ReadonlyRequestCookiesError;\n    },\n    RequestCookiesAdapter: function() {\n        return RequestCookiesAdapter;\n    },\n    appendMutableCookies: function() {\n        return appendMutableCookies;\n    },\n    areCookiesMutableInCurrentPhase: function() {\n        return areCookiesMutableInCurrentPhase;\n    },\n    getModifiedCookieValues: function() {\n        return getModifiedCookieValues;\n    },\n    responseCookiesToRequestCookies: function() {\n        return responseCookiesToRequestCookies;\n    },\n    wrapWithMutableAccessCheck: function() {\n        return wrapWithMutableAccessCheck;\n    }\n});\nconst _cookies = __webpack_require__(/*! ../cookies */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _reflect = __webpack_require__(/*! ./reflect */ \"(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nconst _workasyncstorageexternal = __webpack_require__(/*! ../../../app-render/work-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\");\nconst _workunitasyncstorageexternal = __webpack_require__(/*! ../../../app-render/work-unit-async-storage.external */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\");\nclass ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super('Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#options');\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case 'clear':\n                    case 'delete':\n                    case 'set':\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for('next.mutated.cookies');\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new _cookies.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookies = new _cookies.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookies.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            // TODO-APP: change method of getting workStore\n            const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n            if (workStore) {\n                workStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookies.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        const wrappedCookies = new Proxy(responseCookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case 'delete':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case 'set':\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === 'string' ? args[0] : args[0].name);\n                            try {\n                                target.set(...args);\n                                return wrappedCookies;\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n        return wrappedCookies;\n    }\n}\nfunction wrapWithMutableAccessCheck(responseCookies) {\n    const wrappedCookies = new Proxy(responseCookies, {\n        get (target, prop, receiver) {\n            switch(prop){\n                case 'delete':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().delete');\n                        target.delete(...args);\n                        return wrappedCookies;\n                    };\n                case 'set':\n                    return function(...args) {\n                        ensureCookiesAreStillMutable('cookies().set');\n                        target.set(...args);\n                        return wrappedCookies;\n                    };\n                default:\n                    return _reflect.ReflectAdapter.get(target, prop, receiver);\n            }\n        }\n    });\n    return wrappedCookies;\n}\nfunction areCookiesMutableInCurrentPhase(requestStore) {\n    return requestStore.phase === 'action';\n}\n/** Ensure that cookies() starts throwing on mutation\n * if we changed phases and can no longer mutate.\n *\n * This can happen when going:\n *   'render' -> 'after'\n *   'action' -> 'render'\n * */ function ensureCookiesAreStillMutable(callingExpression) {\n    const requestStore = (0, _workunitasyncstorageexternal.getExpectedRequestStore)(callingExpression);\n    if (!areCookiesMutableInCurrentPhase(requestStore)) {\n        // TODO: maybe we can give a more precise error message based on callingExpression?\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nfunction responseCookiesToRequestCookies(responseCookies) {\n    const requestCookies = new _cookies.RequestCookies(new Headers());\n    for (const cookie of responseCookies.getAll()){\n        requestCookies.set(cookie);\n    }\n    return requestCookies;\n}\n\n//# sourceMappingURL=request-cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/cookies.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/cookies.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RequestCookies: function() {\n        return _cookies.RequestCookies;\n    },\n    ResponseCookies: function() {\n        return _cookies.ResponseCookies;\n    },\n    stringifyCookie: function() {\n        return _cookies.stringifyCookie;\n    }\n});\nconst _cookies = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"(app-pages-browser)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\");\n\n//# sourceMappingURL=cookies.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsTUFBTSxDQUlMO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCLG1CQUFPLENBQUMsc0lBQTBDOztBQUVuRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcd2ViXFxzcGVjLWV4dGVuc2lvblxcY29va2llcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIFJlcXVlc3RDb29raWVzOiBudWxsLFxuICAgIFJlc3BvbnNlQ29va2llczogbnVsbCxcbiAgICBzdHJpbmdpZnlDb29raWU6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgUmVxdWVzdENvb2tpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2Nvb2tpZXMuUmVxdWVzdENvb2tpZXM7XG4gICAgfSxcbiAgICBSZXNwb25zZUNvb2tpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2Nvb2tpZXMuUmVzcG9uc2VDb29raWVzO1xuICAgIH0sXG4gICAgc3RyaW5naWZ5Q29va2llOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9jb29raWVzLnN0cmluZ2lmeUNvb2tpZTtcbiAgICB9XG59KTtcbmNvbnN0IF9jb29raWVzID0gcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9AZWRnZS1ydW50aW1lL2Nvb2tpZXNcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvb2tpZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/server/web/spec-extension/cookies.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/invariant-error.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/invariant-error.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"InvariantError\", ({\n    enumerable: true,\n    get: function() {\n        return InvariantError;\n    }\n}));\nclass InvariantError extends Error {\n    constructor(message, options){\n        super(\"Invariant: \" + (message.endsWith('.') ? message : message + '.') + \" This is a bug in Next.js.\", options);\n        this.name = 'InvariantError';\n    }\n} //# sourceMappingURL=invariant-error.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbnZhcmlhbnQtZXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7OztrREFBYUE7OztlQUFBQTs7O0FBQU4sTUFBTUEsdUJBQXVCQztJQUNsQ0MsWUFBWUMsT0FBZSxFQUFFQyxPQUFzQixDQUFFO1FBQ25ELEtBQUssQ0FDRixnQkFBYUQsQ0FBQUEsUUFBUUUsUUFBUSxDQUFDLE9BQU9GLFVBQVVBLFVBQVUsSUFBRSxHQUFFLDhCQUM5REM7UUFFRixJQUFJLENBQUNFLElBQUksR0FBRztJQUNkO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcc3JjXFxzaGFyZWRcXGxpYlxcaW52YXJpYW50LWVycm9yLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBJbnZhcmlhbnRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZTogc3RyaW5nLCBvcHRpb25zPzogRXJyb3JPcHRpb25zKSB7XG4gICAgc3VwZXIoXG4gICAgICBgSW52YXJpYW50OiAke21lc3NhZ2UuZW5kc1dpdGgoJy4nKSA/IG1lc3NhZ2UgOiBtZXNzYWdlICsgJy4nfSBUaGlzIGlzIGEgYnVnIGluIE5leHQuanMuYCxcbiAgICAgIG9wdGlvbnNcbiAgICApXG4gICAgdGhpcy5uYW1lID0gJ0ludmFyaWFudEVycm9yJ1xuICB9XG59XG4iXSwibmFtZXMiOlsiSW52YXJpYW50RXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsIm9wdGlvbnMiLCJlbmRzV2l0aCIsIm5hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/invariant-error.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/format-url.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    formatUrl: function() {\n        return formatUrl;\n    },\n    formatWithValidation: function() {\n        return formatWithValidation;\n    },\n    urlObjectKeys: function() {\n        return urlObjectKeys;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _querystring = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ./querystring */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\"));\nconst slashedProtocols = /https?|ftp|gopher|file/;\nfunction formatUrl(urlObj) {\n    let { auth, hostname } = urlObj;\n    let protocol = urlObj.protocol || '';\n    let pathname = urlObj.pathname || '';\n    let hash = urlObj.hash || '';\n    let query = urlObj.query || '';\n    let host = false;\n    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';\n    if (urlObj.host) {\n        host = auth + urlObj.host;\n    } else if (hostname) {\n        host = auth + (~hostname.indexOf(':') ? \"[\" + hostname + \"]\" : hostname);\n        if (urlObj.port) {\n            host += ':' + urlObj.port;\n        }\n    }\n    if (query && typeof query === 'object') {\n        query = String(_querystring.urlQueryToSearchParams(query));\n    }\n    let search = urlObj.search || query && \"?\" + query || '';\n    if (protocol && !protocol.endsWith(':')) protocol += ':';\n    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n        host = '//' + (host || '');\n        if (pathname && pathname[0] !== '/') pathname = '/' + pathname;\n    } else if (!host) {\n        host = '';\n    }\n    if (hash && hash[0] !== '#') hash = '#' + hash;\n    if (search && search[0] !== '?') search = '?' + search;\n    pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n    search = search.replace('#', '%23');\n    return \"\" + protocol + host + pathname + search + hash;\n}\nconst urlObjectKeys = [\n    'auth',\n    'hash',\n    'host',\n    'hostname',\n    'href',\n    'path',\n    'pathname',\n    'port',\n    'protocol',\n    'query',\n    'search',\n    'slashes'\n];\nfunction formatWithValidation(url) {\n    if (true) {\n        if (url !== null && typeof url === 'object') {\n            Object.keys(url).forEach((key)=>{\n                if (!urlObjectKeys.includes(key)) {\n                    console.warn(\"Unknown key passed via urlObject into url.format: \" + key);\n                }\n            });\n        }\n    }\n    return formatUrl(url);\n} //# sourceMappingURL=format-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBQSx1Q0FBdUM7QUFDdkMsc0RBQXNEO0FBQ3RELEVBQUU7QUFDRiwwRUFBMEU7QUFDMUUsZ0VBQWdFO0FBQ2hFLHNFQUFzRTtBQUN0RSxzRUFBc0U7QUFDdEUsNEVBQTRFO0FBQzVFLHFFQUFxRTtBQUNyRSx3QkFBd0I7QUFDeEIsRUFBRTtBQUNGLDBFQUEwRTtBQUMxRSx5REFBeUQ7QUFDekQsRUFBRTtBQUNGLDBFQUEwRTtBQUMxRSw2REFBNkQ7QUFDN0QsNEVBQTRFO0FBQzVFLDJFQUEyRTtBQUMzRSx3RUFBd0U7QUFDeEUsNEVBQTRFO0FBQzVFLHlDQUF5Qzs7Ozs7Ozs7Ozs7OztJQVF6QkEsU0FBUztlQUFUQTs7SUE2REFDLG9CQUFvQjtlQUFwQkE7O0lBZkhDLGFBQWE7ZUFBYkE7Ozs7bUZBbERnQjtBQUU3QixNQUFNQyxtQkFBbUI7QUFFbEIsU0FBU0gsVUFBVUksTUFBaUI7SUFDekMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRSxHQUFHRjtJQUN6QixJQUFJRyxXQUFXSCxPQUFPRyxRQUFRLElBQUk7SUFDbEMsSUFBSUMsV0FBV0osT0FBT0ksUUFBUSxJQUFJO0lBQ2xDLElBQUlDLE9BQU9MLE9BQU9LLElBQUksSUFBSTtJQUMxQixJQUFJQyxRQUFRTixPQUFPTSxLQUFLLElBQUk7SUFDNUIsSUFBSUMsT0FBdUI7SUFFM0JOLE9BQU9BLE9BQU9PLG1CQUFtQlAsTUFBTVEsT0FBTyxDQUFDLFFBQVEsT0FBTyxNQUFNO0lBRXBFLElBQUlULE9BQU9PLElBQUksRUFBRTtRQUNmQSxPQUFPTixPQUFPRCxPQUFPTyxJQUFJO0lBQzNCLE9BQU8sSUFBSUwsVUFBVTtRQUNuQkssT0FBT04sT0FBUSxFQUFDQyxTQUFTUSxPQUFPLENBQUMsT0FBUSxNQUFHUixXQUFTLE1BQUtBLFFBQUFBLENBQU87UUFDakUsSUFBSUYsT0FBT1csSUFBSSxFQUFFO1lBQ2ZKLFFBQVEsTUFBTVAsT0FBT1csSUFBSTtRQUMzQjtJQUNGO0lBRUEsSUFBSUwsU0FBUyxPQUFPQSxVQUFVLFVBQVU7UUFDdENBLFFBQVFNLE9BQU9DLGFBQVlDLHNCQUFzQixDQUFDUjtJQUNwRDtJQUVBLElBQUlTLFNBQVNmLE9BQU9lLE1BQU0sSUFBS1QsU0FBVSxNQUFHQSxTQUFZO0lBRXhELElBQUlILFlBQVksQ0FBQ0EsU0FBU2EsUUFBUSxDQUFDLE1BQU1iLFlBQVk7SUFFckQsSUFDRUgsT0FBT2lCLE9BQU8sSUFDWixFQUFDZCxZQUFZSixpQkFBaUJtQixJQUFJLENBQUNmLFNBQUFBLENBQVEsSUFBTUksU0FBUyxPQUM1RDtRQUNBQSxPQUFPLE9BQVFBLENBQUFBLFFBQVEsR0FBQztRQUN4QixJQUFJSCxZQUFZQSxRQUFRLENBQUMsRUFBRSxLQUFLLEtBQUtBLFdBQVcsTUFBTUE7SUFDeEQsT0FBTyxJQUFJLENBQUNHLE1BQU07UUFDaEJBLE9BQU87SUFDVDtJQUVBLElBQUlGLFFBQVFBLElBQUksQ0FBQyxFQUFFLEtBQUssS0FBS0EsT0FBTyxNQUFNQTtJQUMxQyxJQUFJVSxVQUFVQSxNQUFNLENBQUMsRUFBRSxLQUFLLEtBQUtBLFNBQVMsTUFBTUE7SUFFaERYLFdBQVdBLFNBQVNLLE9BQU8sQ0FBQyxTQUFTRDtJQUNyQ08sU0FBU0EsT0FBT04sT0FBTyxDQUFDLEtBQUs7SUFFN0IsT0FBUSxLQUFFTixXQUFXSSxPQUFPSCxXQUFXVyxTQUFTVjtBQUNsRDtBQUVPLE1BQU1QLGdCQUFnQjtJQUMzQjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVNLFNBQVNELHFCQUFxQnNCLEdBQWM7SUFDakQsSUFBSUMsSUFBb0IsRUFBb0I7UUFDMUMsSUFBSUQsUUFBUSxRQUFRLE9BQU9BLFFBQVEsVUFBVTtZQUMzQ0ksT0FBT0MsSUFBSSxDQUFDTCxLQUFLTSxPQUFPLENBQUMsQ0FBQ0M7Z0JBQ3hCLElBQUksQ0FBQzVCLGNBQWM2QixRQUFRLENBQUNELE1BQU07b0JBQ2hDRSxRQUFRQyxJQUFJLENBQ1QsdURBQW9ESDtnQkFFekQ7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPOUIsVUFBVXVCO0FBQ25CIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHNyY1xcc2hhcmVkXFxsaWJcXHJvdXRlclxcdXRpbHNcXGZvcm1hdC11cmwudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRm9ybWF0IGZ1bmN0aW9uIG1vZGlmaWVkIGZyb20gbm9kZWpzXG4vLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHR5cGUgeyBVcmxPYmplY3QgfSBmcm9tICd1cmwnXG5pbXBvcnQgdHlwZSB7IFBhcnNlZFVybFF1ZXJ5IH0gZnJvbSAncXVlcnlzdHJpbmcnXG5pbXBvcnQgKiBhcyBxdWVyeXN0cmluZyBmcm9tICcuL3F1ZXJ5c3RyaW5nJ1xuXG5jb25zdCBzbGFzaGVkUHJvdG9jb2xzID0gL2h0dHBzP3xmdHB8Z29waGVyfGZpbGUvXG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRVcmwodXJsT2JqOiBVcmxPYmplY3QpIHtcbiAgbGV0IHsgYXV0aCwgaG9zdG5hbWUgfSA9IHVybE9ialxuICBsZXQgcHJvdG9jb2wgPSB1cmxPYmoucHJvdG9jb2wgfHwgJydcbiAgbGV0IHBhdGhuYW1lID0gdXJsT2JqLnBhdGhuYW1lIHx8ICcnXG4gIGxldCBoYXNoID0gdXJsT2JqLmhhc2ggfHwgJydcbiAgbGV0IHF1ZXJ5ID0gdXJsT2JqLnF1ZXJ5IHx8ICcnXG4gIGxldCBob3N0OiBzdHJpbmcgfCBmYWxzZSA9IGZhbHNlXG5cbiAgYXV0aCA9IGF1dGggPyBlbmNvZGVVUklDb21wb25lbnQoYXV0aCkucmVwbGFjZSgvJTNBL2ksICc6JykgKyAnQCcgOiAnJ1xuXG4gIGlmICh1cmxPYmouaG9zdCkge1xuICAgIGhvc3QgPSBhdXRoICsgdXJsT2JqLmhvc3RcbiAgfSBlbHNlIGlmIChob3N0bmFtZSkge1xuICAgIGhvc3QgPSBhdXRoICsgKH5ob3N0bmFtZS5pbmRleE9mKCc6JykgPyBgWyR7aG9zdG5hbWV9XWAgOiBob3N0bmFtZSlcbiAgICBpZiAodXJsT2JqLnBvcnQpIHtcbiAgICAgIGhvc3QgKz0gJzonICsgdXJsT2JqLnBvcnRcbiAgICB9XG4gIH1cblxuICBpZiAocXVlcnkgJiYgdHlwZW9mIHF1ZXJ5ID09PSAnb2JqZWN0Jykge1xuICAgIHF1ZXJ5ID0gU3RyaW5nKHF1ZXJ5c3RyaW5nLnVybFF1ZXJ5VG9TZWFyY2hQYXJhbXMocXVlcnkgYXMgUGFyc2VkVXJsUXVlcnkpKVxuICB9XG5cbiAgbGV0IHNlYXJjaCA9IHVybE9iai5zZWFyY2ggfHwgKHF1ZXJ5ICYmIGA/JHtxdWVyeX1gKSB8fCAnJ1xuXG4gIGlmIChwcm90b2NvbCAmJiAhcHJvdG9jb2wuZW5kc1dpdGgoJzonKSkgcHJvdG9jb2wgKz0gJzonXG5cbiAgaWYgKFxuICAgIHVybE9iai5zbGFzaGVzIHx8XG4gICAgKCghcHJvdG9jb2wgfHwgc2xhc2hlZFByb3RvY29scy50ZXN0KHByb3RvY29sKSkgJiYgaG9zdCAhPT0gZmFsc2UpXG4gICkge1xuICAgIGhvc3QgPSAnLy8nICsgKGhvc3QgfHwgJycpXG4gICAgaWYgKHBhdGhuYW1lICYmIHBhdGhuYW1lWzBdICE9PSAnLycpIHBhdGhuYW1lID0gJy8nICsgcGF0aG5hbWVcbiAgfSBlbHNlIGlmICghaG9zdCkge1xuICAgIGhvc3QgPSAnJ1xuICB9XG5cbiAgaWYgKGhhc2ggJiYgaGFzaFswXSAhPT0gJyMnKSBoYXNoID0gJyMnICsgaGFzaFxuICBpZiAoc2VhcmNoICYmIHNlYXJjaFswXSAhPT0gJz8nKSBzZWFyY2ggPSAnPycgKyBzZWFyY2hcblxuICBwYXRobmFtZSA9IHBhdGhuYW1lLnJlcGxhY2UoL1s/I10vZywgZW5jb2RlVVJJQ29tcG9uZW50KVxuICBzZWFyY2ggPSBzZWFyY2gucmVwbGFjZSgnIycsICclMjMnKVxuXG4gIHJldHVybiBgJHtwcm90b2NvbH0ke2hvc3R9JHtwYXRobmFtZX0ke3NlYXJjaH0ke2hhc2h9YFxufVxuXG5leHBvcnQgY29uc3QgdXJsT2JqZWN0S2V5cyA9IFtcbiAgJ2F1dGgnLFxuICAnaGFzaCcsXG4gICdob3N0JyxcbiAgJ2hvc3RuYW1lJyxcbiAgJ2hyZWYnLFxuICAncGF0aCcsXG4gICdwYXRobmFtZScsXG4gICdwb3J0JyxcbiAgJ3Byb3RvY29sJyxcbiAgJ3F1ZXJ5JyxcbiAgJ3NlYXJjaCcsXG4gICdzbGFzaGVzJyxcbl1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdFdpdGhWYWxpZGF0aW9uKHVybDogVXJsT2JqZWN0KTogc3RyaW5nIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgaWYgKHVybCAhPT0gbnVsbCAmJiB0eXBlb2YgdXJsID09PSAnb2JqZWN0Jykge1xuICAgICAgT2JqZWN0LmtleXModXJsKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgaWYgKCF1cmxPYmplY3RLZXlzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgICBgVW5rbm93biBrZXkgcGFzc2VkIHZpYSB1cmxPYmplY3QgaW50byB1cmwuZm9ybWF0OiAke2tleX1gXG4gICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmb3JtYXRVcmwodXJsKVxufVxuIl0sIm5hbWVzIjpbImZvcm1hdFVybCIsImZvcm1hdFdpdGhWYWxpZGF0aW9uIiwidXJsT2JqZWN0S2V5cyIsInNsYXNoZWRQcm90b2NvbHMiLCJ1cmxPYmoiLCJhdXRoIiwiaG9zdG5hbWUiLCJwcm90b2NvbCIsInBhdGhuYW1lIiwiaGFzaCIsInF1ZXJ5IiwiaG9zdCIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJpbmRleE9mIiwicG9ydCIsIlN0cmluZyIsInF1ZXJ5c3RyaW5nIiwidXJsUXVlcnlUb1NlYXJjaFBhcmFtcyIsInNlYXJjaCIsImVuZHNXaXRoIiwic2xhc2hlcyIsInRlc3QiLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsImluY2x1ZGVzIiwiY29uc29sZSIsIndhcm4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/is-local-url.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isLocalURL\", ({\n    enumerable: true,\n    get: function() {\n        return isLocalURL;\n    }\n}));\nconst _utils = __webpack_require__(/*! ../../utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _hasbasepath = __webpack_require__(/*! ../../../../client/has-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/has-base-path.js\");\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (!(0, _utils.isAbsoluteUrl)(url)) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils.getLocationOrigin)();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n} //# sourceMappingURL=is-local-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtbG9jYWwtdXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OENBTWdCQTs7O2VBQUFBOzs7bUNBTmlDO3lDQUNyQjtBQUtyQixTQUFTQSxXQUFXQyxHQUFXO0lBQ3BDLGdFQUFnRTtJQUNoRSxJQUFJLENBQUNDLENBQUFBLEdBQUFBLE9BQUFBLGFBQUFBLEVBQWNELE1BQU0sT0FBTztJQUNoQyxJQUFJO1FBQ0YsNERBQTREO1FBQzVELE1BQU1FLGlCQUFpQkMsQ0FBQUEsR0FBQUEsT0FBQUEsaUJBQUFBO1FBQ3ZCLE1BQU1DLFdBQVcsSUFBSUMsSUFBSUwsS0FBS0U7UUFDOUIsT0FBT0UsU0FBU0UsTUFBTSxLQUFLSixrQkFBa0JLLENBQUFBLEdBQUFBLGFBQUFBLFdBQUFBLEVBQVlILFNBQVNJLFFBQVE7SUFDNUUsRUFBRSxPQUFPQyxHQUFHO1FBQ1YsT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc3JjXFxzaGFyZWRcXGxpYlxccm91dGVyXFx1dGlsc1xcaXMtbG9jYWwtdXJsLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQWJzb2x1dGVVcmwsIGdldExvY2F0aW9uT3JpZ2luIH0gZnJvbSAnLi4vLi4vdXRpbHMnXG5pbXBvcnQgeyBoYXNCYXNlUGF0aCB9IGZyb20gJy4uLy4uLy4uLy4uL2NsaWVudC9oYXMtYmFzZS1wYXRoJ1xuXG4vKipcbiAqIERldGVjdHMgd2hldGhlciBhIGdpdmVuIHVybCBpcyByb3V0YWJsZSBieSB0aGUgTmV4dC5qcyByb3V0ZXIgKGJyb3dzZXIgb25seSkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0xvY2FsVVJMKHVybDogc3RyaW5nKTogYm9vbGVhbiB7XG4gIC8vIHByZXZlbnQgYSBoeWRyYXRpb24gbWlzbWF0Y2ggb24gaHJlZiBmb3IgdXJsIHdpdGggYW5jaG9yIHJlZnNcbiAgaWYgKCFpc0Fic29sdXRlVXJsKHVybCkpIHJldHVybiB0cnVlXG4gIHRyeSB7XG4gICAgLy8gYWJzb2x1dGUgdXJscyBjYW4gYmUgbG9jYWwgaWYgdGhleSBhcmUgb24gdGhlIHNhbWUgb3JpZ2luXG4gICAgY29uc3QgbG9jYXRpb25PcmlnaW4gPSBnZXRMb2NhdGlvbk9yaWdpbigpXG4gICAgY29uc3QgcmVzb2x2ZWQgPSBuZXcgVVJMKHVybCwgbG9jYXRpb25PcmlnaW4pXG4gICAgcmV0dXJuIHJlc29sdmVkLm9yaWdpbiA9PT0gbG9jYXRpb25PcmlnaW4gJiYgaGFzQmFzZVBhdGgocmVzb2x2ZWQucGF0aG5hbWUpXG4gIH0gY2F0Y2ggKF8pIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuIl0sIm5hbWVzIjpbImlzTG9jYWxVUkwiLCJ1cmwiLCJpc0Fic29sdXRlVXJsIiwibG9jYXRpb25PcmlnaW4iLCJnZXRMb2NhdGlvbk9yaWdpbiIsInJlc29sdmVkIiwiVVJMIiwib3JpZ2luIiwiaGFzQmFzZVBhdGgiLCJwYXRobmFtZSIsIl8iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/querystring.js ***!
  \***********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    assign: function() {\n        return assign;\n    },\n    searchParamsToUrlQuery: function() {\n        return searchParamsToUrlQuery;\n    },\n    urlQueryToSearchParams: function() {\n        return urlQueryToSearchParams;\n    }\n});\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    for (const [key, value] of searchParams.entries()){\n        const existing = query[key];\n        if (typeof existing === 'undefined') {\n            query[key] = value;\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            query[key] = [\n                existing,\n                value\n            ];\n        }\n    }\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === 'string') {\n        return param;\n    }\n    if (typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {\n        return String(param);\n    } else {\n        return '';\n    }\n}\nfunction urlQueryToSearchParams(query) {\n    const searchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(query)){\n        if (Array.isArray(value)) {\n            for (const item of value){\n                searchParams.append(key, stringifyUrlQueryParam(item));\n            }\n        } else {\n            searchParams.set(key, stringifyUrlQueryParam(value));\n        }\n    }\n    return searchParams;\n}\nfunction assign(target) {\n    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        searchParamsList[_key - 1] = arguments[_key];\n    }\n    for (const searchParams of searchParamsList){\n        for (const key of searchParams.keys()){\n            target.delete(key);\n        }\n        for (const [key, value] of searchParams.entries()){\n            target.append(key, value);\n        }\n    }\n    return target;\n} //# sourceMappingURL=querystring.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBZ0RnQkEsTUFBTTtlQUFOQTs7SUE5Q0FDLHNCQUFzQjtlQUF0QkE7O0lBZ0NBQyxzQkFBc0I7ZUFBdEJBOzs7QUFoQ1QsU0FBU0QsdUJBQ2RFLFlBQTZCO0lBRTdCLE1BQU1DLFFBQXdCLENBQUM7SUFDL0IsS0FBSyxNQUFNLENBQUNDLEtBQUtDLE1BQU0sSUFBSUgsYUFBYUksT0FBTyxHQUFJO1FBQ2pELE1BQU1DLFdBQVdKLEtBQUssQ0FBQ0MsSUFBSTtRQUMzQixJQUFJLE9BQU9HLGFBQWEsYUFBYTtZQUNuQ0osS0FBSyxDQUFDQyxJQUFJLEdBQUdDO1FBQ2YsT0FBTyxJQUFJRyxNQUFNQyxPQUFPLENBQUNGLFdBQVc7WUFDbENBLFNBQVNHLElBQUksQ0FBQ0w7UUFDaEIsT0FBTztZQUNMRixLQUFLLENBQUNDLElBQUksR0FBRztnQkFBQ0c7Z0JBQVVGO2FBQU07UUFDaEM7SUFDRjtJQUNBLE9BQU9GO0FBQ1Q7QUFFQSxTQUFTUSx1QkFBdUJDLEtBQWM7SUFDNUMsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDN0IsT0FBT0E7SUFDVDtJQUVBLElBQ0csT0FBT0EsVUFBVSxZQUFZLENBQUNDLE1BQU1ELFVBQ3JDLE9BQU9BLFVBQVUsV0FDakI7UUFDQSxPQUFPRSxPQUFPRjtJQUNoQixPQUFPO1FBQ0wsT0FBTztJQUNUO0FBQ0Y7QUFFTyxTQUFTWCx1QkFBdUJFLEtBQXFCO0lBQzFELE1BQU1ELGVBQWUsSUFBSWE7SUFDekIsS0FBSyxNQUFNLENBQUNYLEtBQUtDLE1BQU0sSUFBSVcsT0FBT1YsT0FBTyxDQUFDSCxPQUFRO1FBQ2hELElBQUlLLE1BQU1DLE9BQU8sQ0FBQ0osUUFBUTtZQUN4QixLQUFLLE1BQU1ZLFFBQVFaLE1BQU87Z0JBQ3hCSCxhQUFhZ0IsTUFBTSxDQUFDZCxLQUFLTyx1QkFBdUJNO1lBQ2xEO1FBQ0YsT0FBTztZQUNMZixhQUFhaUIsR0FBRyxDQUFDZixLQUFLTyx1QkFBdUJOO1FBQy9DO0lBQ0Y7SUFDQSxPQUFPSDtBQUNUO0FBRU8sU0FBU0gsT0FDZHFCLE1BQXVCO0lBQ3ZCLGlDQUFHQyxtQkFBSDtRQUFHQSxnQkFBQUEsQ0FBSCwyQkFBc0M7O0lBRXRDLEtBQUssTUFBTW5CLGdCQUFnQm1CLGlCQUFrQjtRQUMzQyxLQUFLLE1BQU1qQixPQUFPRixhQUFhb0IsSUFBSSxHQUFJO1lBQ3JDRixPQUFPRyxNQUFNLENBQUNuQjtRQUNoQjtRQUVBLEtBQUssTUFBTSxDQUFDQSxLQUFLQyxNQUFNLElBQUlILGFBQWFJLE9BQU8sR0FBSTtZQUNqRGMsT0FBT0YsTUFBTSxDQUFDZCxLQUFLQztRQUNyQjtJQUNGO0lBRUEsT0FBT2U7QUFDVCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxzcmNcXHNoYXJlZFxcbGliXFxyb3V0ZXJcXHV0aWxzXFxxdWVyeXN0cmluZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFBhcnNlZFVybFF1ZXJ5IH0gZnJvbSAncXVlcnlzdHJpbmcnXG5cbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2hQYXJhbXNUb1VybFF1ZXJ5KFxuICBzZWFyY2hQYXJhbXM6IFVSTFNlYXJjaFBhcmFtc1xuKTogUGFyc2VkVXJsUXVlcnkge1xuICBjb25zdCBxdWVyeTogUGFyc2VkVXJsUXVlcnkgPSB7fVxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBzZWFyY2hQYXJhbXMuZW50cmllcygpKSB7XG4gICAgY29uc3QgZXhpc3RpbmcgPSBxdWVyeVtrZXldXG4gICAgaWYgKHR5cGVvZiBleGlzdGluZyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHF1ZXJ5W2tleV0gPSB2YWx1ZVxuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShleGlzdGluZykpIHtcbiAgICAgIGV4aXN0aW5nLnB1c2godmFsdWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIHF1ZXJ5W2tleV0gPSBbZXhpc3RpbmcsIHZhbHVlXVxuICAgIH1cbiAgfVxuICByZXR1cm4gcXVlcnlcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5VXJsUXVlcnlQYXJhbShwYXJhbTogdW5rbm93bik6IHN0cmluZyB7XG4gIGlmICh0eXBlb2YgcGFyYW0gPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHBhcmFtXG4gIH1cblxuICBpZiAoXG4gICAgKHR5cGVvZiBwYXJhbSA9PT0gJ251bWJlcicgJiYgIWlzTmFOKHBhcmFtKSkgfHxcbiAgICB0eXBlb2YgcGFyYW0gPT09ICdib29sZWFuJ1xuICApIHtcbiAgICByZXR1cm4gU3RyaW5nKHBhcmFtKVxuICB9IGVsc2Uge1xuICAgIHJldHVybiAnJ1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1cmxRdWVyeVRvU2VhcmNoUGFyYW1zKHF1ZXJ5OiBQYXJzZWRVcmxRdWVyeSk6IFVSTFNlYXJjaFBhcmFtcyB7XG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKVxuICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhxdWVyeSkpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICBzZWFyY2hQYXJhbXMuYXBwZW5kKGtleSwgc3RyaW5naWZ5VXJsUXVlcnlQYXJhbShpdGVtKSlcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc2VhcmNoUGFyYW1zLnNldChrZXksIHN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0odmFsdWUpKVxuICAgIH1cbiAgfVxuICByZXR1cm4gc2VhcmNoUGFyYW1zXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NpZ24oXG4gIHRhcmdldDogVVJMU2VhcmNoUGFyYW1zLFxuICAuLi5zZWFyY2hQYXJhbXNMaXN0OiBVUkxTZWFyY2hQYXJhbXNbXVxuKTogVVJMU2VhcmNoUGFyYW1zIHtcbiAgZm9yIChjb25zdCBzZWFyY2hQYXJhbXMgb2Ygc2VhcmNoUGFyYW1zTGlzdCkge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIHNlYXJjaFBhcmFtcy5rZXlzKCkpIHtcbiAgICAgIHRhcmdldC5kZWxldGUoa2V5KVxuICAgIH1cblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHNlYXJjaFBhcmFtcy5lbnRyaWVzKCkpIHtcbiAgICAgIHRhcmdldC5hcHBlbmQoa2V5LCB2YWx1ZSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0XG59XG4iXSwibmFtZXMiOlsiYXNzaWduIiwic2VhcmNoUGFyYW1zVG9VcmxRdWVyeSIsInVybFF1ZXJ5VG9TZWFyY2hQYXJhbXMiLCJzZWFyY2hQYXJhbXMiLCJxdWVyeSIsImtleSIsInZhbHVlIiwiZW50cmllcyIsImV4aXN0aW5nIiwiQXJyYXkiLCJpc0FycmF5IiwicHVzaCIsInN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0iLCJwYXJhbSIsImlzTmFOIiwiU3RyaW5nIiwiVVJMU2VhcmNoUGFyYW1zIiwiT2JqZWN0IiwiaXRlbSIsImFwcGVuZCIsInNldCIsInRhcmdldCIsInNlYXJjaFBhcmFtc0xpc3QiLCJrZXlzIiwiZGVsZXRlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/utils.js ***!
  \****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    DecodeError: function() {\n        return DecodeError;\n    },\n    MiddlewareNotFoundError: function() {\n        return MiddlewareNotFoundError;\n    },\n    MissingStaticPage: function() {\n        return MissingStaticPage;\n    },\n    NormalizeError: function() {\n        return NormalizeError;\n    },\n    PageNotFoundError: function() {\n        return PageNotFoundError;\n    },\n    SP: function() {\n        return SP;\n    },\n    ST: function() {\n        return ST;\n    },\n    WEB_VITALS: function() {\n        return WEB_VITALS;\n    },\n    execOnce: function() {\n        return execOnce;\n    },\n    getDisplayName: function() {\n        return getDisplayName;\n    },\n    getLocationOrigin: function() {\n        return getLocationOrigin;\n    },\n    getURL: function() {\n        return getURL;\n    },\n    isAbsoluteUrl: function() {\n        return isAbsoluteUrl;\n    },\n    isResSent: function() {\n        return isResSent;\n    },\n    loadGetInitialProps: function() {\n        return loadGetInitialProps;\n    },\n    normalizeRepeatedSlashes: function() {\n        return normalizeRepeatedSlashes;\n    },\n    stringifyError: function() {\n        return stringifyError;\n    }\n});\nconst WEB_VITALS = [\n    'CLS',\n    'FCP',\n    'FID',\n    'INP',\n    'LCP',\n    'TTFB'\n];\nfunction execOnce(fn) {\n    let used = false;\n    let result;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (!used) {\n            used = true;\n            result = fn(...args);\n        }\n        return result;\n    };\n}\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nconst isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return protocol + \"//\" + hostname + (port ? ':' + port : '');\n}\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nfunction getDisplayName(Component) {\n    return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';\n}\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nfunction normalizeRepeatedSlashes(url) {\n    const urlParts = url.split('?');\n    const urlNoQuery = urlParts[0];\n    return urlNoQuery // first we replace any non-encoded backslashes with forward\n    // then normalize repeated forward slashes\n    .replace(/\\\\/g, '/').replace(/\\/\\/+/g, '/') + (urlParts[1] ? \"?\" + urlParts.slice(1).join('?') : '');\n}\nasync function loadGetInitialProps(App, ctx) {\n    if (true) {\n        var _App_prototype;\n        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {\n            const message = '\"' + getDisplayName(App) + '.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';\n            throw Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n                value: \"E394\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || ctx.ctx && ctx.ctx.res;\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = '\"' + getDisplayName(App) + '.getInitialProps()\" should resolve to an object. But found \"' + props + '\" instead.';\n        throw Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n            value: \"E394\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (true) {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(\"\" + getDisplayName(App) + \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\");\n        }\n    }\n    return props;\n}\nconst SP = typeof performance !== 'undefined';\nconst ST = SP && [\n    'mark',\n    'measure',\n    'getEntriesByName'\n].every((method)=>typeof performance[method] === 'function');\nclass DecodeError extends Error {\n}\nclass NormalizeError extends Error {\n}\nclass PageNotFoundError extends Error {\n    constructor(page){\n        super();\n        this.code = 'ENOENT';\n        this.name = 'PageNotFoundError';\n        this.message = \"Cannot find module for page: \" + page;\n    }\n}\nclass MissingStaticPage extends Error {\n    constructor(page, message){\n        super();\n        this.message = \"Failed to load static file for page: \" + page + \" \" + message;\n    }\n}\nclass MiddlewareNotFoundError extends Error {\n    constructor(){\n        super();\n        this.code = 'ENOENT';\n        this.message = \"Cannot find the middleware module\";\n    }\n}\nfunction stringifyError(error) {\n    return JSON.stringify({\n        message: error.message,\n        stack: error.stack\n    });\n} //# sourceMappingURL=utils.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFvYWFBLFdBQVc7ZUFBWEE7O0lBb0JBQyx1QkFBdUI7ZUFBdkJBOztJQVBBQyxpQkFBaUI7ZUFBakJBOztJQVpBQyxjQUFjO2VBQWRBOztJQUNBQyxpQkFBaUI7ZUFBakJBOztJQVRBQyxFQUFFO2VBQUZBOztJQUNBQyxFQUFFO2VBQUZBOztJQWxYQUMsVUFBVTtlQUFWQTs7SUFzUUdDLFFBQVE7ZUFBUkE7O0lBK0JBQyxjQUFjO2VBQWRBOztJQVhBQyxpQkFBaUI7ZUFBakJBOztJQUtBQyxNQUFNO2VBQU5BOztJQVBIQyxhQUFhO2VBQWJBOztJQW1CR0MsU0FBUztlQUFUQTs7SUFrQk1DLG1CQUFtQjtlQUFuQkE7O0lBZE5DLHdCQUF3QjtlQUF4QkE7O0lBK0dBQyxjQUFjO2VBQWRBOzs7QUE5WlQsTUFBTVQsYUFBYTtJQUFDO0lBQU87SUFBTztJQUFPO0lBQU87SUFBTztDQUFPO0FBc1E5RCxTQUFTQyxTQUNkUyxFQUFLO0lBRUwsSUFBSUMsT0FBTztJQUNYLElBQUlDO0lBRUosT0FBUTt5Q0FBSUMsT0FBQUEsSUFBQUEsTUFBQUEsT0FBQUEsT0FBQUEsR0FBQUEsT0FBQUEsTUFBQUEsT0FBQUE7WUFBQUEsSUFBQUEsQ0FBQUEsS0FBQUEsR0FBQUEsU0FBQUEsQ0FBQUEsS0FBQUE7O1FBQ1YsSUFBSSxDQUFDRixNQUFNO1lBQ1RBLE9BQU87WUFDUEMsU0FBU0YsTUFBTUc7UUFDakI7UUFDQSxPQUFPRDtJQUNUO0FBQ0Y7QUFFQSwwREFBMEQ7QUFDMUQsZ0VBQWdFO0FBQ2hFLE1BQU1FLHFCQUFxQjtBQUNwQixNQUFNVCxnQkFBZ0IsQ0FBQ1UsTUFBZ0JELG1CQUFtQkUsSUFBSSxDQUFDRDtBQUUvRCxTQUFTWjtJQUNkLE1BQU0sRUFBRWMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLElBQUksRUFBRSxHQUFHQyxPQUFPQyxRQUFRO0lBQ3BELE9BQVVKLFdBQVMsT0FBSUMsV0FBV0MsQ0FBQUEsT0FBTyxNQUFNQSxPQUFPLEdBQUM7QUFDekQ7QUFFTyxTQUFTZjtJQUNkLE1BQU0sRUFBRWtCLElBQUksRUFBRSxHQUFHRixPQUFPQyxRQUFRO0lBQ2hDLE1BQU1FLFNBQVNwQjtJQUNmLE9BQU9tQixLQUFLRSxTQUFTLENBQUNELE9BQU9FLE1BQU07QUFDckM7QUFFTyxTQUFTdkIsZUFBa0J3QixTQUEyQjtJQUMzRCxPQUFPLE9BQU9BLGNBQWMsV0FDeEJBLFlBQ0FBLFVBQVVDLFdBQVcsSUFBSUQsVUFBVUUsSUFBSSxJQUFJO0FBQ2pEO0FBRU8sU0FBU3RCLFVBQVV1QixHQUFtQjtJQUMzQyxPQUFPQSxJQUFJQyxRQUFRLElBQUlELElBQUlFLFdBQVc7QUFDeEM7QUFFTyxTQUFTdkIseUJBQXlCTyxHQUFXO0lBQ2xELE1BQU1pQixXQUFXakIsSUFBSWtCLEtBQUssQ0FBQztJQUMzQixNQUFNQyxhQUFhRixRQUFRLENBQUMsRUFBRTtJQUU5QixPQUNFRSxXQUNFLDREQUE0RDtJQUM1RCwwQ0FBMEM7S0FDekNDLE9BQU8sQ0FBQyxPQUFPLEtBQ2ZBLE9BQU8sQ0FBQyxVQUFVLE9BQ3BCSCxDQUFBQSxRQUFRLENBQUMsRUFBRSxHQUFJLE1BQUdBLFNBQVNJLEtBQUssQ0FBQyxHQUFHQyxJQUFJLENBQUMsT0FBUyxHQUFDO0FBRXhEO0FBRU8sZUFBZTlCLG9CQUlwQitCLEdBQWdDLEVBQUVDLEdBQU07SUFDeEMsSUFBSUMsSUFBb0IsRUFBbUI7WUFDckNGO1FBQUosS0FBSUEsaUJBQUFBLElBQUlLLFNBQUFBLEtBQVMsZ0JBQWJMLGVBQWVNLGVBQWUsRUFBRTtZQUNsQyxNQUFNQyxVQUFXLE1BQUczQyxlQUNsQm9DLE9BQ0E7WUFDRixNQUFNLHFCQUFrQixDQUFsQixJQUFJUSxNQUFNRCxVQUFWO3VCQUFBOzRCQUFBOzhCQUFBO1lBQWlCO1FBQ3pCO0lBQ0Y7SUFDQSxpREFBaUQ7SUFDakQsTUFBTWhCLE1BQU1VLElBQUlWLEdBQUcsSUFBS1UsSUFBSUEsR0FBRyxJQUFJQSxJQUFJQSxHQUFHLENBQUNWLEdBQUc7SUFFOUMsSUFBSSxDQUFDUyxJQUFJTSxlQUFlLEVBQUU7UUFDeEIsSUFBSUwsSUFBSUEsR0FBRyxJQUFJQSxJQUFJYixTQUFTLEVBQUU7WUFDNUIsK0JBQStCO1lBQy9CLE9BQU87Z0JBQ0xxQixXQUFXLE1BQU14QyxvQkFBb0JnQyxJQUFJYixTQUFTLEVBQUVhLElBQUlBLEdBQUc7WUFDN0Q7UUFDRjtRQUNBLE9BQU8sQ0FBQztJQUNWO0lBRUEsTUFBTVMsUUFBUSxNQUFNVixJQUFJTSxlQUFlLENBQUNMO0lBRXhDLElBQUlWLE9BQU92QixVQUFVdUIsTUFBTTtRQUN6QixPQUFPbUI7SUFDVDtJQUVBLElBQUksQ0FBQ0EsT0FBTztRQUNWLE1BQU1ILFVBQVcsTUFBRzNDLGVBQ2xCb0MsT0FDQSxpRUFBOERVLFFBQU07UUFDdEUsTUFBTSxxQkFBa0IsQ0FBbEIsSUFBSUYsTUFBTUQsVUFBVjttQkFBQTt3QkFBQTswQkFBQTtRQUFpQjtJQUN6QjtJQUVBLElBQUlMLElBQW9CLEVBQW1CO1FBQ3pDLElBQUlTLE9BQU9DLElBQUksQ0FBQ0YsT0FBT3ZCLE1BQU0sS0FBSyxLQUFLLENBQUNjLElBQUlBLEdBQUcsRUFBRTtZQUMvQ1ksUUFBUUMsSUFBSSxDQUNULEtBQUVsRCxlQUNEb0MsT0FDQTtRQUVOO0lBQ0Y7SUFFQSxPQUFPVTtBQUNUO0FBRU8sTUFBTWxELEtBQUssT0FBT3VELGdCQUFnQjtBQUNsQyxNQUFNdEQsS0FDWEQsTUFDQztJQUFDO0lBQVE7SUFBVztDQUFtQixDQUFXd0QsS0FBSyxDQUN0RCxDQUFDQyxTQUFXLE9BQU9GLFdBQVcsQ0FBQ0UsT0FBTyxLQUFLO0FBR3hDLE1BQU05RCxvQkFBb0JxRDtBQUFPO0FBQ2pDLE1BQU1sRCx1QkFBdUJrRDtBQUFPO0FBQ3BDLE1BQU1qRCwwQkFBMEJpRDtJQUdyQ1UsWUFBWUMsSUFBWSxDQUFFO1FBQ3hCLEtBQUs7UUFDTCxJQUFJLENBQUNDLElBQUksR0FBRztRQUNaLElBQUksQ0FBQzlCLElBQUksR0FBRztRQUNaLElBQUksQ0FBQ2lCLE9BQU8sR0FBSSxrQ0FBK0JZO0lBQ2pEO0FBQ0Y7QUFFTyxNQUFNOUQsMEJBQTBCbUQ7SUFDckNVLFlBQVlDLElBQVksRUFBRVosT0FBZSxDQUFFO1FBQ3pDLEtBQUs7UUFDTCxJQUFJLENBQUNBLE9BQU8sR0FBSSwwQ0FBdUNZLE9BQUssTUFBR1o7SUFDakU7QUFDRjtBQUVPLE1BQU1uRCxnQ0FBZ0NvRDtJQUUzQ1UsYUFBYztRQUNaLEtBQUs7UUFDTCxJQUFJLENBQUNFLElBQUksR0FBRztRQUNaLElBQUksQ0FBQ2IsT0FBTyxHQUFJO0lBQ2xCO0FBQ0Y7QUFXTyxTQUFTcEMsZUFBZWtELEtBQVk7SUFDekMsT0FBT0MsS0FBS0MsU0FBUyxDQUFDO1FBQUVoQixTQUFTYyxNQUFNZCxPQUFPO1FBQUVpQixPQUFPSCxNQUFNRyxLQUFLO0lBQUM7QUFDckUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcc3JjXFxzaGFyZWRcXGxpYlxcdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBIdG1sUHJvcHMgfSBmcm9tICcuL2h0bWwtY29udGV4dC5zaGFyZWQtcnVudGltZSdcbmltcG9ydCB0eXBlIHsgQ29tcG9uZW50VHlwZSwgSlNYIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgdHlwZSB7IERvbWFpbkxvY2FsZSB9IGZyb20gJy4uLy4uL3NlcnZlci9jb25maWcnXG5pbXBvcnQgdHlwZSB7IEVudiB9IGZyb20gJ0BuZXh0L2VudidcbmltcG9ydCB0eXBlIHsgSW5jb21pbmdNZXNzYWdlLCBTZXJ2ZXJSZXNwb25zZSB9IGZyb20gJ2h0dHAnXG5pbXBvcnQgdHlwZSB7IE5leHRSb3V0ZXIgfSBmcm9tICcuL3JvdXRlci9yb3V0ZXInXG5pbXBvcnQgdHlwZSB7IFBhcnNlZFVybFF1ZXJ5IH0gZnJvbSAncXVlcnlzdHJpbmcnXG5pbXBvcnQgdHlwZSB7IFByZXZpZXdEYXRhIH0gZnJvbSAnLi4vLi4vdHlwZXMnXG5pbXBvcnQgdHlwZSB7IENPTVBJTEVSX05BTUVTIH0gZnJvbSAnLi9jb25zdGFudHMnXG5pbXBvcnQgdHlwZSBmcyBmcm9tICdmcydcblxuZXhwb3J0IHR5cGUgTmV4dENvbXBvbmVudFR5cGU8XG4gIENvbnRleHQgZXh0ZW5kcyBCYXNlQ29udGV4dCA9IE5leHRQYWdlQ29udGV4dCxcbiAgSW5pdGlhbFByb3BzID0ge30sXG4gIFByb3BzID0ge30sXG4+ID0gQ29tcG9uZW50VHlwZTxQcm9wcz4gJiB7XG4gIC8qKlxuICAgKiBVc2VkIGZvciBpbml0aWFsIHBhZ2UgbG9hZCBkYXRhIHBvcHVsYXRpb24uIERhdGEgcmV0dXJuZWQgZnJvbSBgZ2V0SW5pdGlhbFByb3BzYCBpcyBzZXJpYWxpemVkIHdoZW4gc2VydmVyIHJlbmRlcmVkLlxuICAgKiBNYWtlIHN1cmUgdG8gcmV0dXJuIHBsYWluIGBPYmplY3RgIHdpdGhvdXQgdXNpbmcgYERhdGVgLCBgTWFwYCwgYFNldGAuXG4gICAqIEBwYXJhbSBjb250ZXh0IENvbnRleHQgb2YgYHBhZ2VgXG4gICAqL1xuICBnZXRJbml0aWFsUHJvcHM/KGNvbnRleHQ6IENvbnRleHQpOiBJbml0aWFsUHJvcHMgfCBQcm9taXNlPEluaXRpYWxQcm9wcz5cbn1cblxuZXhwb3J0IHR5cGUgRG9jdW1lbnRUeXBlID0gTmV4dENvbXBvbmVudFR5cGU8XG4gIERvY3VtZW50Q29udGV4dCxcbiAgRG9jdW1lbnRJbml0aWFsUHJvcHMsXG4gIERvY3VtZW50UHJvcHNcbj5cblxuZXhwb3J0IHR5cGUgQXBwVHlwZTxQID0ge30+ID0gTmV4dENvbXBvbmVudFR5cGU8XG4gIEFwcENvbnRleHRUeXBlLFxuICBQLFxuICBBcHBQcm9wc1R5cGU8YW55LCBQPlxuPlxuXG5leHBvcnQgdHlwZSBBcHBUcmVlVHlwZSA9IENvbXBvbmVudFR5cGU8XG4gIEFwcEluaXRpYWxQcm9wcyAmIHsgW25hbWU6IHN0cmluZ106IGFueSB9XG4+XG5cbi8qKlxuICogV2ViIHZpdGFscyBwcm92aWRlZCB0byBfYXBwLnJlcG9ydFdlYlZpdGFscyBieSBDb3JlIFdlYiBWaXRhbHMgcGx1Z2luIGRldmVsb3BlZCBieSBHb29nbGUgQ2hyb21lIHRlYW0uXG4gKiBodHRwczovL25leHRqcy5vcmcvYmxvZy9uZXh0LTktNCNpbnRlZ3JhdGVkLXdlYi12aXRhbHMtcmVwb3J0aW5nXG4gKi9cbmV4cG9ydCBjb25zdCBXRUJfVklUQUxTID0gWydDTFMnLCAnRkNQJywgJ0ZJRCcsICdJTlAnLCAnTENQJywgJ1RURkInXSBhcyBjb25zdFxuZXhwb3J0IHR5cGUgTmV4dFdlYlZpdGFsc01ldHJpYyA9IHtcbiAgaWQ6IHN0cmluZ1xuICBzdGFydFRpbWU6IG51bWJlclxuICB2YWx1ZTogbnVtYmVyXG4gIGF0dHJpYnV0aW9uPzogeyBba2V5OiBzdHJpbmddOiB1bmtub3duIH1cbn0gJiAoXG4gIHwge1xuICAgICAgbGFiZWw6ICd3ZWItdml0YWwnXG4gICAgICBuYW1lOiAodHlwZW9mIFdFQl9WSVRBTFMpW251bWJlcl1cbiAgICB9XG4gIHwge1xuICAgICAgbGFiZWw6ICdjdXN0b20nXG4gICAgICBuYW1lOlxuICAgICAgICB8ICdOZXh0LmpzLWh5ZHJhdGlvbidcbiAgICAgICAgfCAnTmV4dC5qcy1yb3V0ZS1jaGFuZ2UtdG8tcmVuZGVyJ1xuICAgICAgICB8ICdOZXh0LmpzLXJlbmRlcidcbiAgICB9XG4pXG5cbmV4cG9ydCB0eXBlIEVuaGFuY2VyPEM+ID0gKENvbXBvbmVudDogQykgPT4gQ1xuXG5leHBvcnQgdHlwZSBDb21wb25lbnRzRW5oYW5jZXIgPVxuICB8IHtcbiAgICAgIGVuaGFuY2VBcHA/OiBFbmhhbmNlcjxBcHBUeXBlPlxuICAgICAgZW5oYW5jZUNvbXBvbmVudD86IEVuaGFuY2VyPE5leHRDb21wb25lbnRUeXBlPlxuICAgIH1cbiAgfCBFbmhhbmNlcjxOZXh0Q29tcG9uZW50VHlwZT5cblxuZXhwb3J0IHR5cGUgUmVuZGVyUGFnZVJlc3VsdCA9IHtcbiAgaHRtbDogc3RyaW5nXG4gIGhlYWQ/OiBBcnJheTxKU1guRWxlbWVudCB8IG51bGw+XG59XG5cbmV4cG9ydCB0eXBlIFJlbmRlclBhZ2UgPSAoXG4gIG9wdGlvbnM/OiBDb21wb25lbnRzRW5oYW5jZXJcbikgPT4gRG9jdW1lbnRJbml0aWFsUHJvcHMgfCBQcm9taXNlPERvY3VtZW50SW5pdGlhbFByb3BzPlxuXG5leHBvcnQgdHlwZSBCYXNlQ29udGV4dCA9IHtcbiAgcmVzPzogU2VydmVyUmVzcG9uc2VcbiAgW2s6IHN0cmluZ106IGFueVxufVxuXG5leHBvcnQgdHlwZSBORVhUX0RBVEEgPSB7XG4gIHByb3BzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+XG4gIHBhZ2U6IHN0cmluZ1xuICBxdWVyeTogUGFyc2VkVXJsUXVlcnlcbiAgYnVpbGRJZDogc3RyaW5nXG4gIGFzc2V0UHJlZml4Pzogc3RyaW5nXG4gIHJ1bnRpbWVDb25maWc/OiB7IFtrZXk6IHN0cmluZ106IGFueSB9XG4gIG5leHRFeHBvcnQ/OiBib29sZWFuXG4gIGF1dG9FeHBvcnQ/OiBib29sZWFuXG4gIGlzRmFsbGJhY2s/OiBib29sZWFuXG4gIGlzRXhwZXJpbWVudGFsQ29tcGlsZT86IGJvb2xlYW5cbiAgZHluYW1pY0lkcz86IChzdHJpbmcgfCBudW1iZXIpW11cbiAgZXJyPzogRXJyb3IgJiB7XG4gICAgc3RhdHVzQ29kZT86IG51bWJlclxuICAgIHNvdXJjZT86IHR5cGVvZiBDT01QSUxFUl9OQU1FUy5zZXJ2ZXIgfCB0eXBlb2YgQ09NUElMRVJfTkFNRVMuZWRnZVNlcnZlclxuICB9XG4gIGdzcD86IGJvb2xlYW5cbiAgZ3NzcD86IGJvb2xlYW5cbiAgY3VzdG9tU2VydmVyPzogYm9vbGVhblxuICBnaXA/OiBib29sZWFuXG4gIGFwcEdpcD86IGJvb2xlYW5cbiAgbG9jYWxlPzogc3RyaW5nXG4gIGxvY2FsZXM/OiByZWFkb25seSBzdHJpbmdbXVxuICBkZWZhdWx0TG9jYWxlPzogc3RyaW5nXG4gIGRvbWFpbkxvY2FsZXM/OiByZWFkb25seSBEb21haW5Mb2NhbGVbXVxuICBzY3JpcHRMb2FkZXI/OiBhbnlbXVxuICBpc1ByZXZpZXc/OiBib29sZWFuXG4gIG5vdEZvdW5kU3JjUGFnZT86IHN0cmluZ1xufVxuXG4vKipcbiAqIGBOZXh0YCBjb250ZXh0XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTmV4dFBhZ2VDb250ZXh0IHtcbiAgLyoqXG4gICAqIEVycm9yIG9iamVjdCBpZiBlbmNvdW50ZXJlZCBkdXJpbmcgcmVuZGVyaW5nXG4gICAqL1xuICBlcnI/OiAoRXJyb3IgJiB7IHN0YXR1c0NvZGU/OiBudW1iZXIgfSkgfCBudWxsXG4gIC8qKlxuICAgKiBgSFRUUGAgcmVxdWVzdCBvYmplY3QuXG4gICAqL1xuICByZXE/OiBJbmNvbWluZ01lc3NhZ2VcbiAgLyoqXG4gICAqIGBIVFRQYCByZXNwb25zZSBvYmplY3QuXG4gICAqL1xuICByZXM/OiBTZXJ2ZXJSZXNwb25zZVxuICAvKipcbiAgICogUGF0aCBzZWN0aW9uIG9mIGBVUkxgLlxuICAgKi9cbiAgcGF0aG5hbWU6IHN0cmluZ1xuICAvKipcbiAgICogUXVlcnkgc3RyaW5nIHNlY3Rpb24gb2YgYFVSTGAgcGFyc2VkIGFzIGFuIG9iamVjdC5cbiAgICovXG4gIHF1ZXJ5OiBQYXJzZWRVcmxRdWVyeVxuICAvKipcbiAgICogYFN0cmluZ2Agb2YgdGhlIGFjdHVhbCBwYXRoIGluY2x1ZGluZyBxdWVyeS5cbiAgICovXG4gIGFzUGF0aD86IHN0cmluZ1xuICAvKipcbiAgICogVGhlIGN1cnJlbnRseSBhY3RpdmUgbG9jYWxlXG4gICAqL1xuICBsb2NhbGU/OiBzdHJpbmdcbiAgLyoqXG4gICAqIEFsbCBjb25maWd1cmVkIGxvY2FsZXNcbiAgICovXG4gIGxvY2FsZXM/OiByZWFkb25seSBzdHJpbmdbXVxuICAvKipcbiAgICogVGhlIGNvbmZpZ3VyZWQgZGVmYXVsdCBsb2NhbGVcbiAgICovXG4gIGRlZmF1bHRMb2NhbGU/OiBzdHJpbmdcbiAgLyoqXG4gICAqIGBDb21wb25lbnRgIHRoZSB0cmVlIG9mIHRoZSBBcHAgdG8gdXNlIGlmIG5lZWRpbmcgdG8gcmVuZGVyIHNlcGFyYXRlbHlcbiAgICovXG4gIEFwcFRyZWU6IEFwcFRyZWVUeXBlXG59XG5cbmV4cG9ydCB0eXBlIEFwcENvbnRleHRUeXBlPFJvdXRlciBleHRlbmRzIE5leHRSb3V0ZXIgPSBOZXh0Um91dGVyPiA9IHtcbiAgQ29tcG9uZW50OiBOZXh0Q29tcG9uZW50VHlwZTxOZXh0UGFnZUNvbnRleHQ+XG4gIEFwcFRyZWU6IEFwcFRyZWVUeXBlXG4gIGN0eDogTmV4dFBhZ2VDb250ZXh0XG4gIHJvdXRlcjogUm91dGVyXG59XG5cbmV4cG9ydCB0eXBlIEFwcEluaXRpYWxQcm9wczxQYWdlUHJvcHMgPSBhbnk+ID0ge1xuICBwYWdlUHJvcHM6IFBhZ2VQcm9wc1xufVxuXG5leHBvcnQgdHlwZSBBcHBQcm9wc1R5cGU8XG4gIFJvdXRlciBleHRlbmRzIE5leHRSb3V0ZXIgPSBOZXh0Um91dGVyLFxuICBQYWdlUHJvcHMgPSB7fSxcbj4gPSBBcHBJbml0aWFsUHJvcHM8UGFnZVByb3BzPiAmIHtcbiAgQ29tcG9uZW50OiBOZXh0Q29tcG9uZW50VHlwZTxOZXh0UGFnZUNvbnRleHQsIGFueSwgYW55PlxuICByb3V0ZXI6IFJvdXRlclxuICBfX05fU1NHPzogYm9vbGVhblxuICBfX05fU1NQPzogYm9vbGVhblxufVxuXG5leHBvcnQgdHlwZSBEb2N1bWVudENvbnRleHQgPSBOZXh0UGFnZUNvbnRleHQgJiB7XG4gIHJlbmRlclBhZ2U6IFJlbmRlclBhZ2VcbiAgZGVmYXVsdEdldEluaXRpYWxQcm9wcyhcbiAgICBjdHg6IERvY3VtZW50Q29udGV4dCxcbiAgICBvcHRpb25zPzogeyBub25jZT86IHN0cmluZyB9XG4gICk6IFByb21pc2U8RG9jdW1lbnRJbml0aWFsUHJvcHM+XG59XG5cbmV4cG9ydCB0eXBlIERvY3VtZW50SW5pdGlhbFByb3BzID0gUmVuZGVyUGFnZVJlc3VsdCAmIHtcbiAgc3R5bGVzPzogUmVhY3QuUmVhY3RFbGVtZW50W10gfCBJdGVyYWJsZTxSZWFjdC5SZWFjdE5vZGU+IHwgSlNYLkVsZW1lbnRcbn1cblxuZXhwb3J0IHR5cGUgRG9jdW1lbnRQcm9wcyA9IERvY3VtZW50SW5pdGlhbFByb3BzICYgSHRtbFByb3BzXG5cbi8qKlxuICogTmV4dCBgQVBJYCByb3V0ZSByZXF1ZXN0XG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTmV4dEFwaVJlcXVlc3QgZXh0ZW5kcyBJbmNvbWluZ01lc3NhZ2Uge1xuICAvKipcbiAgICogT2JqZWN0IG9mIGBxdWVyeWAgdmFsdWVzIGZyb20gdXJsXG4gICAqL1xuICBxdWVyeTogUGFydGlhbDx7XG4gICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgc3RyaW5nW11cbiAgfT5cbiAgLyoqXG4gICAqIE9iamVjdCBvZiBgY29va2llc2AgZnJvbSBoZWFkZXJcbiAgICovXG4gIGNvb2tpZXM6IFBhcnRpYWw8e1xuICAgIFtrZXk6IHN0cmluZ106IHN0cmluZ1xuICB9PlxuXG4gIGJvZHk6IGFueVxuXG4gIGVudjogRW52XG5cbiAgZHJhZnRNb2RlPzogYm9vbGVhblxuXG4gIHByZXZpZXc/OiBib29sZWFuXG4gIC8qKlxuICAgKiBQcmV2aWV3IGRhdGEgc2V0IG9uIHRoZSByZXF1ZXN0LCBpZiBhbnlcbiAgICogKi9cbiAgcHJldmlld0RhdGE/OiBQcmV2aWV3RGF0YVxufVxuXG4vKipcbiAqIFNlbmQgYm9keSBvZiByZXNwb25zZVxuICovXG50eXBlIFNlbmQ8VD4gPSAoYm9keTogVCkgPT4gdm9pZFxuXG4vKipcbiAqIE5leHQgYEFQSWAgcm91dGUgcmVzcG9uc2VcbiAqL1xuZXhwb3J0IHR5cGUgTmV4dEFwaVJlc3BvbnNlPERhdGEgPSBhbnk+ID0gU2VydmVyUmVzcG9uc2UgJiB7XG4gIC8qKlxuICAgKiBTZW5kIGRhdGEgYGFueWAgZGF0YSBpbiByZXNwb25zZVxuICAgKi9cbiAgc2VuZDogU2VuZDxEYXRhPlxuICAvKipcbiAgICogU2VuZCBkYXRhIGBqc29uYCBkYXRhIGluIHJlc3BvbnNlXG4gICAqL1xuICBqc29uOiBTZW5kPERhdGE+XG4gIHN0YXR1czogKHN0YXR1c0NvZGU6IG51bWJlcikgPT4gTmV4dEFwaVJlc3BvbnNlPERhdGE+XG4gIHJlZGlyZWN0KHVybDogc3RyaW5nKTogTmV4dEFwaVJlc3BvbnNlPERhdGE+XG4gIHJlZGlyZWN0KHN0YXR1czogbnVtYmVyLCB1cmw6IHN0cmluZyk6IE5leHRBcGlSZXNwb25zZTxEYXRhPlxuXG4gIC8qKlxuICAgKiBTZXQgZHJhZnQgbW9kZVxuICAgKi9cbiAgc2V0RHJhZnRNb2RlOiAob3B0aW9uczogeyBlbmFibGU6IGJvb2xlYW4gfSkgPT4gTmV4dEFwaVJlc3BvbnNlPERhdGE+XG5cbiAgLyoqXG4gICAqIFNldCBwcmV2aWV3IGRhdGEgZm9yIE5leHQuanMnIHByZXJlbmRlciBtb2RlXG4gICAqL1xuICBzZXRQcmV2aWV3RGF0YTogKFxuICAgIGRhdGE6IG9iamVjdCB8IHN0cmluZyxcbiAgICBvcHRpb25zPzoge1xuICAgICAgLyoqXG4gICAgICAgKiBTcGVjaWZpZXMgdGhlIG51bWJlciAoaW4gc2Vjb25kcykgZm9yIHRoZSBwcmV2aWV3IHNlc3Npb24gdG8gbGFzdCBmb3IuXG4gICAgICAgKiBUaGUgZ2l2ZW4gbnVtYmVyIHdpbGwgYmUgY29udmVydGVkIHRvIGFuIGludGVnZXIgYnkgcm91bmRpbmcgZG93bi5cbiAgICAgICAqIEJ5IGRlZmF1bHQsIG5vIG1heGltdW0gYWdlIGlzIHNldCBhbmQgdGhlIHByZXZpZXcgc2Vzc2lvbiBmaW5pc2hlc1xuICAgICAgICogd2hlbiB0aGUgY2xpZW50IHNodXRzIGRvd24gKGJyb3dzZXIgaXMgY2xvc2VkKS5cbiAgICAgICAqL1xuICAgICAgbWF4QWdlPzogbnVtYmVyXG4gICAgICAvKipcbiAgICAgICAqIFNwZWNpZmllcyB0aGUgcGF0aCBmb3IgdGhlIHByZXZpZXcgc2Vzc2lvbiB0byB3b3JrIHVuZGVyLiBCeSBkZWZhdWx0LFxuICAgICAgICogdGhlIHBhdGggaXMgY29uc2lkZXJlZCB0aGUgXCJkZWZhdWx0IHBhdGhcIiwgaS5lLiwgYW55IHBhZ2VzIHVuZGVyIFwiL1wiLlxuICAgICAgICovXG4gICAgICBwYXRoPzogc3RyaW5nXG4gICAgfVxuICApID0+IE5leHRBcGlSZXNwb25zZTxEYXRhPlxuXG4gIC8qKlxuICAgKiBDbGVhciBwcmV2aWV3IGRhdGEgZm9yIE5leHQuanMnIHByZXJlbmRlciBtb2RlXG4gICAqL1xuICBjbGVhclByZXZpZXdEYXRhOiAob3B0aW9ucz86IHsgcGF0aD86IHN0cmluZyB9KSA9PiBOZXh0QXBpUmVzcG9uc2U8RGF0YT5cblxuICAvKipcbiAgICogUmV2YWxpZGF0ZSBhIHNwZWNpZmljIHBhZ2UgYW5kIHJlZ2VuZXJhdGUgaXQgdXNpbmcgT24tRGVtYW5kIEluY3JlbWVudGFsXG4gICAqIFN0YXRpYyBSZWdlbmVyYXRpb24uXG4gICAqIFRoZSBwYXRoIHNob3VsZCBiZSBhbiBhY3R1YWwgcGF0aCwgbm90IGEgcmV3cml0dGVuIHBhdGguIEUuZy4gZm9yXG4gICAqIFwiL2Jsb2cvW3NsdWddXCIgdGhpcyBzaG91bGQgYmUgXCIvYmxvZy9wb3N0LTFcIi5cbiAgICogQGxpbmsgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2J1aWxkaW5nLXlvdXItYXBwbGljYXRpb24vZGF0YS1mZXRjaGluZy9pbmNyZW1lbnRhbC1zdGF0aWMtcmVnZW5lcmF0aW9uI29uLWRlbWFuZC1yZXZhbGlkYXRpb24td2l0aC1yZXZhbGlkYXRlcGF0aFxuICAgKi9cbiAgcmV2YWxpZGF0ZTogKFxuICAgIHVybFBhdGg6IHN0cmluZyxcbiAgICBvcHRzPzoge1xuICAgICAgdW5zdGFibGVfb25seUdlbmVyYXRlZD86IGJvb2xlYW5cbiAgICB9XG4gICkgPT4gUHJvbWlzZTx2b2lkPlxufVxuXG4vKipcbiAqIE5leHQgYEFQSWAgcm91dGUgaGFuZGxlclxuICovXG5leHBvcnQgdHlwZSBOZXh0QXBpSGFuZGxlcjxUID0gYW55PiA9IChcbiAgcmVxOiBOZXh0QXBpUmVxdWVzdCxcbiAgcmVzOiBOZXh0QXBpUmVzcG9uc2U8VD5cbikgPT4gdW5rbm93biB8IFByb21pc2U8dW5rbm93bj5cblxuLyoqXG4gKiBVdGlsc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZXhlY09uY2U8VCBleHRlbmRzICguLi5hcmdzOiBhbnlbXSkgPT4gUmV0dXJuVHlwZTxUPj4oXG4gIGZuOiBUXG4pOiBUIHtcbiAgbGV0IHVzZWQgPSBmYWxzZVxuICBsZXQgcmVzdWx0OiBSZXR1cm5UeXBlPFQ+XG5cbiAgcmV0dXJuICgoLi4uYXJnczogYW55W10pID0+IHtcbiAgICBpZiAoIXVzZWQpIHtcbiAgICAgIHVzZWQgPSB0cnVlXG4gICAgICByZXN1bHQgPSBmbiguLi5hcmdzKVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0XG4gIH0pIGFzIFRcbn1cblxuLy8gU2NoZW1lOiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNzZWN0aW9uLTMuMVxuLy8gQWJzb2x1dGUgVVJMOiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNzZWN0aW9uLTQuM1xuY29uc3QgQUJTT0xVVEVfVVJMX1JFR0VYID0gL15bYS16QS1aXVthLXpBLVpcXGQrXFwtLl0qPzovXG5leHBvcnQgY29uc3QgaXNBYnNvbHV0ZVVybCA9ICh1cmw6IHN0cmluZykgPT4gQUJTT0xVVEVfVVJMX1JFR0VYLnRlc3QodXJsKVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9jYXRpb25PcmlnaW4oKSB7XG4gIGNvbnN0IHsgcHJvdG9jb2wsIGhvc3RuYW1lLCBwb3J0IH0gPSB3aW5kb3cubG9jYXRpb25cbiAgcmV0dXJuIGAke3Byb3RvY29sfS8vJHtob3N0bmFtZX0ke3BvcnQgPyAnOicgKyBwb3J0IDogJyd9YFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VVJMKCkge1xuICBjb25zdCB7IGhyZWYgfSA9IHdpbmRvdy5sb2NhdGlvblxuICBjb25zdCBvcmlnaW4gPSBnZXRMb2NhdGlvbk9yaWdpbigpXG4gIHJldHVybiBocmVmLnN1YnN0cmluZyhvcmlnaW4ubGVuZ3RoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWU8UD4oQ29tcG9uZW50OiBDb21wb25lbnRUeXBlPFA+KSB7XG4gIHJldHVybiB0eXBlb2YgQ29tcG9uZW50ID09PSAnc3RyaW5nJ1xuICAgID8gQ29tcG9uZW50XG4gICAgOiBDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWUgfHwgJ1Vua25vd24nXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1Jlc1NlbnQocmVzOiBTZXJ2ZXJSZXNwb25zZSkge1xuICByZXR1cm4gcmVzLmZpbmlzaGVkIHx8IHJlcy5oZWFkZXJzU2VudFxufVxuXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplUmVwZWF0ZWRTbGFzaGVzKHVybDogc3RyaW5nKSB7XG4gIGNvbnN0IHVybFBhcnRzID0gdXJsLnNwbGl0KCc/JylcbiAgY29uc3QgdXJsTm9RdWVyeSA9IHVybFBhcnRzWzBdXG5cbiAgcmV0dXJuIChcbiAgICB1cmxOb1F1ZXJ5XG4gICAgICAvLyBmaXJzdCB3ZSByZXBsYWNlIGFueSBub24tZW5jb2RlZCBiYWNrc2xhc2hlcyB3aXRoIGZvcndhcmRcbiAgICAgIC8vIHRoZW4gbm9ybWFsaXplIHJlcGVhdGVkIGZvcndhcmQgc2xhc2hlc1xuICAgICAgLnJlcGxhY2UoL1xcXFwvZywgJy8nKVxuICAgICAgLnJlcGxhY2UoL1xcL1xcLysvZywgJy8nKSArXG4gICAgKHVybFBhcnRzWzFdID8gYD8ke3VybFBhcnRzLnNsaWNlKDEpLmpvaW4oJz8nKX1gIDogJycpXG4gIClcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRHZXRJbml0aWFsUHJvcHM8XG4gIEMgZXh0ZW5kcyBCYXNlQ29udGV4dCxcbiAgSVAgPSB7fSxcbiAgUCA9IHt9LFxuPihBcHA6IE5leHRDb21wb25lbnRUeXBlPEMsIElQLCBQPiwgY3R4OiBDKTogUHJvbWlzZTxJUD4ge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChBcHAucHJvdG90eXBlPy5nZXRJbml0aWFsUHJvcHMpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgXCIke2dldERpc3BsYXlOYW1lKFxuICAgICAgICBBcHBcbiAgICAgICl9LmdldEluaXRpYWxQcm9wcygpXCIgaXMgZGVmaW5lZCBhcyBhbiBpbnN0YW5jZSBtZXRob2QgLSB2aXNpdCBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9nZXQtaW5pdGlhbC1wcm9wcy1hcy1hbi1pbnN0YW5jZS1tZXRob2QgZm9yIG1vcmUgaW5mb3JtYXRpb24uYFxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpXG4gICAgfVxuICB9XG4gIC8vIHdoZW4gY2FsbGVkIGZyb20gX2FwcCBgY3R4YCBpcyBuZXN0ZWQgaW4gYGN0eGBcbiAgY29uc3QgcmVzID0gY3R4LnJlcyB8fCAoY3R4LmN0eCAmJiBjdHguY3R4LnJlcylcblxuICBpZiAoIUFwcC5nZXRJbml0aWFsUHJvcHMpIHtcbiAgICBpZiAoY3R4LmN0eCAmJiBjdHguQ29tcG9uZW50KSB7XG4gICAgICAvLyBAdHMtaWdub3JlIHBhZ2VQcm9wcyBkZWZhdWx0XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwYWdlUHJvcHM6IGF3YWl0IGxvYWRHZXRJbml0aWFsUHJvcHMoY3R4LkNvbXBvbmVudCwgY3R4LmN0eCksXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7fSBhcyBJUFxuICB9XG5cbiAgY29uc3QgcHJvcHMgPSBhd2FpdCBBcHAuZ2V0SW5pdGlhbFByb3BzKGN0eClcblxuICBpZiAocmVzICYmIGlzUmVzU2VudChyZXMpKSB7XG4gICAgcmV0dXJuIHByb3BzXG4gIH1cblxuICBpZiAoIXByb3BzKSB7XG4gICAgY29uc3QgbWVzc2FnZSA9IGBcIiR7Z2V0RGlzcGxheU5hbWUoXG4gICAgICBBcHBcbiAgICApfS5nZXRJbml0aWFsUHJvcHMoKVwiIHNob3VsZCByZXNvbHZlIHRvIGFuIG9iamVjdC4gQnV0IGZvdW5kIFwiJHtwcm9wc31cIiBpbnN0ZWFkLmBcbiAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSlcbiAgfVxuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKE9iamVjdC5rZXlzKHByb3BzKS5sZW5ndGggPT09IDAgJiYgIWN0eC5jdHgpIHtcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgYCR7Z2V0RGlzcGxheU5hbWUoXG4gICAgICAgICAgQXBwXG4gICAgICAgICl9IHJldHVybmVkIGFuIGVtcHR5IG9iamVjdCBmcm9tIFxcYGdldEluaXRpYWxQcm9wc1xcYC4gVGhpcyBkZS1vcHRpbWl6ZXMgYW5kIHByZXZlbnRzIGF1dG9tYXRpYyBzdGF0aWMgb3B0aW1pemF0aW9uLiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9lbXB0eS1vYmplY3QtZ2V0SW5pdGlhbFByb3BzYFxuICAgICAgKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwcm9wc1xufVxuXG5leHBvcnQgY29uc3QgU1AgPSB0eXBlb2YgcGVyZm9ybWFuY2UgIT09ICd1bmRlZmluZWQnXG5leHBvcnQgY29uc3QgU1QgPVxuICBTUCAmJlxuICAoWydtYXJrJywgJ21lYXN1cmUnLCAnZ2V0RW50cmllc0J5TmFtZSddIGFzIGNvbnN0KS5ldmVyeShcbiAgICAobWV0aG9kKSA9PiB0eXBlb2YgcGVyZm9ybWFuY2VbbWV0aG9kXSA9PT0gJ2Z1bmN0aW9uJ1xuICApXG5cbmV4cG9ydCBjbGFzcyBEZWNvZGVFcnJvciBleHRlbmRzIEVycm9yIHt9XG5leHBvcnQgY2xhc3MgTm9ybWFsaXplRXJyb3IgZXh0ZW5kcyBFcnJvciB7fVxuZXhwb3J0IGNsYXNzIFBhZ2VOb3RGb3VuZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb2RlOiBzdHJpbmdcblxuICBjb25zdHJ1Y3RvcihwYWdlOiBzdHJpbmcpIHtcbiAgICBzdXBlcigpXG4gICAgdGhpcy5jb2RlID0gJ0VOT0VOVCdcbiAgICB0aGlzLm5hbWUgPSAnUGFnZU5vdEZvdW5kRXJyb3InXG4gICAgdGhpcy5tZXNzYWdlID0gYENhbm5vdCBmaW5kIG1vZHVsZSBmb3IgcGFnZTogJHtwYWdlfWBcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTWlzc2luZ1N0YXRpY1BhZ2UgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKHBhZ2U6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nKSB7XG4gICAgc3VwZXIoKVxuICAgIHRoaXMubWVzc2FnZSA9IGBGYWlsZWQgdG8gbG9hZCBzdGF0aWMgZmlsZSBmb3IgcGFnZTogJHtwYWdlfSAke21lc3NhZ2V9YFxuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBNaWRkbGV3YXJlTm90Rm91bmRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29kZTogc3RyaW5nXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKClcbiAgICB0aGlzLmNvZGUgPSAnRU5PRU5UJ1xuICAgIHRoaXMubWVzc2FnZSA9IGBDYW5ub3QgZmluZCB0aGUgbWlkZGxld2FyZSBtb2R1bGVgXG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBDYWNoZUZzIHtcbiAgZXhpc3RzU3luYzogdHlwZW9mIGZzLmV4aXN0c1N5bmNcbiAgcmVhZEZpbGU6IHR5cGVvZiBmcy5wcm9taXNlcy5yZWFkRmlsZVxuICByZWFkRmlsZVN5bmM6IHR5cGVvZiBmcy5yZWFkRmlsZVN5bmNcbiAgd3JpdGVGaWxlKGY6IHN0cmluZywgZDogYW55KTogUHJvbWlzZTx2b2lkPlxuICBta2RpcihkaXI6IHN0cmluZyk6IFByb21pc2U8dm9pZCB8IHN0cmluZz5cbiAgc3RhdChmOiBzdHJpbmcpOiBQcm9taXNlPHsgbXRpbWU6IERhdGUgfT5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeUVycm9yKGVycm9yOiBFcnJvcikge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoeyBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLCBzdGFjazogZXJyb3Iuc3RhY2sgfSlcbn1cbiJdLCJuYW1lcyI6WyJEZWNvZGVFcnJvciIsIk1pZGRsZXdhcmVOb3RGb3VuZEVycm9yIiwiTWlzc2luZ1N0YXRpY1BhZ2UiLCJOb3JtYWxpemVFcnJvciIsIlBhZ2VOb3RGb3VuZEVycm9yIiwiU1AiLCJTVCIsIldFQl9WSVRBTFMiLCJleGVjT25jZSIsImdldERpc3BsYXlOYW1lIiwiZ2V0TG9jYXRpb25PcmlnaW4iLCJnZXRVUkwiLCJpc0Fic29sdXRlVXJsIiwiaXNSZXNTZW50IiwibG9hZEdldEluaXRpYWxQcm9wcyIsIm5vcm1hbGl6ZVJlcGVhdGVkU2xhc2hlcyIsInN0cmluZ2lmeUVycm9yIiwiZm4iLCJ1c2VkIiwicmVzdWx0IiwiYXJncyIsIkFCU09MVVRFX1VSTF9SRUdFWCIsInVybCIsInRlc3QiLCJwcm90b2NvbCIsImhvc3RuYW1lIiwicG9ydCIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsIm9yaWdpbiIsInN1YnN0cmluZyIsImxlbmd0aCIsIkNvbXBvbmVudCIsImRpc3BsYXlOYW1lIiwibmFtZSIsInJlcyIsImZpbmlzaGVkIiwiaGVhZGVyc1NlbnQiLCJ1cmxQYXJ0cyIsInNwbGl0IiwidXJsTm9RdWVyeSIsInJlcGxhY2UiLCJzbGljZSIsImpvaW4iLCJBcHAiLCJjdHgiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJwcm90b3R5cGUiLCJnZXRJbml0aWFsUHJvcHMiLCJtZXNzYWdlIiwiRXJyb3IiLCJwYWdlUHJvcHMiLCJwcm9wcyIsIk9iamVjdCIsImtleXMiLCJjb25zb2xlIiwid2FybiIsInBlcmZvcm1hbmNlIiwiZXZlcnkiLCJtZXRob2QiLCJjb25zdHJ1Y3RvciIsInBhZ2UiLCJjb2RlIiwiZXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhY2siXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/utils/error-once.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"errorOnce\", ({\n    enumerable: true,\n    get: function() {\n        return errorOnce;\n    }\n}));\nlet errorOnce = (_)=>{};\nif (true) {\n    const errors = new Set();\n    errorOnce = (msg)=>{\n        if (!errors.has(msg)) {\n            console.error(msg);\n        }\n        errors.add(msg);\n    };\n} //# sourceMappingURL=error-once.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi91dGlscy9lcnJvci1vbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7NkNBV1NBOzs7ZUFBQUE7OztBQVhULElBQUlBLFlBQVksQ0FBQ0MsS0FBZTtBQUNoQyxJQURpQkEsSUFDTyxFQUFtQjtJQUN6QyxNQUFNSSxTQUFTLElBQUlDO0lBQ25CTixZQUFZLENBQUNPO1FBQ1gsSUFBSSxDQUFDRixPQUFPRyxHQUFHLENBQUNELE1BQU07WUFDcEJFLFFBQVFDLEtBQUssQ0FBQ0g7UUFDaEI7UUFDQUYsT0FBT00sR0FBRyxDQUFDSjtJQUNiO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcc3JjXFxzaGFyZWRcXGxpYlxcdXRpbHNcXGVycm9yLW9uY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGVycm9yT25jZSA9IChfOiBzdHJpbmcpID0+IHt9XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBjb25zdCBlcnJvcnMgPSBuZXcgU2V0PHN0cmluZz4oKVxuICBlcnJvck9uY2UgPSAobXNnOiBzdHJpbmcpID0+IHtcbiAgICBpZiAoIWVycm9ycy5oYXMobXNnKSkge1xuICAgICAgY29uc29sZS5lcnJvcihtc2cpXG4gICAgfVxuICAgIGVycm9ycy5hZGQobXNnKVxuICB9XG59XG5cbmV4cG9ydCB7IGVycm9yT25jZSB9XG4iXSwibmFtZXMiOlsiZXJyb3JPbmNlIiwiXyIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImVycm9ycyIsIlNldCIsIm1zZyIsImhhcyIsImNvbnNvbGUiLCJlcnJvciIsImFkZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/utils/error-once.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/oauth4webapi/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/oauth4webapi/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperationProcessingError: () => (/* binding */ OperationProcessingError),\n/* harmony export */   UnsupportedOperationError: () => (/* binding */ UnsupportedOperationError),\n/* harmony export */   authorizationCodeGrantRequest: () => (/* binding */ authorizationCodeGrantRequest),\n/* harmony export */   calculatePKCECodeChallenge: () => (/* binding */ calculatePKCECodeChallenge),\n/* harmony export */   clientCredentialsGrantRequest: () => (/* binding */ clientCredentialsGrantRequest),\n/* harmony export */   clockSkew: () => (/* binding */ clockSkew),\n/* harmony export */   clockTolerance: () => (/* binding */ clockTolerance),\n/* harmony export */   customFetch: () => (/* binding */ customFetch),\n/* harmony export */   deviceAuthorizationRequest: () => (/* binding */ deviceAuthorizationRequest),\n/* harmony export */   deviceCodeGrantRequest: () => (/* binding */ deviceCodeGrantRequest),\n/* harmony export */   discoveryRequest: () => (/* binding */ discoveryRequest),\n/* harmony export */   expectNoNonce: () => (/* binding */ expectNoNonce),\n/* harmony export */   expectNoState: () => (/* binding */ expectNoState),\n/* harmony export */   experimentalCustomFetch: () => (/* binding */ experimentalCustomFetch),\n/* harmony export */   experimentalUseMtlsAlias: () => (/* binding */ experimentalUseMtlsAlias),\n/* harmony export */   experimental_customFetch: () => (/* binding */ experimental_customFetch),\n/* harmony export */   experimental_jwksCache: () => (/* binding */ experimental_jwksCache),\n/* harmony export */   experimental_useMtlsAlias: () => (/* binding */ experimental_useMtlsAlias),\n/* harmony export */   experimental_validateDetachedSignatureResponse: () => (/* binding */ experimental_validateDetachedSignatureResponse),\n/* harmony export */   experimental_validateJwtAccessToken: () => (/* binding */ experimental_validateJwtAccessToken),\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   generateRandomCodeVerifier: () => (/* binding */ generateRandomCodeVerifier),\n/* harmony export */   generateRandomNonce: () => (/* binding */ generateRandomNonce),\n/* harmony export */   generateRandomState: () => (/* binding */ generateRandomState),\n/* harmony export */   genericTokenEndpointRequest: () => (/* binding */ genericTokenEndpointRequest),\n/* harmony export */   getValidatedIdTokenClaims: () => (/* binding */ getValidatedIdTokenClaims),\n/* harmony export */   introspectionRequest: () => (/* binding */ introspectionRequest),\n/* harmony export */   isOAuth2Error: () => (/* binding */ isOAuth2Error),\n/* harmony export */   issueRequestObject: () => (/* binding */ issueRequestObject),\n/* harmony export */   jweDecrypt: () => (/* binding */ jweDecrypt),\n/* harmony export */   jwksCache: () => (/* binding */ jwksCache),\n/* harmony export */   modifyAssertion: () => (/* binding */ modifyAssertion),\n/* harmony export */   parseWwwAuthenticateChallenges: () => (/* binding */ parseWwwAuthenticateChallenges),\n/* harmony export */   processAuthorizationCodeOAuth2Response: () => (/* binding */ processAuthorizationCodeOAuth2Response),\n/* harmony export */   processAuthorizationCodeOpenIDResponse: () => (/* binding */ processAuthorizationCodeOpenIDResponse),\n/* harmony export */   processClientCredentialsResponse: () => (/* binding */ processClientCredentialsResponse),\n/* harmony export */   processDeviceAuthorizationResponse: () => (/* binding */ processDeviceAuthorizationResponse),\n/* harmony export */   processDeviceCodeResponse: () => (/* binding */ processDeviceCodeResponse),\n/* harmony export */   processDiscoveryResponse: () => (/* binding */ processDiscoveryResponse),\n/* harmony export */   processIntrospectionResponse: () => (/* binding */ processIntrospectionResponse),\n/* harmony export */   processPushedAuthorizationResponse: () => (/* binding */ processPushedAuthorizationResponse),\n/* harmony export */   processRefreshTokenResponse: () => (/* binding */ processRefreshTokenResponse),\n/* harmony export */   processRevocationResponse: () => (/* binding */ processRevocationResponse),\n/* harmony export */   processUserInfoResponse: () => (/* binding */ processUserInfoResponse),\n/* harmony export */   protectedResourceRequest: () => (/* binding */ protectedResourceRequest),\n/* harmony export */   pushedAuthorizationRequest: () => (/* binding */ pushedAuthorizationRequest),\n/* harmony export */   refreshTokenGrantRequest: () => (/* binding */ refreshTokenGrantRequest),\n/* harmony export */   revocationRequest: () => (/* binding */ revocationRequest),\n/* harmony export */   skipAuthTimeCheck: () => (/* binding */ skipAuthTimeCheck),\n/* harmony export */   skipStateCheck: () => (/* binding */ skipStateCheck),\n/* harmony export */   skipSubjectCheck: () => (/* binding */ skipSubjectCheck),\n/* harmony export */   useMtlsAlias: () => (/* binding */ useMtlsAlias),\n/* harmony export */   userInfoRequest: () => (/* binding */ userInfoRequest),\n/* harmony export */   validateAuthResponse: () => (/* binding */ validateAuthResponse),\n/* harmony export */   validateDetachedSignatureResponse: () => (/* binding */ validateDetachedSignatureResponse),\n/* harmony export */   validateIdTokenSignature: () => (/* binding */ validateIdTokenSignature),\n/* harmony export */   validateJwtAccessToken: () => (/* binding */ validateJwtAccessToken),\n/* harmony export */   validateJwtAuthResponse: () => (/* binding */ validateJwtAuthResponse),\n/* harmony export */   validateJwtIntrospectionSignature: () => (/* binding */ validateJwtIntrospectionSignature),\n/* harmony export */   validateJwtUserInfoSignature: () => (/* binding */ validateJwtUserInfoSignature),\n/* harmony export */   validateJwtUserinfoSignature: () => (/* binding */ validateJwtUserinfoSignature)\n/* harmony export */ });\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'oauth4webapi';\n    const VERSION = 'v2.17.0';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nfunction looseInstanceOf(input, expected) {\n    if (input == null) {\n        return false;\n    }\n    try {\n        return (input instanceof expected ||\n            Object.getPrototypeOf(input)[Symbol.toStringTag] === expected.prototype[Symbol.toStringTag]);\n    }\n    catch {\n        return false;\n    }\n}\nconst clockSkew = Symbol();\nconst clockTolerance = Symbol();\nconst customFetch = Symbol();\nconst modifyAssertion = Symbol();\nconst jweDecrypt = Symbol();\nconst jwksCache = Symbol();\nconst useMtlsAlias = Symbol();\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nfunction buf(input) {\n    if (typeof input === 'string') {\n        return encoder.encode(input);\n    }\n    return decoder.decode(input);\n}\nconst CHUNK_SIZE = 0x8000;\nfunction encodeBase64Url(input) {\n    if (input instanceof ArrayBuffer) {\n        input = new Uint8Array(input);\n    }\n    const arr = [];\n    for (let i = 0; i < input.byteLength; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join('')).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction decodeBase64Url(input) {\n    try {\n        const binary = atob(input.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, ''));\n        const bytes = new Uint8Array(binary.length);\n        for (let i = 0; i < binary.length; i++) {\n            bytes[i] = binary.charCodeAt(i);\n        }\n        return bytes;\n    }\n    catch (cause) {\n        throw new OPE('The input to be decoded is not correctly encoded.', { cause });\n    }\n}\nfunction b64u(input) {\n    if (typeof input === 'string') {\n        return decodeBase64Url(input);\n    }\n    return encodeBase64Url(input);\n}\nclass LRU {\n    constructor(maxSize) {\n        this.cache = new Map();\n        this._cache = new Map();\n        this.maxSize = maxSize;\n    }\n    get(key) {\n        let v = this.cache.get(key);\n        if (v) {\n            return v;\n        }\n        if ((v = this._cache.get(key))) {\n            this.update(key, v);\n            return v;\n        }\n        return undefined;\n    }\n    has(key) {\n        return this.cache.has(key) || this._cache.has(key);\n    }\n    set(key, value) {\n        if (this.cache.has(key)) {\n            this.cache.set(key, value);\n        }\n        else {\n            this.update(key, value);\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.cache.has(key)) {\n            return this.cache.delete(key);\n        }\n        if (this._cache.has(key)) {\n            return this._cache.delete(key);\n        }\n        return false;\n    }\n    update(key, value) {\n        this.cache.set(key, value);\n        if (this.cache.size >= this.maxSize) {\n            this._cache = this.cache;\n            this.cache = new Map();\n        }\n    }\n}\nclass UnsupportedOperationError extends Error {\n    constructor(message) {\n        super(message ?? 'operation not supported');\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nclass OperationProcessingError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nconst OPE = OperationProcessingError;\nconst dpopNonces = new LRU(100);\nfunction isCryptoKey(key) {\n    return key instanceof CryptoKey;\n}\nfunction isPrivateKey(key) {\n    return isCryptoKey(key) && key.type === 'private';\n}\nfunction isPublicKey(key) {\n    return isCryptoKey(key) && key.type === 'public';\n}\nconst SUPPORTED_JWS_ALGS = [\n    'PS256',\n    'ES256',\n    'RS256',\n    'PS384',\n    'ES384',\n    'RS384',\n    'PS512',\n    'ES512',\n    'RS512',\n    'EdDSA',\n];\nfunction processDpopNonce(response) {\n    try {\n        const nonce = response.headers.get('dpop-nonce');\n        if (nonce) {\n            dpopNonces.set(new URL(response.url).origin, nonce);\n        }\n    }\n    catch { }\n    return response;\n}\nfunction normalizeTyp(value) {\n    return value.toLowerCase().replace(/^application\\//, '');\n}\nfunction isJsonObject(input) {\n    if (input === null || typeof input !== 'object' || Array.isArray(input)) {\n        return false;\n    }\n    return true;\n}\nfunction prepareHeaders(input) {\n    if (looseInstanceOf(input, Headers)) {\n        input = Object.fromEntries(input.entries());\n    }\n    const headers = new Headers(input);\n    if (USER_AGENT && !headers.has('user-agent')) {\n        headers.set('user-agent', USER_AGENT);\n    }\n    if (headers.has('authorization')) {\n        throw new TypeError('\"options.headers\" must not include the \"authorization\" header name');\n    }\n    if (headers.has('dpop')) {\n        throw new TypeError('\"options.headers\" must not include the \"dpop\" header name');\n    }\n    return headers;\n}\nfunction signal(value) {\n    if (typeof value === 'function') {\n        value = value();\n    }\n    if (!(value instanceof AbortSignal)) {\n        throw new TypeError('\"options.signal\" must return or be an instance of AbortSignal');\n    }\n    return value;\n}\nasync function discoveryRequest(issuerIdentifier, options) {\n    if (!(issuerIdentifier instanceof URL)) {\n        throw new TypeError('\"issuerIdentifier\" must be an instance of URL');\n    }\n    if (issuerIdentifier.protocol !== 'https:' && issuerIdentifier.protocol !== 'http:') {\n        throw new TypeError('\"issuer.protocol\" must be \"https:\" or \"http:\"');\n    }\n    const url = new URL(issuerIdentifier.href);\n    switch (options?.algorithm) {\n        case undefined:\n        case 'oidc':\n            url.pathname = `${url.pathname}/.well-known/openid-configuration`.replace('//', '/');\n            break;\n        case 'oauth2':\n            if (url.pathname === '/') {\n                url.pathname = '.well-known/oauth-authorization-server';\n            }\n            else {\n                url.pathname = `.well-known/oauth-authorization-server/${url.pathname}`.replace('//', '/');\n            }\n            break;\n        default:\n            throw new TypeError('\"options.algorithm\" must be \"oidc\" (default), or \"oauth2\"');\n    }\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    return (options?.[customFetch] || fetch)(url.href, {\n        headers: Object.fromEntries(headers.entries()),\n        method: 'GET',\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nfunction validateString(input) {\n    return typeof input === 'string' && input.length !== 0;\n}\nasync function processDiscoveryResponse(expectedIssuerIdentifier, response) {\n    if (!(expectedIssuerIdentifier instanceof URL)) {\n        throw new TypeError('\"expectedIssuer\" must be an instance of URL');\n    }\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform Authorization Server Metadata response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.issuer)) {\n        throw new OPE('\"response\" body \"issuer\" property must be a non-empty string');\n    }\n    if (new URL(json.issuer).href !== expectedIssuerIdentifier.href) {\n        throw new OPE('\"response\" body \"issuer\" does not match \"expectedIssuer\"');\n    }\n    return json;\n}\nfunction randomBytes() {\n    return b64u(crypto.getRandomValues(new Uint8Array(32)));\n}\nfunction generateRandomCodeVerifier() {\n    return randomBytes();\n}\nfunction generateRandomState() {\n    return randomBytes();\n}\nfunction generateRandomNonce() {\n    return randomBytes();\n}\nasync function calculatePKCECodeChallenge(codeVerifier) {\n    if (!validateString(codeVerifier)) {\n        throw new TypeError('\"codeVerifier\" must be a non-empty string');\n    }\n    return b64u(await crypto.subtle.digest('SHA-256', buf(codeVerifier)));\n}\nfunction getKeyAndKid(input) {\n    if (input instanceof CryptoKey) {\n        return { key: input };\n    }\n    if (!(input?.key instanceof CryptoKey)) {\n        return {};\n    }\n    if (input.kid !== undefined && !validateString(input.kid)) {\n        throw new TypeError('\"kid\" must be a non-empty string');\n    }\n    return {\n        key: input.key,\n        kid: input.kid,\n        modifyAssertion: input[modifyAssertion],\n    };\n}\nfunction formUrlEncode(token) {\n    return encodeURIComponent(token).replace(/%20/g, '+');\n}\nfunction clientSecretBasic(clientId, clientSecret) {\n    const username = formUrlEncode(clientId);\n    const password = formUrlEncode(clientSecret);\n    const credentials = btoa(`${username}:${password}`);\n    return `Basic ${credentials}`;\n}\nfunction psAlg(key) {\n    switch (key.algorithm.hash.name) {\n        case 'SHA-256':\n            return 'PS256';\n        case 'SHA-384':\n            return 'PS384';\n        case 'SHA-512':\n            return 'PS512';\n        default:\n            throw new UnsupportedOperationError('unsupported RsaHashedKeyAlgorithm hash name');\n    }\n}\nfunction rsAlg(key) {\n    switch (key.algorithm.hash.name) {\n        case 'SHA-256':\n            return 'RS256';\n        case 'SHA-384':\n            return 'RS384';\n        case 'SHA-512':\n            return 'RS512';\n        default:\n            throw new UnsupportedOperationError('unsupported RsaHashedKeyAlgorithm hash name');\n    }\n}\nfunction esAlg(key) {\n    switch (key.algorithm.namedCurve) {\n        case 'P-256':\n            return 'ES256';\n        case 'P-384':\n            return 'ES384';\n        case 'P-521':\n            return 'ES512';\n        default:\n            throw new UnsupportedOperationError('unsupported EcKeyAlgorithm namedCurve');\n    }\n}\nfunction keyToJws(key) {\n    switch (key.algorithm.name) {\n        case 'RSA-PSS':\n            return psAlg(key);\n        case 'RSASSA-PKCS1-v1_5':\n            return rsAlg(key);\n        case 'ECDSA':\n            return esAlg(key);\n        case 'Ed25519':\n        case 'Ed448':\n            return 'EdDSA';\n        default:\n            throw new UnsupportedOperationError('unsupported CryptoKey algorithm name');\n    }\n}\nfunction getClockSkew(client) {\n    const skew = client?.[clockSkew];\n    return typeof skew === 'number' && Number.isFinite(skew) ? skew : 0;\n}\nfunction getClockTolerance(client) {\n    const tolerance = client?.[clockTolerance];\n    return typeof tolerance === 'number' && Number.isFinite(tolerance) && Math.sign(tolerance) !== -1\n        ? tolerance\n        : 30;\n}\nfunction epochTime() {\n    return Math.floor(Date.now() / 1000);\n}\nfunction clientAssertion(as, client) {\n    const now = epochTime() + getClockSkew(client);\n    return {\n        jti: randomBytes(),\n        aud: [as.issuer, as.token_endpoint],\n        exp: now + 60,\n        iat: now,\n        nbf: now,\n        iss: client.client_id,\n        sub: client.client_id,\n    };\n}\nasync function privateKeyJwt(as, client, key, kid, modifyAssertion) {\n    const header = { alg: keyToJws(key), kid };\n    const payload = clientAssertion(as, client);\n    modifyAssertion?.(header, payload);\n    return jwt(header, payload, key);\n}\nfunction assertAs(as) {\n    if (typeof as !== 'object' || as === null) {\n        throw new TypeError('\"as\" must be an object');\n    }\n    if (!validateString(as.issuer)) {\n        throw new TypeError('\"as.issuer\" property must be a non-empty string');\n    }\n    return true;\n}\nfunction assertClient(client) {\n    if (typeof client !== 'object' || client === null) {\n        throw new TypeError('\"client\" must be an object');\n    }\n    if (!validateString(client.client_id)) {\n        throw new TypeError('\"client.client_id\" property must be a non-empty string');\n    }\n    return true;\n}\nfunction assertClientSecret(clientSecret) {\n    if (!validateString(clientSecret)) {\n        throw new TypeError('\"client.client_secret\" property must be a non-empty string');\n    }\n    return clientSecret;\n}\nfunction assertNoClientPrivateKey(clientAuthMethod, clientPrivateKey) {\n    if (clientPrivateKey !== undefined) {\n        throw new TypeError(`\"options.clientPrivateKey\" property must not be provided when ${clientAuthMethod} client authentication method is used.`);\n    }\n}\nfunction assertNoClientSecret(clientAuthMethod, clientSecret) {\n    if (clientSecret !== undefined) {\n        throw new TypeError(`\"client.client_secret\" property must not be provided when ${clientAuthMethod} client authentication method is used.`);\n    }\n}\nasync function clientAuthentication(as, client, body, headers, clientPrivateKey) {\n    body.delete('client_secret');\n    body.delete('client_assertion_type');\n    body.delete('client_assertion');\n    switch (client.token_endpoint_auth_method) {\n        case undefined:\n        case 'client_secret_basic': {\n            assertNoClientPrivateKey('client_secret_basic', clientPrivateKey);\n            headers.set('authorization', clientSecretBasic(client.client_id, assertClientSecret(client.client_secret)));\n            break;\n        }\n        case 'client_secret_post': {\n            assertNoClientPrivateKey('client_secret_post', clientPrivateKey);\n            body.set('client_id', client.client_id);\n            body.set('client_secret', assertClientSecret(client.client_secret));\n            break;\n        }\n        case 'private_key_jwt': {\n            assertNoClientSecret('private_key_jwt', client.client_secret);\n            if (clientPrivateKey === undefined) {\n                throw new TypeError('\"options.clientPrivateKey\" must be provided when \"client.token_endpoint_auth_method\" is \"private_key_jwt\"');\n            }\n            const { key, kid, modifyAssertion } = getKeyAndKid(clientPrivateKey);\n            if (!isPrivateKey(key)) {\n                throw new TypeError('\"options.clientPrivateKey.key\" must be a private CryptoKey');\n            }\n            body.set('client_id', client.client_id);\n            body.set('client_assertion_type', 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer');\n            body.set('client_assertion', await privateKeyJwt(as, client, key, kid, modifyAssertion));\n            break;\n        }\n        case 'tls_client_auth':\n        case 'self_signed_tls_client_auth':\n        case 'none': {\n            assertNoClientSecret(client.token_endpoint_auth_method, client.client_secret);\n            assertNoClientPrivateKey(client.token_endpoint_auth_method, clientPrivateKey);\n            body.set('client_id', client.client_id);\n            break;\n        }\n        default:\n            throw new UnsupportedOperationError('unsupported client token_endpoint_auth_method');\n    }\n}\nasync function jwt(header, payload, key) {\n    if (!key.usages.includes('sign')) {\n        throw new TypeError('CryptoKey instances used for signing assertions must include \"sign\" in their \"usages\"');\n    }\n    const input = `${b64u(buf(JSON.stringify(header)))}.${b64u(buf(JSON.stringify(payload)))}`;\n    const signature = b64u(await crypto.subtle.sign(keyToSubtle(key), key, buf(input)));\n    return `${input}.${signature}`;\n}\nasync function issueRequestObject(as, client, parameters, privateKey) {\n    assertAs(as);\n    assertClient(client);\n    parameters = new URLSearchParams(parameters);\n    const { key, kid, modifyAssertion } = getKeyAndKid(privateKey);\n    if (!isPrivateKey(key)) {\n        throw new TypeError('\"privateKey.key\" must be a private CryptoKey');\n    }\n    parameters.set('client_id', client.client_id);\n    const now = epochTime() + getClockSkew(client);\n    const claims = {\n        ...Object.fromEntries(parameters.entries()),\n        jti: randomBytes(),\n        aud: as.issuer,\n        exp: now + 60,\n        iat: now,\n        nbf: now,\n        iss: client.client_id,\n    };\n    let resource;\n    if (parameters.has('resource') &&\n        (resource = parameters.getAll('resource')) &&\n        resource.length > 1) {\n        claims.resource = resource;\n    }\n    {\n        let value = parameters.get('max_age');\n        if (value !== null) {\n            claims.max_age = parseInt(value, 10);\n            if (!Number.isFinite(claims.max_age)) {\n                throw new OPE('\"max_age\" parameter must be a number');\n            }\n        }\n    }\n    {\n        let value = parameters.get('claims');\n        if (value !== null) {\n            try {\n                claims.claims = JSON.parse(value);\n            }\n            catch (cause) {\n                throw new OPE('failed to parse the \"claims\" parameter as JSON', { cause });\n            }\n            if (!isJsonObject(claims.claims)) {\n                throw new OPE('\"claims\" parameter must be a JSON with a top level object');\n            }\n        }\n    }\n    {\n        let value = parameters.get('authorization_details');\n        if (value !== null) {\n            try {\n                claims.authorization_details = JSON.parse(value);\n            }\n            catch (cause) {\n                throw new OPE('failed to parse the \"authorization_details\" parameter as JSON', { cause });\n            }\n            if (!Array.isArray(claims.authorization_details)) {\n                throw new OPE('\"authorization_details\" parameter must be a JSON with a top level array');\n            }\n        }\n    }\n    const header = {\n        alg: keyToJws(key),\n        typ: 'oauth-authz-req+jwt',\n        kid,\n    };\n    modifyAssertion?.(header, claims);\n    return jwt(header, claims, key);\n}\nasync function dpopProofJwt(headers, options, url, htm, clockSkew, accessToken) {\n    const { privateKey, publicKey, nonce = dpopNonces.get(url.origin) } = options;\n    if (!isPrivateKey(privateKey)) {\n        throw new TypeError('\"DPoP.privateKey\" must be a private CryptoKey');\n    }\n    if (!isPublicKey(publicKey)) {\n        throw new TypeError('\"DPoP.publicKey\" must be a public CryptoKey');\n    }\n    if (nonce !== undefined && !validateString(nonce)) {\n        throw new TypeError('\"DPoP.nonce\" must be a non-empty string or undefined');\n    }\n    if (!publicKey.extractable) {\n        throw new TypeError('\"DPoP.publicKey.extractable\" must be true');\n    }\n    const now = epochTime() + clockSkew;\n    const header = {\n        alg: keyToJws(privateKey),\n        typ: 'dpop+jwt',\n        jwk: await publicJwk(publicKey),\n    };\n    const payload = {\n        iat: now,\n        jti: randomBytes(),\n        htm,\n        nonce,\n        htu: `${url.origin}${url.pathname}`,\n        ath: accessToken ? b64u(await crypto.subtle.digest('SHA-256', buf(accessToken))) : undefined,\n    };\n    options[modifyAssertion]?.(header, payload);\n    headers.set('dpop', await jwt(header, payload, privateKey));\n}\nlet jwkCache;\nasync function getSetPublicJwkCache(key) {\n    const { kty, e, n, x, y, crv } = await crypto.subtle.exportKey('jwk', key);\n    const jwk = { kty, e, n, x, y, crv };\n    jwkCache.set(key, jwk);\n    return jwk;\n}\nasync function publicJwk(key) {\n    jwkCache || (jwkCache = new WeakMap());\n    return jwkCache.get(key) || getSetPublicJwkCache(key);\n}\nfunction validateEndpoint(value, endpoint, useMtlsAlias) {\n    if (typeof value !== 'string') {\n        if (useMtlsAlias) {\n            throw new TypeError(`\"as.mtls_endpoint_aliases.${endpoint}\" must be a string`);\n        }\n        throw new TypeError(`\"as.${endpoint}\" must be a string`);\n    }\n    return new URL(value);\n}\nfunction resolveEndpoint(as, endpoint, useMtlsAlias = false) {\n    if (useMtlsAlias && as.mtls_endpoint_aliases && endpoint in as.mtls_endpoint_aliases) {\n        return validateEndpoint(as.mtls_endpoint_aliases[endpoint], endpoint, useMtlsAlias);\n    }\n    return validateEndpoint(as[endpoint], endpoint, useMtlsAlias);\n}\nfunction alias(client, options) {\n    if (client.use_mtls_endpoint_aliases || options?.[useMtlsAlias]) {\n        return true;\n    }\n    return false;\n}\nasync function pushedAuthorizationRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    const url = resolveEndpoint(as, 'pushed_authorization_request_endpoint', alias(client, options));\n    const body = new URLSearchParams(parameters);\n    body.set('client_id', client.client_id);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    if (options?.DPoP !== undefined) {\n        await dpopProofJwt(headers, options.DPoP, url, 'POST', getClockSkew(client));\n    }\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nfunction isOAuth2Error(input) {\n    const value = input;\n    if (typeof value !== 'object' || Array.isArray(value) || value === null) {\n        return false;\n    }\n    return value.error !== undefined;\n}\nfunction unquote(value) {\n    if (value.length >= 2 && value[0] === '\"' && value[value.length - 1] === '\"') {\n        return value.slice(1, -1);\n    }\n    return value;\n}\nconst SPLIT_REGEXP = /((?:,|, )?[0-9a-zA-Z!#$%&'*+-.^_`|~]+=)/;\nconst SCHEMES_REGEXP = /(?:^|, ?)([0-9a-zA-Z!#$%&'*+\\-.^_`|~]+)(?=$|[ ,])/g;\nfunction wwwAuth(scheme, params) {\n    const arr = params.split(SPLIT_REGEXP).slice(1);\n    if (!arr.length) {\n        return { scheme: scheme.toLowerCase(), parameters: {} };\n    }\n    arr[arr.length - 1] = arr[arr.length - 1].replace(/,$/, '');\n    const parameters = {};\n    for (let i = 1; i < arr.length; i += 2) {\n        const idx = i;\n        if (arr[idx][0] === '\"') {\n            while (arr[idx].slice(-1) !== '\"' && ++i < arr.length) {\n                arr[idx] += arr[i];\n            }\n        }\n        const key = arr[idx - 1].replace(/^(?:, ?)|=$/g, '').toLowerCase();\n        parameters[key] = unquote(arr[idx]);\n    }\n    return {\n        scheme: scheme.toLowerCase(),\n        parameters,\n    };\n}\nfunction parseWwwAuthenticateChallenges(response) {\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    const header = response.headers.get('www-authenticate');\n    if (header === null) {\n        return undefined;\n    }\n    const result = [];\n    for (const { 1: scheme, index } of header.matchAll(SCHEMES_REGEXP)) {\n        result.push([scheme, index]);\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    const challenges = result.map(([scheme, indexOf], i, others) => {\n        const next = others[i + 1];\n        let parameters;\n        if (next) {\n            parameters = header.slice(indexOf, next[1]);\n        }\n        else {\n            parameters = header.slice(indexOf);\n        }\n        return wwwAuth(scheme, parameters);\n    });\n    return challenges;\n}\nasync function processPushedAuthorizationResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 201) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Pushed Authorization Request Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.request_uri)) {\n        throw new OPE('\"response\" body \"request_uri\" property must be a non-empty string');\n    }\n    if (typeof json.expires_in !== 'number' || json.expires_in <= 0) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    return json;\n}\nasync function protectedResourceRequest(accessToken, method, url, headers, body, options) {\n    if (!validateString(accessToken)) {\n        throw new TypeError('\"accessToken\" must be a non-empty string');\n    }\n    if (!(url instanceof URL)) {\n        throw new TypeError('\"url\" must be an instance of URL');\n    }\n    headers = prepareHeaders(headers);\n    if (options?.DPoP === undefined) {\n        headers.set('authorization', `Bearer ${accessToken}`);\n    }\n    else {\n        await dpopProofJwt(headers, options.DPoP, url, method.toUpperCase(), getClockSkew({ [clockSkew]: options?.[clockSkew] }), accessToken);\n        headers.set('authorization', `DPoP ${accessToken}`);\n    }\n    return (options?.[customFetch] || fetch)(url.href, {\n        body,\n        headers: Object.fromEntries(headers.entries()),\n        method,\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nasync function userInfoRequest(as, client, accessToken, options) {\n    assertAs(as);\n    assertClient(client);\n    const url = resolveEndpoint(as, 'userinfo_endpoint', alias(client, options));\n    const headers = prepareHeaders(options?.headers);\n    if (client.userinfo_signed_response_alg) {\n        headers.set('accept', 'application/jwt');\n    }\n    else {\n        headers.set('accept', 'application/json');\n        headers.append('accept', 'application/jwt');\n    }\n    return protectedResourceRequest(accessToken, 'GET', url, headers, null, {\n        ...options,\n        [clockSkew]: getClockSkew(client),\n    });\n}\nlet jwksMap;\nfunction setJwksCache(as, jwks, uat, cache) {\n    jwksMap || (jwksMap = new WeakMap());\n    jwksMap.set(as, {\n        jwks,\n        uat,\n        get age() {\n            return epochTime() - this.uat;\n        },\n    });\n    if (cache) {\n        Object.assign(cache, { jwks: structuredClone(jwks), uat });\n    }\n}\nfunction isFreshJwksCache(input) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || epochTime() - input.uat >= 300) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isJsonObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isJsonObject)) {\n        return false;\n    }\n    return true;\n}\nfunction clearJwksCache(as, cache) {\n    jwksMap?.delete(as);\n    delete cache?.jwks;\n    delete cache?.uat;\n}\nasync function getPublicSigKeyFromIssuerJwksUri(as, options, header) {\n    const { alg, kid } = header;\n    checkSupportedJwsAlg(alg);\n    if (!jwksMap?.has(as) && isFreshJwksCache(options?.[jwksCache])) {\n        setJwksCache(as, options?.[jwksCache].jwks, options?.[jwksCache].uat);\n    }\n    let jwks;\n    let age;\n    if (jwksMap?.has(as)) {\n        ;\n        ({ jwks, age } = jwksMap.get(as));\n        if (age >= 300) {\n            clearJwksCache(as, options?.[jwksCache]);\n            return getPublicSigKeyFromIssuerJwksUri(as, options, header);\n        }\n    }\n    else {\n        jwks = await jwksRequest(as, options).then(processJwksResponse);\n        age = 0;\n        setJwksCache(as, jwks, epochTime(), options?.[jwksCache]);\n    }\n    let kty;\n    switch (alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            kty = 'RSA';\n            break;\n        case 'ES':\n            kty = 'EC';\n            break;\n        case 'Ed':\n            kty = 'OKP';\n            break;\n        default:\n            throw new UnsupportedOperationError();\n    }\n    const candidates = jwks.keys.filter((jwk) => {\n        if (jwk.kty !== kty) {\n            return false;\n        }\n        if (kid !== undefined && kid !== jwk.kid) {\n            return false;\n        }\n        if (jwk.alg !== undefined && alg !== jwk.alg) {\n            return false;\n        }\n        if (jwk.use !== undefined && jwk.use !== 'sig') {\n            return false;\n        }\n        if (jwk.key_ops?.includes('verify') === false) {\n            return false;\n        }\n        switch (true) {\n            case alg === 'ES256' && jwk.crv !== 'P-256':\n            case alg === 'ES384' && jwk.crv !== 'P-384':\n            case alg === 'ES512' && jwk.crv !== 'P-521':\n            case alg === 'EdDSA' && !(jwk.crv === 'Ed25519' || jwk.crv === 'Ed448'):\n                return false;\n        }\n        return true;\n    });\n    const { 0: jwk, length } = candidates;\n    if (!length) {\n        if (age >= 60) {\n            clearJwksCache(as, options?.[jwksCache]);\n            return getPublicSigKeyFromIssuerJwksUri(as, options, header);\n        }\n        throw new OPE('error when selecting a JWT verification key, no applicable keys found');\n    }\n    if (length !== 1) {\n        throw new OPE('error when selecting a JWT verification key, multiple applicable keys found, a \"kid\" JWT Header Parameter is required');\n    }\n    const key = await importJwk(alg, jwk);\n    if (key.type !== 'public') {\n        throw new OPE('jwks_uri must only contain public keys');\n    }\n    return key;\n}\nconst skipSubjectCheck = Symbol();\nfunction getContentType(response) {\n    return response.headers.get('content-type')?.split(';')[0];\n}\nasync function processUserInfoResponse(as, client, expectedSubject, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform UserInfo Endpoint response');\n    }\n    let json;\n    if (getContentType(response) === 'application/jwt') {\n        assertReadableResponse(response);\n        const { claims, jwt } = await validateJwt(await response.text(), checkSigningAlgorithm.bind(undefined, client.userinfo_signed_response_alg, as.userinfo_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n            .then(validateOptionalAudience.bind(undefined, client.client_id))\n            .then(validateOptionalIssuer.bind(undefined, as.issuer));\n        jwtResponseBodies.set(response, jwt);\n        json = claims;\n    }\n    else {\n        if (client.userinfo_signed_response_alg) {\n            throw new OPE('JWT UserInfo Response expected');\n        }\n        assertReadableResponse(response);\n        try {\n            json = await response.json();\n        }\n        catch (cause) {\n            throw new OPE('failed to parse \"response\" body as JSON', { cause });\n        }\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.sub)) {\n        throw new OPE('\"response\" body \"sub\" property must be a non-empty string');\n    }\n    switch (expectedSubject) {\n        case skipSubjectCheck:\n            break;\n        default:\n            if (!validateString(expectedSubject)) {\n                throw new OPE('\"expectedSubject\" must be a non-empty string');\n            }\n            if (json.sub !== expectedSubject) {\n                throw new OPE('unexpected \"response\" body \"sub\" value');\n            }\n    }\n    return json;\n}\nasync function authenticatedRequest(as, client, method, url, body, headers, options) {\n    await clientAuthentication(as, client, body, headers, options?.clientPrivateKey);\n    headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n    return (options?.[customFetch] || fetch)(url.href, {\n        body,\n        headers: Object.fromEntries(headers.entries()),\n        method,\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nasync function tokenEndpointRequest(as, client, grantType, parameters, options) {\n    const url = resolveEndpoint(as, 'token_endpoint', alias(client, options));\n    parameters.set('grant_type', grantType);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    if (options?.DPoP !== undefined) {\n        await dpopProofJwt(headers, options.DPoP, url, 'POST', getClockSkew(client));\n    }\n    return authenticatedRequest(as, client, 'POST', url, parameters, headers, options);\n}\nasync function refreshTokenGrantRequest(as, client, refreshToken, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(refreshToken)) {\n        throw new TypeError('\"refreshToken\" must be a non-empty string');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('refresh_token', refreshToken);\n    return tokenEndpointRequest(as, client, 'refresh_token', parameters, options);\n}\nconst idTokenClaims = new WeakMap();\nconst jwtResponseBodies = new WeakMap();\nfunction getValidatedIdTokenClaims(ref) {\n    if (!ref.id_token) {\n        return undefined;\n    }\n    const claims = idTokenClaims.get(ref);\n    if (!claims) {\n        throw new TypeError('\"ref\" was already garbage collected or did not resolve from the proper sources');\n    }\n    return claims[0];\n}\nasync function validateIdTokenSignature(as, ref, options) {\n    assertAs(as);\n    if (!idTokenClaims.has(ref)) {\n        throw new OPE('\"ref\" does not contain an ID Token to verify the signature of');\n    }\n    const { 0: protectedHeader, 1: payload, 2: encodedSignature, } = idTokenClaims.get(ref)[1].split('.');\n    const header = JSON.parse(buf(b64u(protectedHeader)));\n    if (header.alg.startsWith('HS')) {\n        throw new UnsupportedOperationError();\n    }\n    let key;\n    key = await getPublicSigKeyFromIssuerJwksUri(as, options, header);\n    await validateJwsSignature(protectedHeader, payload, key, b64u(encodedSignature));\n}\nasync function validateJwtResponseSignature(as, ref, options) {\n    assertAs(as);\n    if (!jwtResponseBodies.has(ref)) {\n        throw new OPE('\"ref\" does not contain a processed JWT Response to verify the signature of');\n    }\n    const { 0: protectedHeader, 1: payload, 2: encodedSignature, } = jwtResponseBodies.get(ref).split('.');\n    const header = JSON.parse(buf(b64u(protectedHeader)));\n    if (header.alg.startsWith('HS')) {\n        throw new UnsupportedOperationError();\n    }\n    let key;\n    key = await getPublicSigKeyFromIssuerJwksUri(as, options, header);\n    await validateJwsSignature(protectedHeader, payload, key, b64u(encodedSignature));\n}\nfunction validateJwtUserInfoSignature(as, ref, options) {\n    return validateJwtResponseSignature(as, ref, options);\n}\nfunction validateJwtIntrospectionSignature(as, ref, options) {\n    return validateJwtResponseSignature(as, ref, options);\n}\nasync function processGenericAccessTokenResponse(as, client, response, ignoreIdToken = false, ignoreRefreshToken = false) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Token Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.access_token)) {\n        throw new OPE('\"response\" body \"access_token\" property must be a non-empty string');\n    }\n    if (!validateString(json.token_type)) {\n        throw new OPE('\"response\" body \"token_type\" property must be a non-empty string');\n    }\n    json.token_type = json.token_type.toLowerCase();\n    if (json.token_type !== 'dpop' && json.token_type !== 'bearer') {\n        throw new UnsupportedOperationError('unsupported `token_type` value');\n    }\n    if (json.expires_in !== undefined &&\n        (typeof json.expires_in !== 'number' || json.expires_in <= 0)) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    if (!ignoreRefreshToken &&\n        json.refresh_token !== undefined &&\n        !validateString(json.refresh_token)) {\n        throw new OPE('\"response\" body \"refresh_token\" property must be a non-empty string');\n    }\n    if (json.scope !== undefined && typeof json.scope !== 'string') {\n        throw new OPE('\"response\" body \"scope\" property must be a string');\n    }\n    if (!ignoreIdToken) {\n        if (json.id_token !== undefined && !validateString(json.id_token)) {\n            throw new OPE('\"response\" body \"id_token\" property must be a non-empty string');\n        }\n        if (json.id_token) {\n            const { claims, jwt } = await validateJwt(json.id_token, checkSigningAlgorithm.bind(undefined, client.id_token_signed_response_alg, as.id_token_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n                .then(validatePresence.bind(undefined, ['aud', 'exp', 'iat', 'iss', 'sub']))\n                .then(validateIssuer.bind(undefined, as.issuer))\n                .then(validateAudience.bind(undefined, client.client_id));\n            if (Array.isArray(claims.aud) && claims.aud.length !== 1) {\n                if (claims.azp === undefined) {\n                    throw new OPE('ID Token \"aud\" (audience) claim includes additional untrusted audiences');\n                }\n                if (claims.azp !== client.client_id) {\n                    throw new OPE('unexpected ID Token \"azp\" (authorized party) claim value');\n                }\n            }\n            if (claims.auth_time !== undefined &&\n                (!Number.isFinite(claims.auth_time) || Math.sign(claims.auth_time) !== 1)) {\n                throw new OPE('ID Token \"auth_time\" (authentication time) must be a positive number');\n            }\n            idTokenClaims.set(json, [claims, jwt]);\n        }\n    }\n    return json;\n}\nasync function processRefreshTokenResponse(as, client, response) {\n    return processGenericAccessTokenResponse(as, client, response);\n}\nfunction validateOptionalAudience(expected, result) {\n    if (result.claims.aud !== undefined) {\n        return validateAudience(expected, result);\n    }\n    return result;\n}\nfunction validateAudience(expected, result) {\n    if (Array.isArray(result.claims.aud)) {\n        if (!result.claims.aud.includes(expected)) {\n            throw new OPE('unexpected JWT \"aud\" (audience) claim value');\n        }\n    }\n    else if (result.claims.aud !== expected) {\n        throw new OPE('unexpected JWT \"aud\" (audience) claim value');\n    }\n    return result;\n}\nfunction validateOptionalIssuer(expected, result) {\n    if (result.claims.iss !== undefined) {\n        return validateIssuer(expected, result);\n    }\n    return result;\n}\nfunction validateIssuer(expected, result) {\n    if (result.claims.iss !== expected) {\n        throw new OPE('unexpected JWT \"iss\" (issuer) claim value');\n    }\n    return result;\n}\nconst branded = new WeakSet();\nfunction brand(searchParams) {\n    branded.add(searchParams);\n    return searchParams;\n}\nasync function authorizationCodeGrantRequest(as, client, callbackParameters, redirectUri, codeVerifier, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!branded.has(callbackParameters)) {\n        throw new TypeError('\"callbackParameters\" must be an instance of URLSearchParams obtained from \"validateAuthResponse()\", or \"validateJwtAuthResponse()');\n    }\n    if (!validateString(redirectUri)) {\n        throw new TypeError('\"redirectUri\" must be a non-empty string');\n    }\n    if (!validateString(codeVerifier)) {\n        throw new TypeError('\"codeVerifier\" must be a non-empty string');\n    }\n    const code = getURLSearchParameter(callbackParameters, 'code');\n    if (!code) {\n        throw new OPE('no authorization code in \"callbackParameters\"');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('redirect_uri', redirectUri);\n    parameters.set('code_verifier', codeVerifier);\n    parameters.set('code', code);\n    return tokenEndpointRequest(as, client, 'authorization_code', parameters, options);\n}\nconst jwtClaimNames = {\n    aud: 'audience',\n    c_hash: 'code hash',\n    client_id: 'client id',\n    exp: 'expiration time',\n    iat: 'issued at',\n    iss: 'issuer',\n    jti: 'jwt id',\n    nonce: 'nonce',\n    s_hash: 'state hash',\n    sub: 'subject',\n    ath: 'access token hash',\n    htm: 'http method',\n    htu: 'http uri',\n    cnf: 'confirmation',\n};\nfunction validatePresence(required, result) {\n    for (const claim of required) {\n        if (result.claims[claim] === undefined) {\n            throw new OPE(`JWT \"${claim}\" (${jwtClaimNames[claim]}) claim missing`);\n        }\n    }\n    return result;\n}\nconst expectNoNonce = Symbol();\nconst skipAuthTimeCheck = Symbol();\nasync function processAuthorizationCodeOpenIDResponse(as, client, response, expectedNonce, maxAge) {\n    const result = await processGenericAccessTokenResponse(as, client, response);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (!validateString(result.id_token)) {\n        throw new OPE('\"response\" body \"id_token\" property must be a non-empty string');\n    }\n    maxAge ?? (maxAge = client.default_max_age ?? skipAuthTimeCheck);\n    const claims = getValidatedIdTokenClaims(result);\n    if ((client.require_auth_time || maxAge !== skipAuthTimeCheck) &&\n        claims.auth_time === undefined) {\n        throw new OPE('ID Token \"auth_time\" (authentication time) claim missing');\n    }\n    if (maxAge !== skipAuthTimeCheck) {\n        if (typeof maxAge !== 'number' || maxAge < 0) {\n            throw new TypeError('\"maxAge\" must be a non-negative number');\n        }\n        const now = epochTime() + getClockSkew(client);\n        const tolerance = getClockTolerance(client);\n        if (claims.auth_time + maxAge < now - tolerance) {\n            throw new OPE('too much time has elapsed since the last End-User authentication');\n        }\n    }\n    switch (expectedNonce) {\n        case undefined:\n        case expectNoNonce:\n            if (claims.nonce !== undefined) {\n                throw new OPE('unexpected ID Token \"nonce\" claim value');\n            }\n            break;\n        default:\n            if (!validateString(expectedNonce)) {\n                throw new TypeError('\"expectedNonce\" must be a non-empty string');\n            }\n            if (claims.nonce === undefined) {\n                throw new OPE('ID Token \"nonce\" claim missing');\n            }\n            if (claims.nonce !== expectedNonce) {\n                throw new OPE('unexpected ID Token \"nonce\" claim value');\n            }\n    }\n    return result;\n}\nasync function processAuthorizationCodeOAuth2Response(as, client, response) {\n    const result = await processGenericAccessTokenResponse(as, client, response, true);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (result.id_token !== undefined) {\n        if (typeof result.id_token === 'string' && result.id_token.length) {\n            throw new OPE('Unexpected ID Token returned, use processAuthorizationCodeOpenIDResponse() for OpenID Connect callback processing');\n        }\n        delete result.id_token;\n    }\n    return result;\n}\nfunction checkJwtType(expected, result) {\n    if (typeof result.header.typ !== 'string' || normalizeTyp(result.header.typ) !== expected) {\n        throw new OPE('unexpected JWT \"typ\" header parameter value');\n    }\n    return result;\n}\nasync function clientCredentialsGrantRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    return tokenEndpointRequest(as, client, 'client_credentials', new URLSearchParams(parameters), options);\n}\nasync function genericTokenEndpointRequest(as, client, grantType, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(grantType)) {\n        throw new TypeError('\"grantType\" must be a non-empty string');\n    }\n    return tokenEndpointRequest(as, client, grantType, new URLSearchParams(parameters), options);\n}\nasync function processClientCredentialsResponse(as, client, response) {\n    const result = await processGenericAccessTokenResponse(as, client, response, true, true);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    return result;\n}\nasync function revocationRequest(as, client, token, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(token)) {\n        throw new TypeError('\"token\" must be a non-empty string');\n    }\n    const url = resolveEndpoint(as, 'revocation_endpoint', alias(client, options));\n    const body = new URLSearchParams(options?.additionalParameters);\n    body.set('token', token);\n    const headers = prepareHeaders(options?.headers);\n    headers.delete('accept');\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nasync function processRevocationResponse(response) {\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Revocation Endpoint response');\n    }\n    return undefined;\n}\nfunction assertReadableResponse(response) {\n    if (response.bodyUsed) {\n        throw new TypeError('\"response\" body has been used already');\n    }\n}\nasync function introspectionRequest(as, client, token, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(token)) {\n        throw new TypeError('\"token\" must be a non-empty string');\n    }\n    const url = resolveEndpoint(as, 'introspection_endpoint', alias(client, options));\n    const body = new URLSearchParams(options?.additionalParameters);\n    body.set('token', token);\n    const headers = prepareHeaders(options?.headers);\n    if (options?.requestJwtResponse ?? client.introspection_signed_response_alg) {\n        headers.set('accept', 'application/token-introspection+jwt');\n    }\n    else {\n        headers.set('accept', 'application/json');\n    }\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nasync function processIntrospectionResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Introspection Endpoint response');\n    }\n    let json;\n    if (getContentType(response) === 'application/token-introspection+jwt') {\n        assertReadableResponse(response);\n        const { claims, jwt } = await validateJwt(await response.text(), checkSigningAlgorithm.bind(undefined, client.introspection_signed_response_alg, as.introspection_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n            .then(checkJwtType.bind(undefined, 'token-introspection+jwt'))\n            .then(validatePresence.bind(undefined, ['aud', 'iat', 'iss']))\n            .then(validateIssuer.bind(undefined, as.issuer))\n            .then(validateAudience.bind(undefined, client.client_id));\n        jwtResponseBodies.set(response, jwt);\n        json = claims.token_introspection;\n        if (!isJsonObject(json)) {\n            throw new OPE('JWT \"token_introspection\" claim must be a JSON object');\n        }\n    }\n    else {\n        assertReadableResponse(response);\n        try {\n            json = await response.json();\n        }\n        catch (cause) {\n            throw new OPE('failed to parse \"response\" body as JSON', { cause });\n        }\n        if (!isJsonObject(json)) {\n            throw new OPE('\"response\" body must be a top level object');\n        }\n    }\n    if (typeof json.active !== 'boolean') {\n        throw new OPE('\"response\" body \"active\" property must be a boolean');\n    }\n    return json;\n}\nasync function jwksRequest(as, options) {\n    assertAs(as);\n    const url = resolveEndpoint(as, 'jwks_uri');\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    headers.append('accept', 'application/jwk-set+json');\n    return (options?.[customFetch] || fetch)(url.href, {\n        headers: Object.fromEntries(headers.entries()),\n        method: 'GET',\n        redirect: 'manual',\n        signal: options?.signal ? signal(options.signal) : null,\n    }).then(processDpopNonce);\n}\nasync function processJwksResponse(response) {\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform JSON Web Key Set response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!Array.isArray(json.keys)) {\n        throw new OPE('\"response\" body \"keys\" property must be an array');\n    }\n    if (!Array.prototype.every.call(json.keys, isJsonObject)) {\n        throw new OPE('\"response\" body \"keys\" property members must be JWK formatted objects');\n    }\n    return json;\n}\nasync function handleOAuthBodyError(response) {\n    if (response.status > 399 && response.status < 500) {\n        assertReadableResponse(response);\n        try {\n            const json = await response.json();\n            if (isJsonObject(json) && typeof json.error === 'string' && json.error.length) {\n                if (json.error_description !== undefined && typeof json.error_description !== 'string') {\n                    delete json.error_description;\n                }\n                if (json.error_uri !== undefined && typeof json.error_uri !== 'string') {\n                    delete json.error_uri;\n                }\n                if (json.algs !== undefined && typeof json.algs !== 'string') {\n                    delete json.algs;\n                }\n                if (json.scope !== undefined && typeof json.scope !== 'string') {\n                    delete json.scope;\n                }\n                return json;\n            }\n        }\n        catch { }\n    }\n    return undefined;\n}\nfunction checkSupportedJwsAlg(alg) {\n    if (!SUPPORTED_JWS_ALGS.includes(alg)) {\n        throw new UnsupportedOperationError('unsupported JWS \"alg\" identifier');\n    }\n    return alg;\n}\nfunction checkRsaKeyAlgorithm(algorithm) {\n    if (typeof algorithm.modulusLength !== 'number' || algorithm.modulusLength < 2048) {\n        throw new OPE(`${algorithm.name} modulusLength must be at least 2048 bits`);\n    }\n}\nfunction ecdsaHashName(namedCurve) {\n    switch (namedCurve) {\n        case 'P-256':\n            return 'SHA-256';\n        case 'P-384':\n            return 'SHA-384';\n        case 'P-521':\n            return 'SHA-512';\n        default:\n            throw new UnsupportedOperationError();\n    }\n}\nfunction keyToSubtle(key) {\n    switch (key.algorithm.name) {\n        case 'ECDSA':\n            return {\n                name: key.algorithm.name,\n                hash: ecdsaHashName(key.algorithm.namedCurve),\n            };\n        case 'RSA-PSS': {\n            checkRsaKeyAlgorithm(key.algorithm);\n            switch (key.algorithm.hash.name) {\n                case 'SHA-256':\n                case 'SHA-384':\n                case 'SHA-512':\n                    return {\n                        name: key.algorithm.name,\n                        saltLength: parseInt(key.algorithm.hash.name.slice(-3), 10) >> 3,\n                    };\n                default:\n                    throw new UnsupportedOperationError();\n            }\n        }\n        case 'RSASSA-PKCS1-v1_5':\n            checkRsaKeyAlgorithm(key.algorithm);\n            return key.algorithm.name;\n        case 'Ed448':\n        case 'Ed25519':\n            return key.algorithm.name;\n    }\n    throw new UnsupportedOperationError();\n}\nconst noSignatureCheck = Symbol();\nasync function validateJwsSignature(protectedHeader, payload, key, signature) {\n    const input = `${protectedHeader}.${payload}`;\n    const verified = await crypto.subtle.verify(keyToSubtle(key), key, signature, buf(input));\n    if (!verified) {\n        throw new OPE('JWT signature verification failed');\n    }\n}\nasync function validateJwt(jws, checkAlg, getKey, clockSkew, clockTolerance, decryptJwt) {\n    let { 0: protectedHeader, 1: payload, 2: encodedSignature, length } = jws.split('.');\n    if (length === 5) {\n        if (decryptJwt !== undefined) {\n            jws = await decryptJwt(jws);\n            ({ 0: protectedHeader, 1: payload, 2: encodedSignature, length } = jws.split('.'));\n        }\n        else {\n            throw new UnsupportedOperationError('JWE structure JWTs are not supported');\n        }\n    }\n    if (length !== 3) {\n        throw new OPE('Invalid JWT');\n    }\n    let header;\n    try {\n        header = JSON.parse(buf(b64u(protectedHeader)));\n    }\n    catch (cause) {\n        throw new OPE('failed to parse JWT Header body as base64url encoded JSON', { cause });\n    }\n    if (!isJsonObject(header)) {\n        throw new OPE('JWT Header must be a top level object');\n    }\n    checkAlg(header);\n    if (header.crit !== undefined) {\n        throw new OPE('unexpected JWT \"crit\" header parameter');\n    }\n    const signature = b64u(encodedSignature);\n    let key;\n    if (getKey !== noSignatureCheck) {\n        key = await getKey(header);\n        await validateJwsSignature(protectedHeader, payload, key, signature);\n    }\n    let claims;\n    try {\n        claims = JSON.parse(buf(b64u(payload)));\n    }\n    catch (cause) {\n        throw new OPE('failed to parse JWT Payload body as base64url encoded JSON', { cause });\n    }\n    if (!isJsonObject(claims)) {\n        throw new OPE('JWT Payload must be a top level object');\n    }\n    const now = epochTime() + clockSkew;\n    if (claims.exp !== undefined) {\n        if (typeof claims.exp !== 'number') {\n            throw new OPE('unexpected JWT \"exp\" (expiration time) claim type');\n        }\n        if (claims.exp <= now - clockTolerance) {\n            throw new OPE('unexpected JWT \"exp\" (expiration time) claim value, timestamp is <= now()');\n        }\n    }\n    if (claims.iat !== undefined) {\n        if (typeof claims.iat !== 'number') {\n            throw new OPE('unexpected JWT \"iat\" (issued at) claim type');\n        }\n    }\n    if (claims.iss !== undefined) {\n        if (typeof claims.iss !== 'string') {\n            throw new OPE('unexpected JWT \"iss\" (issuer) claim type');\n        }\n    }\n    if (claims.nbf !== undefined) {\n        if (typeof claims.nbf !== 'number') {\n            throw new OPE('unexpected JWT \"nbf\" (not before) claim type');\n        }\n        if (claims.nbf > now + clockTolerance) {\n            throw new OPE('unexpected JWT \"nbf\" (not before) claim value, timestamp is > now()');\n        }\n    }\n    if (claims.aud !== undefined) {\n        if (typeof claims.aud !== 'string' && !Array.isArray(claims.aud)) {\n            throw new OPE('unexpected JWT \"aud\" (audience) claim type');\n        }\n    }\n    return { header, claims, signature, key, jwt: jws };\n}\nasync function validateJwtAuthResponse(as, client, parameters, expectedState, options) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        parameters = parameters.searchParams;\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n    }\n    const response = getURLSearchParameter(parameters, 'response');\n    if (!response) {\n        throw new OPE('\"parameters\" does not contain a JARM response');\n    }\n    const { claims } = await validateJwt(response, checkSigningAlgorithm.bind(undefined, client.authorization_signed_response_alg, as.authorization_signing_alg_values_supported), getPublicSigKeyFromIssuerJwksUri.bind(undefined, as, options), getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n        .then(validatePresence.bind(undefined, ['aud', 'exp', 'iss']))\n        .then(validateIssuer.bind(undefined, as.issuer))\n        .then(validateAudience.bind(undefined, client.client_id));\n    const result = new URLSearchParams();\n    for (const [key, value] of Object.entries(claims)) {\n        if (typeof value === 'string' && key !== 'aud') {\n            result.set(key, value);\n        }\n    }\n    return validateAuthResponse(as, client, result, expectedState);\n}\nasync function idTokenHash(alg, data, key) {\n    let algorithm;\n    switch (alg) {\n        case 'RS256':\n        case 'PS256':\n        case 'ES256':\n            algorithm = 'SHA-256';\n            break;\n        case 'RS384':\n        case 'PS384':\n        case 'ES384':\n            algorithm = 'SHA-384';\n            break;\n        case 'RS512':\n        case 'PS512':\n        case 'ES512':\n            algorithm = 'SHA-512';\n            break;\n        case 'EdDSA':\n            if (key.algorithm.name === 'Ed25519') {\n                algorithm = 'SHA-512';\n                break;\n            }\n            throw new UnsupportedOperationError();\n        default:\n            throw new UnsupportedOperationError();\n    }\n    const digest = await crypto.subtle.digest(algorithm, buf(data));\n    return b64u(digest.slice(0, digest.byteLength / 2));\n}\nasync function idTokenHashMatches(data, actual, alg, key) {\n    const expected = await idTokenHash(alg, data, key);\n    return actual === expected;\n}\nasync function validateDetachedSignatureResponse(as, client, parameters, expectedNonce, expectedState, maxAge, options) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        if (!parameters.hash.length) {\n            throw new TypeError('\"parameters\" as an instance of URL must contain a hash (fragment) with the Authorization Response parameters');\n        }\n        parameters = new URLSearchParams(parameters.hash.slice(1));\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams');\n    }\n    parameters = new URLSearchParams(parameters);\n    const id_token = getURLSearchParameter(parameters, 'id_token');\n    parameters.delete('id_token');\n    switch (expectedState) {\n        case undefined:\n        case expectNoState:\n            break;\n        default:\n            if (!validateString(expectedState)) {\n                throw new TypeError('\"expectedState\" must be a non-empty string');\n            }\n    }\n    const result = validateAuthResponse({\n        ...as,\n        authorization_response_iss_parameter_supported: false,\n    }, client, parameters, expectedState);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (!id_token) {\n        throw new OPE('\"parameters\" does not contain an ID Token');\n    }\n    const code = getURLSearchParameter(parameters, 'code');\n    if (!code) {\n        throw new OPE('\"parameters\" does not contain an Authorization Code');\n    }\n    const requiredClaims = [\n        'aud',\n        'exp',\n        'iat',\n        'iss',\n        'sub',\n        'nonce',\n        'c_hash',\n    ];\n    if (typeof expectedState === 'string') {\n        requiredClaims.push('s_hash');\n    }\n    const { claims, header, key } = await validateJwt(id_token, checkSigningAlgorithm.bind(undefined, client.id_token_signed_response_alg, as.id_token_signing_alg_values_supported), getPublicSigKeyFromIssuerJwksUri.bind(undefined, as, options), getClockSkew(client), getClockTolerance(client), client[jweDecrypt])\n        .then(validatePresence.bind(undefined, requiredClaims))\n        .then(validateIssuer.bind(undefined, as.issuer))\n        .then(validateAudience.bind(undefined, client.client_id));\n    const clockSkew = getClockSkew(client);\n    const now = epochTime() + clockSkew;\n    if (claims.iat < now - 3600) {\n        throw new OPE('unexpected JWT \"iat\" (issued at) claim value, it is too far in the past');\n    }\n    if (typeof claims.c_hash !== 'string' ||\n        (await idTokenHashMatches(code, claims.c_hash, header.alg, key)) !== true) {\n        throw new OPE('invalid ID Token \"c_hash\" (code hash) claim value');\n    }\n    if (claims.s_hash !== undefined && typeof expectedState !== 'string') {\n        throw new OPE('could not verify ID Token \"s_hash\" (state hash) claim value');\n    }\n    if (typeof expectedState === 'string' &&\n        (typeof claims.s_hash !== 'string' ||\n            (await idTokenHashMatches(expectedState, claims.s_hash, header.alg, key)) !== true)) {\n        throw new OPE('invalid ID Token \"s_hash\" (state hash) claim value');\n    }\n    if (claims.auth_time !== undefined &&\n        (!Number.isFinite(claims.auth_time) || Math.sign(claims.auth_time) !== 1)) {\n        throw new OPE('ID Token \"auth_time\" (authentication time) must be a positive number');\n    }\n    maxAge ?? (maxAge = client.default_max_age ?? skipAuthTimeCheck);\n    if ((client.require_auth_time || maxAge !== skipAuthTimeCheck) &&\n        claims.auth_time === undefined) {\n        throw new OPE('ID Token \"auth_time\" (authentication time) claim missing');\n    }\n    if (maxAge !== skipAuthTimeCheck) {\n        if (typeof maxAge !== 'number' || maxAge < 0) {\n            throw new TypeError('\"maxAge\" must be a non-negative number');\n        }\n        const now = epochTime() + getClockSkew(client);\n        const tolerance = getClockTolerance(client);\n        if (claims.auth_time + maxAge < now - tolerance) {\n            throw new OPE('too much time has elapsed since the last End-User authentication');\n        }\n    }\n    if (!validateString(expectedNonce)) {\n        throw new TypeError('\"expectedNonce\" must be a non-empty string');\n    }\n    if (claims.nonce !== expectedNonce) {\n        throw new OPE('unexpected ID Token \"nonce\" claim value');\n    }\n    if (Array.isArray(claims.aud) && claims.aud.length !== 1) {\n        if (claims.azp === undefined) {\n            throw new OPE('ID Token \"aud\" (audience) claim includes additional untrusted audiences');\n        }\n        if (claims.azp !== client.client_id) {\n            throw new OPE('unexpected ID Token \"azp\" (authorized party) claim value');\n        }\n    }\n    return result;\n}\nfunction checkSigningAlgorithm(client, issuer, header) {\n    if (client !== undefined) {\n        if (header.alg !== client) {\n            throw new OPE('unexpected JWT \"alg\" header parameter');\n        }\n        return;\n    }\n    if (Array.isArray(issuer)) {\n        if (!issuer.includes(header.alg)) {\n            throw new OPE('unexpected JWT \"alg\" header parameter');\n        }\n        return;\n    }\n    if (header.alg !== 'RS256') {\n        throw new OPE('unexpected JWT \"alg\" header parameter');\n    }\n}\nfunction getURLSearchParameter(parameters, name) {\n    const { 0: value, length } = parameters.getAll(name);\n    if (length > 1) {\n        throw new OPE(`\"${name}\" parameter must be provided only once`);\n    }\n    return value;\n}\nconst skipStateCheck = Symbol();\nconst expectNoState = Symbol();\nfunction validateAuthResponse(as, client, parameters, expectedState) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        parameters = parameters.searchParams;\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n    }\n    if (getURLSearchParameter(parameters, 'response')) {\n        throw new OPE('\"parameters\" contains a JARM response, use validateJwtAuthResponse() instead of validateAuthResponse()');\n    }\n    const iss = getURLSearchParameter(parameters, 'iss');\n    const state = getURLSearchParameter(parameters, 'state');\n    if (!iss && as.authorization_response_iss_parameter_supported) {\n        throw new OPE('response parameter \"iss\" (issuer) missing');\n    }\n    if (iss && iss !== as.issuer) {\n        throw new OPE('unexpected \"iss\" (issuer) response parameter value');\n    }\n    switch (expectedState) {\n        case undefined:\n        case expectNoState:\n            if (state !== undefined) {\n                throw new OPE('unexpected \"state\" response parameter encountered');\n            }\n            break;\n        case skipStateCheck:\n            break;\n        default:\n            if (!validateString(expectedState)) {\n                throw new OPE('\"expectedState\" must be a non-empty string');\n            }\n            if (state === undefined) {\n                throw new OPE('response parameter \"state\" missing');\n            }\n            if (state !== expectedState) {\n                throw new OPE('unexpected \"state\" response parameter value');\n            }\n    }\n    const error = getURLSearchParameter(parameters, 'error');\n    if (error) {\n        return {\n            error,\n            error_description: getURLSearchParameter(parameters, 'error_description'),\n            error_uri: getURLSearchParameter(parameters, 'error_uri'),\n        };\n    }\n    const id_token = getURLSearchParameter(parameters, 'id_token');\n    const token = getURLSearchParameter(parameters, 'token');\n    if (id_token !== undefined || token !== undefined) {\n        throw new UnsupportedOperationError('implicit and hybrid flows are not supported');\n    }\n    return brand(new URLSearchParams(parameters));\n}\nfunction algToSubtle(alg, crv) {\n    switch (alg) {\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { name: 'RSA-PSS', hash: `SHA-${alg.slice(-3)}` };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${alg.slice(-3)}` };\n        case 'ES256':\n        case 'ES384':\n            return { name: 'ECDSA', namedCurve: `P-${alg.slice(-3)}` };\n        case 'ES512':\n            return { name: 'ECDSA', namedCurve: 'P-521' };\n        case 'EdDSA': {\n            switch (crv) {\n                case 'Ed25519':\n                case 'Ed448':\n                    return crv;\n                default:\n                    throw new UnsupportedOperationError();\n            }\n        }\n        default:\n            throw new UnsupportedOperationError();\n    }\n}\nasync function importJwk(alg, jwk) {\n    const { ext, key_ops, use, ...key } = jwk;\n    return crypto.subtle.importKey('jwk', key, algToSubtle(alg, jwk.crv), true, ['verify']);\n}\nasync function deviceAuthorizationRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    const url = resolveEndpoint(as, 'device_authorization_endpoint', alias(client, options));\n    const body = new URLSearchParams(parameters);\n    body.set('client_id', client.client_id);\n    const headers = prepareHeaders(options?.headers);\n    headers.set('accept', 'application/json');\n    return authenticatedRequest(as, client, 'POST', url, body, headers, options);\n}\nasync function processDeviceAuthorizationResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!looseInstanceOf(response, Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if ((err = await handleOAuthBodyError(response))) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Device Authorization Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    }\n    catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', { cause });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.device_code)) {\n        throw new OPE('\"response\" body \"device_code\" property must be a non-empty string');\n    }\n    if (!validateString(json.user_code)) {\n        throw new OPE('\"response\" body \"user_code\" property must be a non-empty string');\n    }\n    if (!validateString(json.verification_uri)) {\n        throw new OPE('\"response\" body \"verification_uri\" property must be a non-empty string');\n    }\n    if (typeof json.expires_in !== 'number' || json.expires_in <= 0) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    if (json.verification_uri_complete !== undefined &&\n        !validateString(json.verification_uri_complete)) {\n        throw new OPE('\"response\" body \"verification_uri_complete\" property must be a non-empty string');\n    }\n    if (json.interval !== undefined && (typeof json.interval !== 'number' || json.interval <= 0)) {\n        throw new OPE('\"response\" body \"interval\" property must be a positive number');\n    }\n    return json;\n}\nasync function deviceCodeGrantRequest(as, client, deviceCode, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(deviceCode)) {\n        throw new TypeError('\"deviceCode\" must be a non-empty string');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set('device_code', deviceCode);\n    return tokenEndpointRequest(as, client, 'urn:ietf:params:oauth:grant-type:device_code', parameters, options);\n}\nasync function processDeviceCodeResponse(as, client, response) {\n    return processGenericAccessTokenResponse(as, client, response);\n}\nasync function generateKeyPair(alg, options) {\n    if (!validateString(alg)) {\n        throw new TypeError('\"alg\" must be a non-empty string');\n    }\n    const algorithm = algToSubtle(alg, alg === 'EdDSA' ? (options?.crv ?? 'Ed25519') : undefined);\n    if (alg.startsWith('PS') || alg.startsWith('RS')) {\n        Object.assign(algorithm, {\n            modulusLength: options?.modulusLength ?? 2048,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n        });\n    }\n    return crypto.subtle.generateKey(algorithm, options?.extractable ?? false, [\n        'sign',\n        'verify',\n    ]);\n}\nfunction normalizeHtu(htu) {\n    const url = new URL(htu);\n    url.search = '';\n    url.hash = '';\n    return url.href;\n}\nasync function validateDPoP(as, request, accessToken, accessTokenClaims, options) {\n    const header = request.headers.get('dpop');\n    if (header === null) {\n        throw new OPE('operation indicated DPoP use but the request has no DPoP HTTP Header');\n    }\n    if (request.headers.get('authorization')?.toLowerCase().startsWith('dpop ') === false) {\n        throw new OPE(`operation indicated DPoP use but the request's Authorization HTTP Header scheme is not DPoP`);\n    }\n    if (typeof accessTokenClaims.cnf?.jkt !== 'string') {\n        throw new OPE('operation indicated DPoP use but the JWT Access Token has no jkt confirmation claim');\n    }\n    const clockSkew = getClockSkew(options);\n    const proof = await validateJwt(header, checkSigningAlgorithm.bind(undefined, undefined, as?.dpop_signing_alg_values_supported || SUPPORTED_JWS_ALGS), async ({ jwk, alg }) => {\n        if (!jwk) {\n            throw new OPE('DPoP Proof is missing the jwk header parameter');\n        }\n        const key = await importJwk(alg, jwk);\n        if (key.type !== 'public') {\n            throw new OPE('DPoP Proof jwk header parameter must contain a public key');\n        }\n        return key;\n    }, clockSkew, getClockTolerance(options), undefined)\n        .then(checkJwtType.bind(undefined, 'dpop+jwt'))\n        .then(validatePresence.bind(undefined, ['iat', 'jti', 'ath', 'htm', 'htu']));\n    const now = epochTime() + clockSkew;\n    const diff = Math.abs(now - proof.claims.iat);\n    if (diff > 300) {\n        throw new OPE('DPoP Proof iat is not recent enough');\n    }\n    if (proof.claims.htm !== request.method) {\n        throw new OPE('DPoP Proof htm mismatch');\n    }\n    if (typeof proof.claims.htu !== 'string' ||\n        normalizeHtu(proof.claims.htu) !== normalizeHtu(request.url)) {\n        throw new OPE('DPoP Proof htu mismatch');\n    }\n    {\n        const expected = b64u(await crypto.subtle.digest('SHA-256', encoder.encode(accessToken)));\n        if (proof.claims.ath !== expected) {\n            throw new OPE('DPoP Proof ath mismatch');\n        }\n    }\n    {\n        let components;\n        switch (proof.header.jwk.kty) {\n            case 'EC':\n                components = {\n                    crv: proof.header.jwk.crv,\n                    kty: proof.header.jwk.kty,\n                    x: proof.header.jwk.x,\n                    y: proof.header.jwk.y,\n                };\n                break;\n            case 'OKP':\n                components = {\n                    crv: proof.header.jwk.crv,\n                    kty: proof.header.jwk.kty,\n                    x: proof.header.jwk.x,\n                };\n                break;\n            case 'RSA':\n                components = {\n                    e: proof.header.jwk.e,\n                    kty: proof.header.jwk.kty,\n                    n: proof.header.jwk.n,\n                };\n                break;\n            default:\n                throw new UnsupportedOperationError();\n        }\n        const expected = b64u(await crypto.subtle.digest('SHA-256', encoder.encode(JSON.stringify(components))));\n        if (accessTokenClaims.cnf.jkt !== expected) {\n            throw new OPE('JWT Access Token confirmation mismatch');\n        }\n    }\n}\nasync function validateJwtAccessToken(as, request, expectedAudience, options) {\n    assertAs(as);\n    if (!looseInstanceOf(request, Request)) {\n        throw new TypeError('\"request\" must be an instance of Request');\n    }\n    if (!validateString(expectedAudience)) {\n        throw new OPE('\"expectedAudience\" must be a non-empty string');\n    }\n    const authorization = request.headers.get('authorization');\n    if (authorization === null) {\n        throw new OPE('\"request\" is missing an Authorization HTTP Header');\n    }\n    let { 0: scheme, 1: accessToken, length } = authorization.split(' ');\n    scheme = scheme.toLowerCase();\n    switch (scheme) {\n        case 'dpop':\n        case 'bearer':\n            break;\n        default:\n            throw new UnsupportedOperationError('unsupported Authorization HTTP Header scheme');\n    }\n    if (length !== 2) {\n        throw new OPE('invalid Authorization HTTP Header format');\n    }\n    const requiredClaims = [\n        'iss',\n        'exp',\n        'aud',\n        'sub',\n        'iat',\n        'jti',\n        'client_id',\n    ];\n    if (options?.requireDPoP || scheme === 'dpop' || request.headers.has('dpop')) {\n        requiredClaims.push('cnf');\n    }\n    const { claims } = await validateJwt(accessToken, checkSigningAlgorithm.bind(undefined, undefined, SUPPORTED_JWS_ALGS), getPublicSigKeyFromIssuerJwksUri.bind(undefined, as, options), getClockSkew(options), getClockTolerance(options), undefined)\n        .then(checkJwtType.bind(undefined, 'at+jwt'))\n        .then(validatePresence.bind(undefined, requiredClaims))\n        .then(validateIssuer.bind(undefined, as.issuer))\n        .then(validateAudience.bind(undefined, expectedAudience));\n    for (const claim of ['client_id', 'jti', 'sub']) {\n        if (typeof claims[claim] !== 'string') {\n            throw new OPE(`unexpected JWT \"${claim}\" claim type`);\n        }\n    }\n    if ('cnf' in claims) {\n        if (!isJsonObject(claims.cnf)) {\n            throw new OPE('unexpected JWT \"cnf\" (confirmation) claim value');\n        }\n        const { 0: cnf, length } = Object.keys(claims.cnf);\n        if (length) {\n            if (length !== 1) {\n                throw new UnsupportedOperationError('multiple confirmation claims are not supported');\n            }\n            if (cnf !== 'jkt') {\n                throw new UnsupportedOperationError('unsupported JWT Confirmation method');\n            }\n        }\n    }\n    if (options?.requireDPoP ||\n        scheme === 'dpop' ||\n        claims.cnf?.jkt !== undefined ||\n        request.headers.has('dpop')) {\n        await validateDPoP(as, request, accessToken, claims, options);\n    }\n    return claims;\n}\nconst experimentalCustomFetch = customFetch;\nconst experimental_customFetch = customFetch;\nconst experimentalUseMtlsAlias = useMtlsAlias;\nconst experimental_useMtlsAlias = useMtlsAlias;\nconst experimental_validateDetachedSignatureResponse = (...args) => validateDetachedSignatureResponse(...args);\nconst experimental_validateJwtAccessToken = (...args) => validateJwtAccessToken(...args);\nconst validateJwtUserinfoSignature = (...args) => validateJwtUserInfoSignature(...args);\nconst experimental_jwksCache = jwksCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/oauth4webapi/build/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/property-expr/index.js":
/*!*********************************************!*\
  !*** ./node_modules/property-expr/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("/**\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\n */\n\n\nfunction Cache(maxSize) {\n  this._maxSize = maxSize\n  this.clear()\n}\nCache.prototype.clear = function () {\n  this._size = 0\n  this._values = Object.create(null)\n}\nCache.prototype.get = function (key) {\n  return this._values[key]\n}\nCache.prototype.set = function (key, value) {\n  this._size >= this._maxSize && this.clear()\n  if (!(key in this._values)) this._size++\n\n  return (this._values[key] = value)\n}\n\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\n  DIGIT_REGEX = /^\\d+$/,\n  LEAD_DIGIT_REGEX = /^\\d/,\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\n  MAX_CACHE_SIZE = 512\n\nvar pathCache = new Cache(MAX_CACHE_SIZE),\n  setCache = new Cache(MAX_CACHE_SIZE),\n  getCache = new Cache(MAX_CACHE_SIZE)\n\nvar config\n\nmodule.exports = {\n  Cache: Cache,\n\n  split: split,\n\n  normalizePath: normalizePath,\n\n  setter: function (path) {\n    var parts = normalizePath(path)\n\n    return (\n      setCache.get(path) ||\n      setCache.set(path, function setter(obj, value) {\n        var index = 0\n        var len = parts.length\n        var data = obj\n\n        while (index < len - 1) {\n          var part = parts[index]\n          if (\n            part === '__proto__' ||\n            part === 'constructor' ||\n            part === 'prototype'\n          ) {\n            return obj\n          }\n\n          data = data[parts[index++]]\n        }\n        data[parts[index]] = value\n      })\n    )\n  },\n\n  getter: function (path, safe) {\n    var parts = normalizePath(path)\n    return (\n      getCache.get(path) ||\n      getCache.set(path, function getter(data) {\n        var index = 0,\n          len = parts.length\n        while (index < len) {\n          if (data != null || !safe) data = data[parts[index++]]\n          else return\n        }\n        return data\n      })\n    )\n  },\n\n  join: function (segments) {\n    return segments.reduce(function (path, part) {\n      return (\n        path +\n        (isQuoted(part) || DIGIT_REGEX.test(part)\n          ? '[' + part + ']'\n          : (path ? '.' : '') + part)\n      )\n    }, '')\n  },\n\n  forEach: function (path, cb, thisArg) {\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\n  },\n}\n\nfunction normalizePath(path) {\n  return (\n    pathCache.get(path) ||\n    pathCache.set(\n      path,\n      split(path).map(function (part) {\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\n      })\n    )\n  )\n}\n\nfunction split(path) {\n  return path.match(SPLIT_REGEX) || ['']\n}\n\nfunction forEach(parts, iter, thisArg) {\n  var len = parts.length,\n    part,\n    idx,\n    isArray,\n    isBracket\n\n  for (idx = 0; idx < len; idx++) {\n    part = parts[idx]\n\n    if (part) {\n      if (shouldBeQuoted(part)) {\n        part = '\"' + part + '\"'\n      }\n\n      isBracket = isQuoted(part)\n      isArray = !isBracket && /^\\d+$/.test(part)\n\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\n    }\n  }\n}\n\nfunction isQuoted(str) {\n  return (\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\n  )\n}\n\nfunction hasLeadingNumber(part) {\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\n}\n\nfunction hasSpecialChars(part) {\n  return SPEC_CHAR_REGEX.test(part)\n}\n\nfunction shouldBeQuoted(part) {\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wZXJ0eS1leHByL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsSUFBSTtBQUNoRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCLFdBQVc7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xccHJvcGVydHktZXhwclxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCYXNlZCBvbiBLZW5kbyBVSSBDb3JlIGV4cHJlc3Npb24gY29kZSA8aHR0cHM6Ly9naXRodWIuY29tL3RlbGVyaWsva2VuZG8tdWktY29yZSNsaWNlbnNlLWluZm9ybWF0aW9uPlxuICovXG4ndXNlIHN0cmljdCdcblxuZnVuY3Rpb24gQ2FjaGUobWF4U2l6ZSkge1xuICB0aGlzLl9tYXhTaXplID0gbWF4U2l6ZVxuICB0aGlzLmNsZWFyKClcbn1cbkNhY2hlLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fc2l6ZSA9IDBcbiAgdGhpcy5fdmFsdWVzID0gT2JqZWN0LmNyZWF0ZShudWxsKVxufVxuQ2FjaGUucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX3ZhbHVlc1trZXldXG59XG5DYWNoZS5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgdGhpcy5fc2l6ZSA+PSB0aGlzLl9tYXhTaXplICYmIHRoaXMuY2xlYXIoKVxuICBpZiAoIShrZXkgaW4gdGhpcy5fdmFsdWVzKSkgdGhpcy5fc2l6ZSsrXG5cbiAgcmV0dXJuICh0aGlzLl92YWx1ZXNba2V5XSA9IHZhbHVlKVxufVxuXG52YXIgU1BMSVRfUkVHRVggPSAvW14uXlxcXV5bXSt8KD89XFxbXFxdfFxcLlxcLikvZyxcbiAgRElHSVRfUkVHRVggPSAvXlxcZCskLyxcbiAgTEVBRF9ESUdJVF9SRUdFWCA9IC9eXFxkLyxcbiAgU1BFQ19DSEFSX1JFR0VYID0gL1t+YCEjJCVcXF4mKis9XFwtXFxbXFxdXFxcXCc7LC97fXxcXFxcXCI6PD5cXD9dL2csXG4gIENMRUFOX1FVT1RFU19SRUdFWCA9IC9eXFxzKihbJ1wiXT8pKC4qPykoXFwxKVxccyokLyxcbiAgTUFYX0NBQ0hFX1NJWkUgPSA1MTJcblxudmFyIHBhdGhDYWNoZSA9IG5ldyBDYWNoZShNQVhfQ0FDSEVfU0laRSksXG4gIHNldENhY2hlID0gbmV3IENhY2hlKE1BWF9DQUNIRV9TSVpFKSxcbiAgZ2V0Q2FjaGUgPSBuZXcgQ2FjaGUoTUFYX0NBQ0hFX1NJWkUpXG5cbnZhciBjb25maWdcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIENhY2hlOiBDYWNoZSxcblxuICBzcGxpdDogc3BsaXQsXG5cbiAgbm9ybWFsaXplUGF0aDogbm9ybWFsaXplUGF0aCxcblxuICBzZXR0ZXI6IGZ1bmN0aW9uIChwYXRoKSB7XG4gICAgdmFyIHBhcnRzID0gbm9ybWFsaXplUGF0aChwYXRoKVxuXG4gICAgcmV0dXJuIChcbiAgICAgIHNldENhY2hlLmdldChwYXRoKSB8fFxuICAgICAgc2V0Q2FjaGUuc2V0KHBhdGgsIGZ1bmN0aW9uIHNldHRlcihvYmosIHZhbHVlKSB7XG4gICAgICAgIHZhciBpbmRleCA9IDBcbiAgICAgICAgdmFyIGxlbiA9IHBhcnRzLmxlbmd0aFxuICAgICAgICB2YXIgZGF0YSA9IG9ialxuXG4gICAgICAgIHdoaWxlIChpbmRleCA8IGxlbiAtIDEpIHtcbiAgICAgICAgICB2YXIgcGFydCA9IHBhcnRzW2luZGV4XVxuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIHBhcnQgPT09ICdfX3Byb3RvX18nIHx8XG4gICAgICAgICAgICBwYXJ0ID09PSAnY29uc3RydWN0b3InIHx8XG4gICAgICAgICAgICBwYXJ0ID09PSAncHJvdG90eXBlJ1xuICAgICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIG9ialxuICAgICAgICAgIH1cblxuICAgICAgICAgIGRhdGEgPSBkYXRhW3BhcnRzW2luZGV4KytdXVxuICAgICAgICB9XG4gICAgICAgIGRhdGFbcGFydHNbaW5kZXhdXSA9IHZhbHVlXG4gICAgICB9KVxuICAgIClcbiAgfSxcblxuICBnZXR0ZXI6IGZ1bmN0aW9uIChwYXRoLCBzYWZlKSB7XG4gICAgdmFyIHBhcnRzID0gbm9ybWFsaXplUGF0aChwYXRoKVxuICAgIHJldHVybiAoXG4gICAgICBnZXRDYWNoZS5nZXQocGF0aCkgfHxcbiAgICAgIGdldENhY2hlLnNldChwYXRoLCBmdW5jdGlvbiBnZXR0ZXIoZGF0YSkge1xuICAgICAgICB2YXIgaW5kZXggPSAwLFxuICAgICAgICAgIGxlbiA9IHBhcnRzLmxlbmd0aFxuICAgICAgICB3aGlsZSAoaW5kZXggPCBsZW4pIHtcbiAgICAgICAgICBpZiAoZGF0YSAhPSBudWxsIHx8ICFzYWZlKSBkYXRhID0gZGF0YVtwYXJ0c1tpbmRleCsrXV1cbiAgICAgICAgICBlbHNlIHJldHVyblxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXRhXG4gICAgICB9KVxuICAgIClcbiAgfSxcblxuICBqb2luOiBmdW5jdGlvbiAoc2VnbWVudHMpIHtcbiAgICByZXR1cm4gc2VnbWVudHMucmVkdWNlKGZ1bmN0aW9uIChwYXRoLCBwYXJ0KSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBwYXRoICtcbiAgICAgICAgKGlzUXVvdGVkKHBhcnQpIHx8IERJR0lUX1JFR0VYLnRlc3QocGFydClcbiAgICAgICAgICA/ICdbJyArIHBhcnQgKyAnXSdcbiAgICAgICAgICA6IChwYXRoID8gJy4nIDogJycpICsgcGFydClcbiAgICAgIClcbiAgICB9LCAnJylcbiAgfSxcblxuICBmb3JFYWNoOiBmdW5jdGlvbiAocGF0aCwgY2IsIHRoaXNBcmcpIHtcbiAgICBmb3JFYWNoKEFycmF5LmlzQXJyYXkocGF0aCkgPyBwYXRoIDogc3BsaXQocGF0aCksIGNiLCB0aGlzQXJnKVxuICB9LFxufVxuXG5mdW5jdGlvbiBub3JtYWxpemVQYXRoKHBhdGgpIHtcbiAgcmV0dXJuIChcbiAgICBwYXRoQ2FjaGUuZ2V0KHBhdGgpIHx8XG4gICAgcGF0aENhY2hlLnNldChcbiAgICAgIHBhdGgsXG4gICAgICBzcGxpdChwYXRoKS5tYXAoZnVuY3Rpb24gKHBhcnQpIHtcbiAgICAgICAgcmV0dXJuIHBhcnQucmVwbGFjZShDTEVBTl9RVU9URVNfUkVHRVgsICckMicpXG4gICAgICB9KVxuICAgIClcbiAgKVxufVxuXG5mdW5jdGlvbiBzcGxpdChwYXRoKSB7XG4gIHJldHVybiBwYXRoLm1hdGNoKFNQTElUX1JFR0VYKSB8fCBbJyddXG59XG5cbmZ1bmN0aW9uIGZvckVhY2gocGFydHMsIGl0ZXIsIHRoaXNBcmcpIHtcbiAgdmFyIGxlbiA9IHBhcnRzLmxlbmd0aCxcbiAgICBwYXJ0LFxuICAgIGlkeCxcbiAgICBpc0FycmF5LFxuICAgIGlzQnJhY2tldFxuXG4gIGZvciAoaWR4ID0gMDsgaWR4IDwgbGVuOyBpZHgrKykge1xuICAgIHBhcnQgPSBwYXJ0c1tpZHhdXG5cbiAgICBpZiAocGFydCkge1xuICAgICAgaWYgKHNob3VsZEJlUXVvdGVkKHBhcnQpKSB7XG4gICAgICAgIHBhcnQgPSAnXCInICsgcGFydCArICdcIidcbiAgICAgIH1cblxuICAgICAgaXNCcmFja2V0ID0gaXNRdW90ZWQocGFydClcbiAgICAgIGlzQXJyYXkgPSAhaXNCcmFja2V0ICYmIC9eXFxkKyQvLnRlc3QocGFydClcblxuICAgICAgaXRlci5jYWxsKHRoaXNBcmcsIHBhcnQsIGlzQnJhY2tldCwgaXNBcnJheSwgaWR4LCBwYXJ0cylcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNRdW90ZWQoc3RyKSB7XG4gIHJldHVybiAoXG4gICAgdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgJiYgc3RyICYmIFtcIidcIiwgJ1wiJ10uaW5kZXhPZihzdHIuY2hhckF0KDApKSAhPT0gLTFcbiAgKVxufVxuXG5mdW5jdGlvbiBoYXNMZWFkaW5nTnVtYmVyKHBhcnQpIHtcbiAgcmV0dXJuIHBhcnQubWF0Y2goTEVBRF9ESUdJVF9SRUdFWCkgJiYgIXBhcnQubWF0Y2goRElHSVRfUkVHRVgpXG59XG5cbmZ1bmN0aW9uIGhhc1NwZWNpYWxDaGFycyhwYXJ0KSB7XG4gIHJldHVybiBTUEVDX0NIQVJfUkVHRVgudGVzdChwYXJ0KVxufVxuXG5mdW5jdGlvbiBzaG91bGRCZVF1b3RlZChwYXJ0KSB7XG4gIHJldHVybiAhaXNRdW90ZWQocGFydCkgJiYgKGhhc0xlYWRpbmdOdW1iZXIocGFydCkgfHwgaGFzU3BlY2lhbENoYXJzKHBhcnQpKVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/property-expr/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tiny-case/index.js":
/*!*****************************************!*\
  !*** ./node_modules/tiny-case/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aW55LWNhc2UvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsOHJEQUE4ckQsRUFBRSwwS0FBMEssRUFBRTs7QUFFNTJEOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsSUFBSTtBQUNiO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcdGlueS1jYXNlXFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByZVdvcmRzID0gL1tBLVpcXHhjMC1cXHhkNlxceGQ4LVxceGRlXT9bYS16XFx4ZGYtXFx4ZjZcXHhmOC1cXHhmZl0rKD86WyfigJldKD86ZHxsbHxtfHJlfHN8dHx2ZSkpPyg/PVtcXHhhY1xceGIxXFx4ZDdcXHhmN1xceDAwLVxceDJmXFx4M2EtXFx4NDBcXHg1Yi1cXHg2MFxceDdiLVxceGJmXFx1MjAwMC1cXHUyMDZmIFxcdFxceDBiXFxmXFx4YTBcXHVmZWZmXFxuXFxyXFx1MjAyOFxcdTIwMjlcXHUxNjgwXFx1MTgwZVxcdTIwMDBcXHUyMDAxXFx1MjAwMlxcdTIwMDNcXHUyMDA0XFx1MjAwNVxcdTIwMDZcXHUyMDA3XFx1MjAwOFxcdTIwMDlcXHUyMDBhXFx1MjAyZlxcdTIwNWZcXHUzMDAwXXxbQS1aXFx4YzAtXFx4ZDZcXHhkOC1cXHhkZV18JCl8KD86W0EtWlxceGMwLVxceGQ2XFx4ZDgtXFx4ZGVdfFteXFx1ZDgwMC1cXHVkZmZmXFx4YWNcXHhiMVxceGQ3XFx4ZjdcXHgwMC1cXHgyZlxceDNhLVxceDQwXFx4NWItXFx4NjBcXHg3Yi1cXHhiZlxcdTIwMDAtXFx1MjA2ZiBcXHRcXHgwYlxcZlxceGEwXFx1ZmVmZlxcblxcclxcdTIwMjhcXHUyMDI5XFx1MTY4MFxcdTE4MGVcXHUyMDAwXFx1MjAwMVxcdTIwMDJcXHUyMDAzXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwYVxcdTIwMmZcXHUyMDVmXFx1MzAwMFxcZCtcXHUyNzAwLVxcdTI3YmZhLXpcXHhkZi1cXHhmNlxceGY4LVxceGZmQS1aXFx4YzAtXFx4ZDZcXHhkOC1cXHhkZV0pKyg/Olsn4oCZXSg/OkR8TEx8TXxSRXxTfFR8VkUpKT8oPz1bXFx4YWNcXHhiMVxceGQ3XFx4ZjdcXHgwMC1cXHgyZlxceDNhLVxceDQwXFx4NWItXFx4NjBcXHg3Yi1cXHhiZlxcdTIwMDAtXFx1MjA2ZiBcXHRcXHgwYlxcZlxceGEwXFx1ZmVmZlxcblxcclxcdTIwMjhcXHUyMDI5XFx1MTY4MFxcdTE4MGVcXHUyMDAwXFx1MjAwMVxcdTIwMDJcXHUyMDAzXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwYVxcdTIwMmZcXHUyMDVmXFx1MzAwMF18W0EtWlxceGMwLVxceGQ2XFx4ZDgtXFx4ZGVdKD86W2EtelxceGRmLVxceGY2XFx4ZjgtXFx4ZmZdfFteXFx1ZDgwMC1cXHVkZmZmXFx4YWNcXHhiMVxceGQ3XFx4ZjdcXHgwMC1cXHgyZlxceDNhLVxceDQwXFx4NWItXFx4NjBcXHg3Yi1cXHhiZlxcdTIwMDAtXFx1MjA2ZiBcXHRcXHgwYlxcZlxceGEwXFx1ZmVmZlxcblxcclxcdTIwMjhcXHUyMDI5XFx1MTY4MFxcdTE4MGVcXHUyMDAwXFx1MjAwMVxcdTIwMDJcXHUyMDAzXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwYVxcdTIwMmZcXHUyMDVmXFx1MzAwMFxcZCtcXHUyNzAwLVxcdTI3YmZhLXpcXHhkZi1cXHhmNlxceGY4LVxceGZmQS1aXFx4YzAtXFx4ZDZcXHhkOC1cXHhkZV0pfCQpfFtBLVpcXHhjMC1cXHhkNlxceGQ4LVxceGRlXT8oPzpbYS16XFx4ZGYtXFx4ZjZcXHhmOC1cXHhmZl18W15cXHVkODAwLVxcdWRmZmZcXHhhY1xceGIxXFx4ZDdcXHhmN1xceDAwLVxceDJmXFx4M2EtXFx4NDBcXHg1Yi1cXHg2MFxceDdiLVxceGJmXFx1MjAwMC1cXHUyMDZmIFxcdFxceDBiXFxmXFx4YTBcXHVmZWZmXFxuXFxyXFx1MjAyOFxcdTIwMjlcXHUxNjgwXFx1MTgwZVxcdTIwMDBcXHUyMDAxXFx1MjAwMlxcdTIwMDNcXHUyMDA0XFx1MjAwNVxcdTIwMDZcXHUyMDA3XFx1MjAwOFxcdTIwMDlcXHUyMDBhXFx1MjAyZlxcdTIwNWZcXHUzMDAwXFxkK1xcdTI3MDAtXFx1MjdiZmEtelxceGRmLVxceGY2XFx4ZjgtXFx4ZmZBLVpcXHhjMC1cXHhkNlxceGQ4LVxceGRlXSkrKD86WyfigJldKD86ZHxsbHxtfHJlfHN8dHx2ZSkpP3xbQS1aXFx4YzAtXFx4ZDZcXHhkOC1cXHhkZV0rKD86WyfigJldKD86RHxMTHxNfFJFfFN8VHxWRSkpP3xcXGQqKD86MVNUfDJORHwzUkR8KD8hWzEyM10pXFxkVEgpKD89XFxifFthLXpfXSl8XFxkKig/OjFzdHwybmR8M3JkfCg/IVsxMjNdKVxcZHRoKSg/PVxcYnxbQS1aX10pfFxcZCt8KD86W1xcdTI3MDAtXFx1MjdiZl18KD86XFx1ZDgzY1tcXHVkZGU2LVxcdWRkZmZdKXsyfXxbXFx1ZDgwMC1cXHVkYmZmXVtcXHVkYzAwLVxcdWRmZmZdKVtcXHVmZTBlXFx1ZmUwZl0/KD86W1xcdTAzMDAtXFx1MDM2ZlxcdWZlMjAtXFx1ZmUyZlxcdTIwZDAtXFx1MjBmZl18XFx1ZDgzY1tcXHVkZmZiLVxcdWRmZmZdKT8oPzpcXHUyMDBkKD86W15cXHVkODAwLVxcdWRmZmZdfCg/OlxcdWQ4M2NbXFx1ZGRlNi1cXHVkZGZmXSl7Mn18W1xcdWQ4MDAtXFx1ZGJmZl1bXFx1ZGMwMC1cXHVkZmZmXSlbXFx1ZmUwZVxcdWZlMGZdPyg/OltcXHUwMzAwLVxcdTAzNmZcXHVmZTIwLVxcdWZlMmZcXHUyMGQwLVxcdTIwZmZdfFxcdWQ4M2NbXFx1ZGZmYi1cXHVkZmZmXSk/KSovZ1xuXG5jb25zdCB3b3JkcyA9IChzdHIpID0+IHN0ci5tYXRjaChyZVdvcmRzKSB8fCBbXVxuXG5jb25zdCB1cHBlckZpcnN0ID0gKHN0cikgPT4gc3RyWzBdLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSlcblxuY29uc3Qgam9pbiA9IChzdHIsIGQpID0+IHdvcmRzKHN0cikuam9pbihkKS50b0xvd2VyQ2FzZSgpXG5cbmNvbnN0IGNhbWVsQ2FzZSA9IChzdHIpID0+XG4gIHdvcmRzKHN0cikucmVkdWNlKFxuICAgIChhY2MsIG5leHQpID0+XG4gICAgICBgJHthY2N9JHtcbiAgICAgICAgIWFjY1xuICAgICAgICAgID8gbmV4dC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgOiBuZXh0WzBdLnRvVXBwZXJDYXNlKCkgKyBuZXh0LnNsaWNlKDEpLnRvTG93ZXJDYXNlKClcbiAgICAgIH1gLFxuICAgICcnLFxuICApXG5cbmNvbnN0IHBhc2NhbENhc2UgPSAoc3RyKSA9PiB1cHBlckZpcnN0KGNhbWVsQ2FzZShzdHIpKVxuXG5jb25zdCBzbmFrZUNhc2UgPSAoc3RyKSA9PiBqb2luKHN0ciwgJ18nKVxuXG5jb25zdCBrZWJhYkNhc2UgPSAoc3RyKSA9PiBqb2luKHN0ciwgJy0nKVxuXG5jb25zdCBzZW50ZW5jZUNhc2UgPSAoc3RyKSA9PiB1cHBlckZpcnN0KGpvaW4oc3RyLCAnICcpKVxuXG5jb25zdCB0aXRsZUNhc2UgPSAoc3RyKSA9PiB3b3JkcyhzdHIpLm1hcCh1cHBlckZpcnN0KS5qb2luKCcgJylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHdvcmRzLFxuICB1cHBlckZpcnN0LFxuICBjYW1lbENhc2UsXG4gIHBhc2NhbENhc2UsXG4gIHNuYWtlQ2FzZSxcbiAga2ViYWJDYXNlLFxuICBzZW50ZW5jZUNhc2UsXG4gIHRpdGxlQ2FzZSxcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tiny-case/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/toposort/index.js":
/*!****************************************!*\
  !*** ./node_modules/toposort/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90b3Bvc29ydC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0NBQW9DLFNBQVM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxvQ0FBb0MsU0FBUztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0NBQW9DLFNBQVM7QUFDN0M7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFx0b3Bvc29ydFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIFRvcG9sb2dpY2FsIHNvcnRpbmcgZnVuY3Rpb25cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBlZGdlc1xuICogQHJldHVybnMge0FycmF5fVxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oZWRnZXMpIHtcbiAgcmV0dXJuIHRvcG9zb3J0KHVuaXF1ZU5vZGVzKGVkZ2VzKSwgZWRnZXMpXG59XG5cbm1vZHVsZS5leHBvcnRzLmFycmF5ID0gdG9wb3NvcnRcblxuZnVuY3Rpb24gdG9wb3NvcnQobm9kZXMsIGVkZ2VzKSB7XG4gIHZhciBjdXJzb3IgPSBub2Rlcy5sZW5ndGhcbiAgICAsIHNvcnRlZCA9IG5ldyBBcnJheShjdXJzb3IpXG4gICAgLCB2aXNpdGVkID0ge31cbiAgICAsIGkgPSBjdXJzb3JcbiAgICAvLyBCZXR0ZXIgZGF0YSBzdHJ1Y3R1cmVzIG1ha2UgYWxnb3JpdGhtIG11Y2ggZmFzdGVyLlxuICAgICwgb3V0Z29pbmdFZGdlcyA9IG1ha2VPdXRnb2luZ0VkZ2VzKGVkZ2VzKVxuICAgICwgbm9kZXNIYXNoID0gbWFrZU5vZGVzSGFzaChub2RlcylcblxuICAvLyBjaGVjayBmb3IgdW5rbm93biBub2Rlc1xuICBlZGdlcy5mb3JFYWNoKGZ1bmN0aW9uKGVkZ2UpIHtcbiAgICBpZiAoIW5vZGVzSGFzaC5oYXMoZWRnZVswXSkgfHwgIW5vZGVzSGFzaC5oYXMoZWRnZVsxXSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBub2RlLiBUaGVyZSBpcyBhbiB1bmtub3duIG5vZGUgaW4gdGhlIHN1cHBsaWVkIGVkZ2VzLicpXG4gICAgfVxuICB9KVxuXG4gIHdoaWxlIChpLS0pIHtcbiAgICBpZiAoIXZpc2l0ZWRbaV0pIHZpc2l0KG5vZGVzW2ldLCBpLCBuZXcgU2V0KCkpXG4gIH1cblxuICByZXR1cm4gc29ydGVkXG5cbiAgZnVuY3Rpb24gdmlzaXQobm9kZSwgaSwgcHJlZGVjZXNzb3JzKSB7XG4gICAgaWYocHJlZGVjZXNzb3JzLmhhcyhub2RlKSkge1xuICAgICAgdmFyIG5vZGVSZXBcbiAgICAgIHRyeSB7XG4gICAgICAgIG5vZGVSZXAgPSBcIiwgbm9kZSB3YXM6XCIgKyBKU09OLnN0cmluZ2lmeShub2RlKVxuICAgICAgfSBjYXRjaChlKSB7XG4gICAgICAgIG5vZGVSZXAgPSBcIlwiXG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0N5Y2xpYyBkZXBlbmRlbmN5JyArIG5vZGVSZXApXG4gICAgfVxuXG4gICAgaWYgKCFub2Rlc0hhc2guaGFzKG5vZGUpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ZvdW5kIHVua25vd24gbm9kZS4gTWFrZSBzdXJlIHRvIHByb3ZpZGVkIGFsbCBpbnZvbHZlZCBub2Rlcy4gVW5rbm93biBub2RlOiAnK0pTT04uc3RyaW5naWZ5KG5vZGUpKVxuICAgIH1cblxuICAgIGlmICh2aXNpdGVkW2ldKSByZXR1cm47XG4gICAgdmlzaXRlZFtpXSA9IHRydWVcblxuICAgIHZhciBvdXRnb2luZyA9IG91dGdvaW5nRWRnZXMuZ2V0KG5vZGUpIHx8IG5ldyBTZXQoKVxuICAgIG91dGdvaW5nID0gQXJyYXkuZnJvbShvdXRnb2luZylcblxuICAgIGlmIChpID0gb3V0Z29pbmcubGVuZ3RoKSB7XG4gICAgICBwcmVkZWNlc3NvcnMuYWRkKG5vZGUpXG4gICAgICBkbyB7XG4gICAgICAgIHZhciBjaGlsZCA9IG91dGdvaW5nWy0taV1cbiAgICAgICAgdmlzaXQoY2hpbGQsIG5vZGVzSGFzaC5nZXQoY2hpbGQpLCBwcmVkZWNlc3NvcnMpXG4gICAgICB9IHdoaWxlIChpKVxuICAgICAgcHJlZGVjZXNzb3JzLmRlbGV0ZShub2RlKVxuICAgIH1cblxuICAgIHNvcnRlZFstLWN1cnNvcl0gPSBub2RlXG4gIH1cbn1cblxuZnVuY3Rpb24gdW5pcXVlTm9kZXMoYXJyKXtcbiAgdmFyIHJlcyA9IG5ldyBTZXQoKVxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gYXJyLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgdmFyIGVkZ2UgPSBhcnJbaV1cbiAgICByZXMuYWRkKGVkZ2VbMF0pXG4gICAgcmVzLmFkZChlZGdlWzFdKVxuICB9XG4gIHJldHVybiBBcnJheS5mcm9tKHJlcylcbn1cblxuZnVuY3Rpb24gbWFrZU91dGdvaW5nRWRnZXMoYXJyKXtcbiAgdmFyIGVkZ2VzID0gbmV3IE1hcCgpXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhcnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICB2YXIgZWRnZSA9IGFycltpXVxuICAgIGlmICghZWRnZXMuaGFzKGVkZ2VbMF0pKSBlZGdlcy5zZXQoZWRnZVswXSwgbmV3IFNldCgpKVxuICAgIGlmICghZWRnZXMuaGFzKGVkZ2VbMV0pKSBlZGdlcy5zZXQoZWRnZVsxXSwgbmV3IFNldCgpKVxuICAgIGVkZ2VzLmdldChlZGdlWzBdKS5hZGQoZWRnZVsxXSlcbiAgfVxuICByZXR1cm4gZWRnZXNcbn1cblxuZnVuY3Rpb24gbWFrZU5vZGVzSGFzaChhcnIpe1xuICB2YXIgcmVzID0gbmV3IE1hcCgpXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhcnIubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICByZXMuc2V0KGFycltpXSwgaSlcbiAgfVxuICByZXR1cm4gcmVzXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/toposort/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/yup/index.esm.js":
/*!***************************************!*\
  !*** ./node_modules/yup/index.esm.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArraySchema: () => (/* binding */ ArraySchema),\n/* harmony export */   BooleanSchema: () => (/* binding */ BooleanSchema),\n/* harmony export */   DateSchema: () => (/* binding */ DateSchema),\n/* harmony export */   LazySchema: () => (/* binding */ Lazy),\n/* harmony export */   MixedSchema: () => (/* binding */ MixedSchema),\n/* harmony export */   NumberSchema: () => (/* binding */ NumberSchema),\n/* harmony export */   ObjectSchema: () => (/* binding */ ObjectSchema),\n/* harmony export */   Schema: () => (/* binding */ Schema),\n/* harmony export */   StringSchema: () => (/* binding */ StringSchema),\n/* harmony export */   TupleSchema: () => (/* binding */ TupleSchema),\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError),\n/* harmony export */   addMethod: () => (/* binding */ addMethod),\n/* harmony export */   array: () => (/* binding */ create$2),\n/* harmony export */   bool: () => (/* binding */ create$7),\n/* harmony export */   boolean: () => (/* binding */ create$7),\n/* harmony export */   date: () => (/* binding */ create$4),\n/* harmony export */   defaultLocale: () => (/* binding */ locale),\n/* harmony export */   getIn: () => (/* binding */ getIn),\n/* harmony export */   isSchema: () => (/* binding */ isSchema),\n/* harmony export */   lazy: () => (/* binding */ create),\n/* harmony export */   mixed: () => (/* binding */ create$8),\n/* harmony export */   number: () => (/* binding */ create$5),\n/* harmony export */   object: () => (/* binding */ create$3),\n/* harmony export */   printValue: () => (/* binding */ printValue),\n/* harmony export */   reach: () => (/* binding */ reach),\n/* harmony export */   ref: () => (/* binding */ create$9),\n/* harmony export */   setLocale: () => (/* binding */ setLocale),\n/* harmony export */   string: () => (/* binding */ create$6),\n/* harmony export */   tuple: () => (/* binding */ create$1)\n/* harmony export */ });\n/* harmony import */ var property_expr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! property-expr */ \"(app-pages-browser)/./node_modules/property-expr/index.js\");\n/* harmony import */ var property_expr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(property_expr__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tiny_case__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-case */ \"(app-pages-browser)/./node_modules/tiny-case/index.js\");\n/* harmony import */ var tiny_case__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tiny_case__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var toposort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! toposort */ \"(app-pages-browser)/./node_modules/toposort/index.js\");\n/* harmony import */ var toposort__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(toposort__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nconst toString = Object.prototype.toString;\nconst errorToString = Error.prototype.toString;\nconst regExpToString = RegExp.prototype.toString;\nconst symbolToString = typeof Symbol !== 'undefined' ? Symbol.prototype.toString : () => '';\nconst SYMBOL_REGEXP = /^Symbol\\((.*)\\)(.*)$/;\nfunction printNumber(val) {\n  if (val != +val) return 'NaN';\n  const isNegativeZero = val === 0 && 1 / val < 0;\n  return isNegativeZero ? '-0' : '' + val;\n}\nfunction printSimpleValue(val, quoteStrings = false) {\n  if (val == null || val === true || val === false) return '' + val;\n  const typeOf = typeof val;\n  if (typeOf === 'number') return printNumber(val);\n  if (typeOf === 'string') return quoteStrings ? `\"${val}\"` : val;\n  if (typeOf === 'function') return '[Function ' + (val.name || 'anonymous') + ']';\n  if (typeOf === 'symbol') return symbolToString.call(val).replace(SYMBOL_REGEXP, 'Symbol($1)');\n  const tag = toString.call(val).slice(8, -1);\n  if (tag === 'Date') return isNaN(val.getTime()) ? '' + val : val.toISOString(val);\n  if (tag === 'Error' || val instanceof Error) return '[' + errorToString.call(val) + ']';\n  if (tag === 'RegExp') return regExpToString.call(val);\n  return null;\n}\nfunction printValue(value, quoteStrings) {\n  let result = printSimpleValue(value, quoteStrings);\n  if (result !== null) return result;\n  return JSON.stringify(value, function (key, value) {\n    let result = printSimpleValue(this[key], quoteStrings);\n    if (result !== null) return result;\n    return value;\n  }, 2);\n}\n\nfunction toArray(value) {\n  return value == null ? [] : [].concat(value);\n}\n\nlet _Symbol$toStringTag, _Symbol$hasInstance, _Symbol$toStringTag2;\nlet strReg = /\\$\\{\\s*(\\w+)\\s*\\}/g;\n_Symbol$toStringTag = Symbol.toStringTag;\nclass ValidationErrorNoStack {\n  constructor(errorOrErrors, value, field, type) {\n    this.name = void 0;\n    this.message = void 0;\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = void 0;\n    this.inner = void 0;\n    this[_Symbol$toStringTag] = 'Error';\n    this.name = 'ValidationError';\n    this.value = value;\n    this.path = field;\n    this.type = type;\n    this.errors = [];\n    this.inner = [];\n    toArray(errorOrErrors).forEach(err => {\n      if (ValidationError.isError(err)) {\n        this.errors.push(...err.errors);\n        const innerErrors = err.inner.length ? err.inner : [err];\n        this.inner.push(...innerErrors);\n      } else {\n        this.errors.push(err);\n      }\n    });\n    this.message = this.errors.length > 1 ? `${this.errors.length} errors occurred` : this.errors[0];\n  }\n}\n_Symbol$hasInstance = Symbol.hasInstance;\n_Symbol$toStringTag2 = Symbol.toStringTag;\nclass ValidationError extends Error {\n  static formatError(message, params) {\n    // Attempt to make the path more friendly for error message interpolation.\n    const path = params.label || params.path || 'this';\n    // Store the original path under `originalPath` so it isn't lost to custom\n    // message functions; e.g., ones provided in `setLocale()` calls.\n    params = Object.assign({}, params, {\n      path,\n      originalPath: params.path\n    });\n    if (typeof message === 'string') return message.replace(strReg, (_, key) => printValue(params[key]));\n    if (typeof message === 'function') return message(params);\n    return message;\n  }\n  static isError(err) {\n    return err && err.name === 'ValidationError';\n  }\n  constructor(errorOrErrors, value, field, type, disableStack) {\n    const errorNoStack = new ValidationErrorNoStack(errorOrErrors, value, field, type);\n    if (disableStack) {\n      return errorNoStack;\n    }\n    super();\n    this.value = void 0;\n    this.path = void 0;\n    this.type = void 0;\n    this.params = void 0;\n    this.errors = [];\n    this.inner = [];\n    this[_Symbol$toStringTag2] = 'Error';\n    this.name = errorNoStack.name;\n    this.message = errorNoStack.message;\n    this.type = errorNoStack.type;\n    this.value = errorNoStack.value;\n    this.path = errorNoStack.path;\n    this.errors = errorNoStack.errors;\n    this.inner = errorNoStack.inner;\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n  }\n  static [_Symbol$hasInstance](inst) {\n    return ValidationErrorNoStack[Symbol.hasInstance](inst) || super[Symbol.hasInstance](inst);\n  }\n}\n\nlet mixed = {\n  default: '${path} is invalid',\n  required: '${path} is a required field',\n  defined: '${path} must be defined',\n  notNull: '${path} cannot be null',\n  oneOf: '${path} must be one of the following values: ${values}',\n  notOneOf: '${path} must not be one of the following values: ${values}',\n  notType: ({\n    path,\n    type,\n    value,\n    originalValue\n  }) => {\n    const castMsg = originalValue != null && originalValue !== value ? ` (cast from the value \\`${printValue(originalValue, true)}\\`).` : '.';\n    return type !== 'mixed' ? `${path} must be a \\`${type}\\` type, ` + `but the final value was: \\`${printValue(value, true)}\\`` + castMsg : `${path} must match the configured type. ` + `The validated value was: \\`${printValue(value, true)}\\`` + castMsg;\n  }\n};\nlet string = {\n  length: '${path} must be exactly ${length} characters',\n  min: '${path} must be at least ${min} characters',\n  max: '${path} must be at most ${max} characters',\n  matches: '${path} must match the following: \"${regex}\"',\n  email: '${path} must be a valid email',\n  url: '${path} must be a valid URL',\n  uuid: '${path} must be a valid UUID',\n  datetime: '${path} must be a valid ISO date-time',\n  datetime_precision: '${path} must be a valid ISO date-time with a sub-second precision of exactly ${precision} digits',\n  datetime_offset: '${path} must be a valid ISO date-time with UTC \"Z\" timezone',\n  trim: '${path} must be a trimmed string',\n  lowercase: '${path} must be a lowercase string',\n  uppercase: '${path} must be a upper case string'\n};\nlet number = {\n  min: '${path} must be greater than or equal to ${min}',\n  max: '${path} must be less than or equal to ${max}',\n  lessThan: '${path} must be less than ${less}',\n  moreThan: '${path} must be greater than ${more}',\n  positive: '${path} must be a positive number',\n  negative: '${path} must be a negative number',\n  integer: '${path} must be an integer'\n};\nlet date = {\n  min: '${path} field must be later than ${min}',\n  max: '${path} field must be at earlier than ${max}'\n};\nlet boolean = {\n  isValue: '${path} field must be ${value}'\n};\nlet object = {\n  noUnknown: '${path} field has unspecified keys: ${unknown}',\n  exact: '${path} object contains unknown properties: ${properties}'\n};\nlet array = {\n  min: '${path} field must have at least ${min} items',\n  max: '${path} field must have less than or equal to ${max} items',\n  length: '${path} must have ${length} items'\n};\nlet tuple = {\n  notType: params => {\n    const {\n      path,\n      value,\n      spec\n    } = params;\n    const typeLen = spec.types.length;\n    if (Array.isArray(value)) {\n      if (value.length < typeLen) return `${path} tuple value has too few items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n      if (value.length > typeLen) return `${path} tuple value has too many items, expected a length of ${typeLen} but got ${value.length} for value: \\`${printValue(value, true)}\\``;\n    }\n    return ValidationError.formatError(mixed.notType, params);\n  }\n};\nvar locale = Object.assign(Object.create(null), {\n  mixed,\n  string,\n  number,\n  date,\n  object,\n  array,\n  boolean,\n  tuple\n});\n\nconst isSchema = obj => obj && obj.__isYupSchema__;\n\nclass Condition {\n  static fromOptions(refs, config) {\n    if (!config.then && !config.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = config;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n    return new Condition(refs, (values, schema) => {\n      var _branch;\n      let branch = check(...values) ? then : otherwise;\n      return (_branch = branch == null ? void 0 : branch(schema)) != null ? _branch : schema;\n    });\n  }\n  constructor(refs, builder) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n    this.fn = builder;\n  }\n  resolve(base, options) {\n    let values = this.refs.map(ref =>\n    // TODO: ? operator here?\n    ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn(values, base, options);\n    if (schema === undefined ||\n    // @ts-ignore this can be base\n    schema === base) {\n      return base;\n    }\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n}\n\nconst prefixes = {\n  context: '$',\n  value: '.'\n};\nfunction create$9(key, options) {\n  return new Reference(key, options);\n}\nclass Reference {\n  constructor(key, options = {}) {\n    this.key = void 0;\n    this.isContext = void 0;\n    this.isValue = void 0;\n    this.isSibling = void 0;\n    this.path = void 0;\n    this.getter = void 0;\n    this.map = void 0;\n    if (typeof key !== 'string') throw new TypeError('ref must be a string, got: ' + key);\n    this.key = key.trim();\n    if (key === '') throw new TypeError('ref must be a non-empty string');\n    this.isContext = this.key[0] === prefixes.context;\n    this.isValue = this.key[0] === prefixes.value;\n    this.isSibling = !this.isContext && !this.isValue;\n    let prefix = this.isContext ? prefixes.context : this.isValue ? prefixes.value : '';\n    this.path = this.key.slice(prefix.length);\n    this.getter = this.path && (0,property_expr__WEBPACK_IMPORTED_MODULE_0__.getter)(this.path, true);\n    this.map = options.map;\n  }\n  getValue(value, parent, context) {\n    let result = this.isContext ? context : this.isValue ? value : parent;\n    if (this.getter) result = this.getter(result || {});\n    if (this.map) result = this.map(result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {*} value\n   * @param {Object} options\n   * @param {Object=} options.context\n   * @param {Object=} options.parent\n   */\n  cast(value, options) {\n    return this.getValue(value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n  }\n  resolve() {\n    return this;\n  }\n  describe() {\n    return {\n      type: 'ref',\n      key: this.key\n    };\n  }\n  toString() {\n    return `Ref(${this.key})`;\n  }\n  static isRef(value) {\n    return value && value.__isYupRef;\n  }\n}\n\n// @ts-ignore\nReference.prototype.__isYupRef = true;\n\nconst isAbsent = value => value == null;\n\nfunction createValidation(config) {\n  function validate({\n    value,\n    path = '',\n    options,\n    originalValue,\n    schema\n  }, panic, next) {\n    const {\n      name,\n      test,\n      params,\n      message,\n      skipAbsent\n    } = config;\n    let {\n      parent,\n      context,\n      abortEarly = schema.spec.abortEarly,\n      disableStackTrace = schema.spec.disableStackTrace\n    } = options;\n    const resolveOptions = {\n      value,\n      parent,\n      context\n    };\n    function createError(overrides = {}) {\n      const nextParams = resolveParams(Object.assign({\n        value,\n        originalValue,\n        label: schema.spec.label,\n        path: overrides.path || path,\n        spec: schema.spec,\n        disableStackTrace: overrides.disableStackTrace || disableStackTrace\n      }, params, overrides.params), resolveOptions);\n      const error = new ValidationError(ValidationError.formatError(overrides.message || message, nextParams), value, nextParams.path, overrides.type || name, nextParams.disableStackTrace);\n      error.params = nextParams;\n      return error;\n    }\n    const invalid = abortEarly ? panic : next;\n    let ctx = {\n      path,\n      parent,\n      type: name,\n      from: options.from,\n      createError,\n      resolve(item) {\n        return resolveMaybeRef(item, resolveOptions);\n      },\n      options,\n      originalValue,\n      schema\n    };\n    const handleResult = validOrError => {\n      if (ValidationError.isError(validOrError)) invalid(validOrError);else if (!validOrError) invalid(createError());else next(null);\n    };\n    const handleError = err => {\n      if (ValidationError.isError(err)) invalid(err);else panic(err);\n    };\n    const shouldSkip = skipAbsent && isAbsent(value);\n    if (shouldSkip) {\n      return handleResult(true);\n    }\n    let result;\n    try {\n      var _result;\n      result = test.call(ctx, value, ctx);\n      if (typeof ((_result = result) == null ? void 0 : _result.then) === 'function') {\n        if (options.sync) {\n          throw new Error(`Validation test of type: \"${ctx.type}\" returned a Promise during a synchronous validate. ` + `This test will finish after the validate call has returned`);\n        }\n        return Promise.resolve(result).then(handleResult, handleError);\n      }\n    } catch (err) {\n      handleError(err);\n      return;\n    }\n    handleResult(result);\n  }\n  validate.OPTIONS = config;\n  return validate;\n}\n\n// Warning: mutates the input\nfunction resolveParams(params, options) {\n  if (!params) return params;\n  for (const key of Object.keys(params)) {\n    params[key] = resolveMaybeRef(params[key], options);\n  }\n  return params;\n}\nfunction resolveMaybeRef(item, options) {\n  return Reference.isRef(item) ? item.getValue(options.value, options.parent, options.context) : item;\n}\n\nfunction getIn(schema, path, value, context = value) {\n  let parent, lastPart, lastPartDebug;\n\n  // root path: ''\n  if (!path) return {\n    parent,\n    parentPath: path,\n    schema\n  };\n  (0,property_expr__WEBPACK_IMPORTED_MODULE_0__.forEach)(path, (_part, isBracket, isArray) => {\n    let part = isBracket ? _part.slice(1, _part.length - 1) : _part;\n    schema = schema.resolve({\n      context,\n      parent,\n      value\n    });\n    let isTuple = schema.type === 'tuple';\n    let idx = isArray ? parseInt(part, 10) : 0;\n    if (schema.innerType || isTuple) {\n      if (isTuple && !isArray) throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part \"${lastPartDebug}\" must contain an index to the tuple element, e.g. \"${lastPartDebug}[0]\"`);\n      if (value && idx >= value.length) {\n        throw new Error(`Yup.reach cannot resolve an array item at index: ${_part}, in the path: ${path}. ` + `because there is no value at that index. `);\n      }\n      parent = value;\n      value = value && value[idx];\n      schema = isTuple ? schema.spec.types[idx] : schema.innerType;\n    }\n\n    // sometimes the array index part of a path doesn't exist: \"nested.arr.child\"\n    // in these cases the current part is the next schema and should be processed\n    // in this iteration. For cases where the index signature is included this\n    // check will fail and we'll handle the `child` part on the next iteration like normal\n    if (!isArray) {\n      if (!schema.fields || !schema.fields[part]) throw new Error(`The schema does not contain the path: ${path}. ` + `(failed at: ${lastPartDebug} which is a type: \"${schema.type}\")`);\n      parent = value;\n      value = value && value[part];\n      schema = schema.fields[part];\n    }\n    lastPart = part;\n    lastPartDebug = isBracket ? '[' + _part + ']' : '.' + _part;\n  });\n  return {\n    schema,\n    parent,\n    parentPath: lastPart\n  };\n}\nfunction reach(obj, path, value, context) {\n  return getIn(obj, path, value, context).schema;\n}\n\nclass ReferenceSet extends Set {\n  describe() {\n    const description = [];\n    for (const item of this.values()) {\n      description.push(Reference.isRef(item) ? item.describe() : item);\n    }\n    return description;\n  }\n  resolveAll(resolve) {\n    let result = [];\n    for (const item of this.values()) {\n      result.push(resolve(item));\n    }\n    return result;\n  }\n  clone() {\n    return new ReferenceSet(this.values());\n  }\n  merge(newItems, removeItems) {\n    const next = this.clone();\n    newItems.forEach(value => next.add(value));\n    removeItems.forEach(value => next.delete(value));\n    return next;\n  }\n}\n\n// tweaked from https://github.com/Kelin2025/nanoclone/blob/0abeb7635bda9b68ef2277093f76dbe3bf3948e1/src/index.js\nfunction clone(src, seen = new Map()) {\n  if (isSchema(src) || !src || typeof src !== 'object') return src;\n  if (seen.has(src)) return seen.get(src);\n  let copy;\n  if (src instanceof Date) {\n    // Date\n    copy = new Date(src.getTime());\n    seen.set(src, copy);\n  } else if (src instanceof RegExp) {\n    // RegExp\n    copy = new RegExp(src);\n    seen.set(src, copy);\n  } else if (Array.isArray(src)) {\n    // Array\n    copy = new Array(src.length);\n    seen.set(src, copy);\n    for (let i = 0; i < src.length; i++) copy[i] = clone(src[i], seen);\n  } else if (src instanceof Map) {\n    // Map\n    copy = new Map();\n    seen.set(src, copy);\n    for (const [k, v] of src.entries()) copy.set(k, clone(v, seen));\n  } else if (src instanceof Set) {\n    // Set\n    copy = new Set();\n    seen.set(src, copy);\n    for (const v of src) copy.add(clone(v, seen));\n  } else if (src instanceof Object) {\n    // Object\n    copy = {};\n    seen.set(src, copy);\n    for (const [k, v] of Object.entries(src)) copy[k] = clone(v, seen);\n  } else {\n    throw Error(`Unable to clone ${src}`);\n  }\n  return copy;\n}\n\n/**\n * Copied from @standard-schema/spec to avoid having a dependency on it.\n * https://github.com/standard-schema/standard-schema/blob/main/packages/spec/src/index.ts\n */\n\nfunction createStandardPath(path) {\n  if (!(path != null && path.length)) {\n    return undefined;\n  }\n\n  // Array to store the final path segments\n  const segments = [];\n  // Buffer for building the current segment\n  let currentSegment = '';\n  // Track if we're inside square brackets (array/property access)\n  let inBrackets = false;\n  // Track if we're inside quotes (for property names with special chars)\n  let inQuotes = false;\n  for (let i = 0; i < path.length; i++) {\n    const char = path[i];\n    if (char === '[' && !inQuotes) {\n      // When entering brackets, push any accumulated segment after splitting on dots\n      if (currentSegment) {\n        segments.push(...currentSegment.split('.').filter(Boolean));\n        currentSegment = '';\n      }\n      inBrackets = true;\n      continue;\n    }\n    if (char === ']' && !inQuotes) {\n      if (currentSegment) {\n        // Handle numeric indices (e.g. arr[0])\n        if (/^\\d+$/.test(currentSegment)) {\n          segments.push(currentSegment);\n        } else {\n          // Handle quoted property names (e.g. obj[\"foo.bar\"])\n          segments.push(currentSegment.replace(/^\"|\"$/g, ''));\n        }\n        currentSegment = '';\n      }\n      inBrackets = false;\n      continue;\n    }\n    if (char === '\"') {\n      // Toggle quote state for handling quoted property names\n      inQuotes = !inQuotes;\n      continue;\n    }\n    if (char === '.' && !inBrackets && !inQuotes) {\n      // On dots outside brackets/quotes, push current segment\n      if (currentSegment) {\n        segments.push(currentSegment);\n        currentSegment = '';\n      }\n      continue;\n    }\n    currentSegment += char;\n  }\n\n  // Push any remaining segment after splitting on dots\n  if (currentSegment) {\n    segments.push(...currentSegment.split('.').filter(Boolean));\n  }\n  return segments;\n}\nfunction createStandardIssues(error, parentPath) {\n  const path = parentPath ? `${parentPath}.${error.path}` : error.path;\n  return error.errors.map(err => ({\n    message: err,\n    path: createStandardPath(path)\n  }));\n}\nfunction issuesFromValidationError(error, parentPath) {\n  var _error$inner;\n  if (!((_error$inner = error.inner) != null && _error$inner.length) && error.errors.length) {\n    return createStandardIssues(error, parentPath);\n  }\n  const path = parentPath ? `${parentPath}.${error.path}` : error.path;\n  return error.inner.flatMap(err => issuesFromValidationError(err, path));\n}\n\n// If `CustomSchemaMeta` isn't extended with any keys, we'll fall back to a\n// loose Record definition allowing free form usage.\nclass Schema {\n  constructor(options) {\n    this.type = void 0;\n    this.deps = [];\n    this.tests = void 0;\n    this.transforms = void 0;\n    this.conditions = [];\n    this._mutate = void 0;\n    this.internalTests = {};\n    this._whitelist = new ReferenceSet();\n    this._blacklist = new ReferenceSet();\n    this.exclusiveTests = Object.create(null);\n    this._typeCheck = void 0;\n    this.spec = void 0;\n    this.tests = [];\n    this.transforms = [];\n    this.withMutation(() => {\n      this.typeError(mixed.notType);\n    });\n    this.type = options.type;\n    this._typeCheck = options.check;\n    this.spec = Object.assign({\n      strip: false,\n      strict: false,\n      abortEarly: true,\n      recursive: true,\n      disableStackTrace: false,\n      nullable: false,\n      optional: true,\n      coerce: true\n    }, options == null ? void 0 : options.spec);\n    this.withMutation(s => {\n      s.nonNullable();\n    });\n  }\n\n  // TODO: remove\n  get _type() {\n    return this.type;\n  }\n  clone(spec) {\n    if (this._mutate) {\n      if (spec) Object.assign(this.spec, spec);\n      return this;\n    }\n\n    // if the nested value is a schema we can skip cloning, since\n    // they are already immutable\n    const next = Object.create(Object.getPrototypeOf(this));\n\n    // @ts-expect-error this is readonly\n    next.type = this.type;\n    next._typeCheck = this._typeCheck;\n    next._whitelist = this._whitelist.clone();\n    next._blacklist = this._blacklist.clone();\n    next.internalTests = Object.assign({}, this.internalTests);\n    next.exclusiveTests = Object.assign({}, this.exclusiveTests);\n\n    // @ts-expect-error this is readonly\n    next.deps = [...this.deps];\n    next.conditions = [...this.conditions];\n    next.tests = [...this.tests];\n    next.transforms = [...this.transforms];\n    next.spec = clone(Object.assign({}, this.spec, spec));\n    return next;\n  }\n  label(label) {\n    let next = this.clone();\n    next.spec.label = label;\n    return next;\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  withMutation(fn) {\n    let before = this._mutate;\n    this._mutate = true;\n    let result = fn(this);\n    this._mutate = before;\n    return result;\n  }\n  concat(schema) {\n    if (!schema || schema === this) return this;\n    if (schema.type !== this.type && this.type !== 'mixed') throw new TypeError(`You cannot \\`concat()\\` schema's of different types: ${this.type} and ${schema.type}`);\n    let base = this;\n    let combined = schema.clone();\n    const mergedSpec = Object.assign({}, base.spec, combined.spec);\n    combined.spec = mergedSpec;\n    combined.internalTests = Object.assign({}, base.internalTests, combined.internalTests);\n\n    // manually merge the blacklist/whitelist (the other `schema` takes\n    // precedence in case of conflicts)\n    combined._whitelist = base._whitelist.merge(schema._whitelist, schema._blacklist);\n    combined._blacklist = base._blacklist.merge(schema._blacklist, schema._whitelist);\n\n    // start with the current tests\n    combined.tests = base.tests;\n    combined.exclusiveTests = base.exclusiveTests;\n\n    // manually add the new tests to ensure\n    // the deduping logic is consistent\n    combined.withMutation(next => {\n      schema.tests.forEach(fn => {\n        next.test(fn.OPTIONS);\n      });\n    });\n    combined.transforms = [...base.transforms, ...combined.transforms];\n    return combined;\n  }\n  isType(v) {\n    if (v == null) {\n      if (this.spec.nullable && v === null) return true;\n      if (this.spec.optional && v === undefined) return true;\n      return false;\n    }\n    return this._typeCheck(v);\n  }\n  resolve(options) {\n    let schema = this;\n    if (schema.conditions.length) {\n      let conditions = schema.conditions;\n      schema = schema.clone();\n      schema.conditions = [];\n      schema = conditions.reduce((prevSchema, condition) => condition.resolve(prevSchema, options), schema);\n      schema = schema.resolve(options);\n    }\n    return schema;\n  }\n  resolveOptions(options) {\n    var _options$strict, _options$abortEarly, _options$recursive, _options$disableStack;\n    return Object.assign({}, options, {\n      from: options.from || [],\n      strict: (_options$strict = options.strict) != null ? _options$strict : this.spec.strict,\n      abortEarly: (_options$abortEarly = options.abortEarly) != null ? _options$abortEarly : this.spec.abortEarly,\n      recursive: (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive,\n      disableStackTrace: (_options$disableStack = options.disableStackTrace) != null ? _options$disableStack : this.spec.disableStackTrace\n    });\n  }\n\n  /**\n   * Run the configured transform pipeline over an input value.\n   */\n\n  cast(value, options = {}) {\n    let resolvedSchema = this.resolve(Object.assign({}, options, {\n      value\n      // parent: options.parent,\n      // context: options.context,\n    }));\n\n    let allowOptionality = options.assert === 'ignore-optionality';\n    let result = resolvedSchema._cast(value, options);\n    if (options.assert !== false && !resolvedSchema.isType(result)) {\n      if (allowOptionality && isAbsent(result)) {\n        return result;\n      }\n      let formattedValue = printValue(value);\n      let formattedResult = printValue(result);\n      throw new TypeError(`The value of ${options.path || 'field'} could not be cast to a value ` + `that satisfies the schema type: \"${resolvedSchema.type}\". \\n\\n` + `attempted value: ${formattedValue} \\n` + (formattedResult !== formattedValue ? `result of cast: ${formattedResult}` : ''));\n    }\n    return result;\n  }\n  _cast(rawValue, options) {\n    let value = rawValue === undefined ? rawValue : this.transforms.reduce((prevValue, fn) => fn.call(this, prevValue, rawValue, this, options), rawValue);\n    if (value === undefined) {\n      value = this.getDefault(options);\n    }\n    return value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      path,\n      originalValue = _value,\n      strict = this.spec.strict\n    } = options;\n    let value = _value;\n    if (!strict) {\n      value = this._cast(value, Object.assign({\n        assert: false\n      }, options));\n    }\n    let initialTests = [];\n    for (let test of Object.values(this.internalTests)) {\n      if (test) initialTests.push(test);\n    }\n    this.runTests({\n      path,\n      value,\n      originalValue,\n      options,\n      tests: initialTests\n    }, panic, initialErrors => {\n      // even if we aren't ending early we can't proceed further if the types aren't correct\n      if (initialErrors.length) {\n        return next(initialErrors, value);\n      }\n      this.runTests({\n        path,\n        value,\n        originalValue,\n        options,\n        tests: this.tests\n      }, panic, next);\n    });\n  }\n\n  /**\n   * Executes a set of validations, either schema, produced Tests or a nested\n   * schema validate result.\n   */\n  runTests(runOptions, panic, next) {\n    let fired = false;\n    let {\n      tests,\n      value,\n      originalValue,\n      path,\n      options\n    } = runOptions;\n    let panicOnce = arg => {\n      if (fired) return;\n      fired = true;\n      panic(arg, value);\n    };\n    let nextOnce = arg => {\n      if (fired) return;\n      fired = true;\n      next(arg, value);\n    };\n    let count = tests.length;\n    let nestedErrors = [];\n    if (!count) return nextOnce([]);\n    let args = {\n      value,\n      originalValue,\n      path,\n      options,\n      schema: this\n    };\n    for (let i = 0; i < tests.length; i++) {\n      const test = tests[i];\n      test(args, panicOnce, function finishTestRun(err) {\n        if (err) {\n          Array.isArray(err) ? nestedErrors.push(...err) : nestedErrors.push(err);\n        }\n        if (--count <= 0) {\n          nextOnce(nestedErrors);\n        }\n      });\n    }\n  }\n  asNestedTest({\n    key,\n    index,\n    parent,\n    parentPath,\n    originalParent,\n    options\n  }) {\n    const k = key != null ? key : index;\n    if (k == null) {\n      throw TypeError('Must include `key` or `index` for nested validations');\n    }\n    const isIndex = typeof k === 'number';\n    let value = parent[k];\n    const testOptions = Object.assign({}, options, {\n      // Nested validations fields are always strict:\n      //    1. parent isn't strict so the casting will also have cast inner values\n      //    2. parent is strict in which case the nested values weren't cast either\n      strict: true,\n      parent,\n      value,\n      originalValue: originalParent[k],\n      // FIXME: tests depend on `index` being passed around deeply,\n      //   we should not let the options.key/index bleed through\n      key: undefined,\n      // index: undefined,\n      [isIndex ? 'index' : 'key']: k,\n      path: isIndex || k.includes('.') ? `${parentPath || ''}[${isIndex ? k : `\"${k}\"`}]` : (parentPath ? `${parentPath}.` : '') + key\n    });\n    return (_, panic, next) => this.resolve(testOptions)._validate(value, testOptions, panic, next);\n  }\n  validate(value, options) {\n    var _options$disableStack2;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let disableStackTrace = (_options$disableStack2 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack2 : schema.spec.disableStackTrace;\n    return new Promise((resolve, reject) => schema._validate(value, options, (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      reject(error);\n    }, (errors, validated) => {\n      if (errors.length) reject(new ValidationError(errors, validated, undefined, undefined, disableStackTrace));else resolve(validated);\n    }));\n  }\n  validateSync(value, options) {\n    var _options$disableStack3;\n    let schema = this.resolve(Object.assign({}, options, {\n      value\n    }));\n    let result;\n    let disableStackTrace = (_options$disableStack3 = options == null ? void 0 : options.disableStackTrace) != null ? _options$disableStack3 : schema.spec.disableStackTrace;\n    schema._validate(value, Object.assign({}, options, {\n      sync: true\n    }), (error, parsed) => {\n      if (ValidationError.isError(error)) error.value = parsed;\n      throw error;\n    }, (errors, validated) => {\n      if (errors.length) throw new ValidationError(errors, value, undefined, undefined, disableStackTrace);\n      result = validated;\n    });\n    return result;\n  }\n  isValid(value, options) {\n    return this.validate(value, options).then(() => true, err => {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    });\n  }\n  isValidSync(value, options) {\n    try {\n      this.validateSync(value, options);\n      return true;\n    } catch (err) {\n      if (ValidationError.isError(err)) return false;\n      throw err;\n    }\n  }\n  _getDefault(options) {\n    let defaultValue = this.spec.default;\n    if (defaultValue == null) {\n      return defaultValue;\n    }\n    return typeof defaultValue === 'function' ? defaultValue.call(this, options) : clone(defaultValue);\n  }\n  getDefault(options\n  // If schema is defaulted we know it's at least not undefined\n  ) {\n    let schema = this.resolve(options || {});\n    return schema._getDefault(options);\n  }\n  default(def) {\n    if (arguments.length === 0) {\n      return this._getDefault();\n    }\n    let next = this.clone({\n      default: def\n    });\n    return next;\n  }\n  strict(isStrict = true) {\n    return this.clone({\n      strict: isStrict\n    });\n  }\n  nullability(nullable, message) {\n    const next = this.clone({\n      nullable\n    });\n    next.internalTests.nullable = createValidation({\n      message,\n      name: 'nullable',\n      test(value) {\n        return value === null ? this.schema.spec.nullable : true;\n      }\n    });\n    return next;\n  }\n  optionality(optional, message) {\n    const next = this.clone({\n      optional\n    });\n    next.internalTests.optionality = createValidation({\n      message,\n      name: 'optionality',\n      test(value) {\n        return value === undefined ? this.schema.spec.optional : true;\n      }\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  defined(message = mixed.defined) {\n    return this.optionality(false, message);\n  }\n  nullable() {\n    return this.nullability(true);\n  }\n  nonNullable(message = mixed.notNull) {\n    return this.nullability(false, message);\n  }\n  required(message = mixed.required) {\n    return this.clone().withMutation(next => next.nonNullable(message).defined(message));\n  }\n  notRequired() {\n    return this.clone().withMutation(next => next.nullable().optional());\n  }\n  transform(fn) {\n    let next = this.clone();\n    next.transforms.push(fn);\n    return next;\n  }\n\n  /**\n   * Adds a test function to the schema's queue of tests.\n   * tests can be exclusive or non-exclusive.\n   *\n   * - exclusive tests, will replace any existing tests of the same name.\n   * - non-exclusive: can be stacked\n   *\n   * If a non-exclusive test is added to a schema with an exclusive test of the same name\n   * the exclusive test is removed and further tests of the same name will be stacked.\n   *\n   * If an exclusive test is added to a schema with non-exclusive tests of the same name\n   * the previous tests are removed and further tests of the same name will replace each other.\n   */\n\n  test(...args) {\n    let opts;\n    if (args.length === 1) {\n      if (typeof args[0] === 'function') {\n        opts = {\n          test: args[0]\n        };\n      } else {\n        opts = args[0];\n      }\n    } else if (args.length === 2) {\n      opts = {\n        name: args[0],\n        test: args[1]\n      };\n    } else {\n      opts = {\n        name: args[0],\n        message: args[1],\n        test: args[2]\n      };\n    }\n    if (opts.message === undefined) opts.message = mixed.default;\n    if (typeof opts.test !== 'function') throw new TypeError('`test` is a required parameters');\n    let next = this.clone();\n    let validate = createValidation(opts);\n    let isExclusive = opts.exclusive || opts.name && next.exclusiveTests[opts.name] === true;\n    if (opts.exclusive) {\n      if (!opts.name) throw new TypeError('Exclusive tests must provide a unique `name` identifying the test');\n    }\n    if (opts.name) next.exclusiveTests[opts.name] = !!opts.exclusive;\n    next.tests = next.tests.filter(fn => {\n      if (fn.OPTIONS.name === opts.name) {\n        if (isExclusive) return false;\n        if (fn.OPTIONS.test === validate.OPTIONS.test) return false;\n      }\n      return true;\n    });\n    next.tests.push(validate);\n    return next;\n  }\n  when(keys, options) {\n    if (!Array.isArray(keys) && typeof keys !== 'string') {\n      options = keys;\n      keys = '.';\n    }\n    let next = this.clone();\n    let deps = toArray(keys).map(key => new Reference(key));\n    deps.forEach(dep => {\n      // @ts-ignore readonly array\n      if (dep.isSibling) next.deps.push(dep.key);\n    });\n    next.conditions.push(typeof options === 'function' ? new Condition(deps, options) : Condition.fromOptions(deps, options));\n    return next;\n  }\n  typeError(message) {\n    let next = this.clone();\n    next.internalTests.typeError = createValidation({\n      message,\n      name: 'typeError',\n      skipAbsent: true,\n      test(value) {\n        if (!this.schema._typeCheck(value)) return this.createError({\n          params: {\n            type: this.schema.type\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  oneOf(enums, message = mixed.oneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._whitelist.add(val);\n      next._blacklist.delete(val);\n    });\n    next.internalTests.whiteList = createValidation({\n      message,\n      name: 'oneOf',\n      skipAbsent: true,\n      test(value) {\n        let valids = this.schema._whitelist;\n        let resolved = valids.resolveAll(this.resolve);\n        return resolved.includes(value) ? true : this.createError({\n          params: {\n            values: Array.from(valids).join(', '),\n            resolved\n          }\n        });\n      }\n    });\n    return next;\n  }\n  notOneOf(enums, message = mixed.notOneOf) {\n    let next = this.clone();\n    enums.forEach(val => {\n      next._blacklist.add(val);\n      next._whitelist.delete(val);\n    });\n    next.internalTests.blacklist = createValidation({\n      message,\n      name: 'notOneOf',\n      test(value) {\n        let invalids = this.schema._blacklist;\n        let resolved = invalids.resolveAll(this.resolve);\n        if (resolved.includes(value)) return this.createError({\n          params: {\n            values: Array.from(invalids).join(', '),\n            resolved\n          }\n        });\n        return true;\n      }\n    });\n    return next;\n  }\n  strip(strip = true) {\n    let next = this.clone();\n    next.spec.strip = strip;\n    return next;\n  }\n\n  /**\n   * Return a serialized description of the schema including validations, flags, types etc.\n   *\n   * @param options Provide any needed context for resolving runtime schema alterations (lazy, when conditions, etc).\n   */\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const {\n      label,\n      meta,\n      optional,\n      nullable\n    } = next.spec;\n    const description = {\n      meta,\n      label,\n      optional,\n      nullable,\n      default: next.getDefault(options),\n      type: next.type,\n      oneOf: next._whitelist.describe(),\n      notOneOf: next._blacklist.describe(),\n      tests: next.tests.filter((n, idx, list) => list.findIndex(c => c.OPTIONS.name === n.OPTIONS.name) === idx).map(fn => {\n        const params = fn.OPTIONS.params && options ? resolveParams(Object.assign({}, fn.OPTIONS.params), options) : fn.OPTIONS.params;\n        return {\n          name: fn.OPTIONS.name,\n          params\n        };\n      })\n    };\n    return description;\n  }\n  get ['~standard']() {\n    const schema = this;\n    const standard = {\n      version: 1,\n      vendor: 'yup',\n      async validate(value) {\n        try {\n          const result = await schema.validate(value, {\n            abortEarly: false\n          });\n          return {\n            value: result\n          };\n        } catch (err) {\n          if (err instanceof ValidationError) {\n            return {\n              issues: issuesFromValidationError(err)\n            };\n          }\n          throw err;\n        }\n      }\n    };\n    return standard;\n  }\n}\n// @ts-expect-error\nSchema.prototype.__isYupSchema__ = true;\nfor (const method of ['validate', 'validateSync']) Schema.prototype[`${method}At`] = function (path, value, options = {}) {\n  const {\n    parent,\n    parentPath,\n    schema\n  } = getIn(this, path, value, options.context);\n  return schema[method](parent && parent[parentPath], Object.assign({}, options, {\n    parent,\n    path\n  }));\n};\nfor (const alias of ['equals', 'is']) Schema.prototype[alias] = Schema.prototype.oneOf;\nfor (const alias of ['not', 'nope']) Schema.prototype[alias] = Schema.prototype.notOneOf;\n\nconst returnsTrue = () => true;\nfunction create$8(spec) {\n  return new MixedSchema(spec);\n}\nclass MixedSchema extends Schema {\n  constructor(spec) {\n    super(typeof spec === 'function' ? {\n      type: 'mixed',\n      check: spec\n    } : Object.assign({\n      type: 'mixed',\n      check: returnsTrue\n    }, spec));\n  }\n}\ncreate$8.prototype = MixedSchema.prototype;\n\nfunction create$7() {\n  return new BooleanSchema();\n}\nclass BooleanSchema extends Schema {\n  constructor() {\n    super({\n      type: 'boolean',\n      check(v) {\n        if (v instanceof Boolean) v = v.valueOf();\n        return typeof v === 'boolean';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw) => {\n        if (this.spec.coerce && !this.isType(value)) {\n          if (/^(true|1)$/i.test(String(value))) return true;\n          if (/^(false|0)$/i.test(String(value))) return false;\n        }\n        return value;\n      });\n    });\n  }\n  isTrue(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  }\n  isFalse(message = boolean.isValue) {\n    return this.test({\n      message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n  default(def) {\n    return super.default(def);\n  }\n  defined(msg) {\n    return super.defined(msg);\n  }\n  optional() {\n    return super.optional();\n  }\n  required(msg) {\n    return super.required(msg);\n  }\n  notRequired() {\n    return super.notRequired();\n  }\n  nullable() {\n    return super.nullable();\n  }\n  nonNullable(msg) {\n    return super.nonNullable(msg);\n  }\n  strip(v) {\n    return super.strip(v);\n  }\n}\ncreate$7.prototype = BooleanSchema.prototype;\n\n/**\n * This file is a modified version of the file from the following repository:\n * Date.parse with progressive enhancement for ISO 8601 <https://github.com/csnover/js-iso8601>\n * NON-CONFORMANT EDITION.\n * © 2011 Colin Snover <http://zetafleet.com>\n * Released under MIT license.\n */\n\n// prettier-ignore\n//                1 YYYY                2 MM        3 DD              4 HH     5 mm        6 ss           7 msec         8 Z 9 ±   10 tzHH    11 tzmm\nconst isoReg = /^(\\d{4}|[+-]\\d{6})(?:-?(\\d{2})(?:-?(\\d{2}))?)?(?:[ T]?(\\d{2}):?(\\d{2})(?::?(\\d{2})(?:[,.](\\d{1,}))?)?(?:(Z)|([+-])(\\d{2})(?::?(\\d{2}))?)?)?$/;\nfunction parseIsoDate(date) {\n  const struct = parseDateStruct(date);\n  if (!struct) return Date.parse ? Date.parse(date) : Number.NaN;\n\n  // timestamps without timezone identifiers should be considered local time\n  if (struct.z === undefined && struct.plusMinus === undefined) {\n    return new Date(struct.year, struct.month, struct.day, struct.hour, struct.minute, struct.second, struct.millisecond).valueOf();\n  }\n  let totalMinutesOffset = 0;\n  if (struct.z !== 'Z' && struct.plusMinus !== undefined) {\n    totalMinutesOffset = struct.hourOffset * 60 + struct.minuteOffset;\n    if (struct.plusMinus === '+') totalMinutesOffset = 0 - totalMinutesOffset;\n  }\n  return Date.UTC(struct.year, struct.month, struct.day, struct.hour, struct.minute + totalMinutesOffset, struct.second, struct.millisecond);\n}\nfunction parseDateStruct(date) {\n  var _regexResult$7$length, _regexResult$;\n  const regexResult = isoReg.exec(date);\n  if (!regexResult) return null;\n\n  // use of toNumber() avoids NaN timestamps caused by “undefined”\n  // values being passed to Date constructor\n  return {\n    year: toNumber(regexResult[1]),\n    month: toNumber(regexResult[2], 1) - 1,\n    day: toNumber(regexResult[3], 1),\n    hour: toNumber(regexResult[4]),\n    minute: toNumber(regexResult[5]),\n    second: toNumber(regexResult[6]),\n    millisecond: regexResult[7] ?\n    // allow arbitrary sub-second precision beyond milliseconds\n    toNumber(regexResult[7].substring(0, 3)) : 0,\n    precision: (_regexResult$7$length = (_regexResult$ = regexResult[7]) == null ? void 0 : _regexResult$.length) != null ? _regexResult$7$length : undefined,\n    z: regexResult[8] || undefined,\n    plusMinus: regexResult[9] || undefined,\n    hourOffset: toNumber(regexResult[10]),\n    minuteOffset: toNumber(regexResult[11])\n  };\n}\nfunction toNumber(str, defaultValue = 0) {\n  return Number(str) || defaultValue;\n}\n\n// Taken from HTML spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nlet rEmail =\n// eslint-disable-next-line\n/^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\nlet rUrl =\n// eslint-disable-next-line\n/^((https?|ftp):)?\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i;\n\n// eslint-disable-next-line\nlet rUUID = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nlet yearMonthDay = '^\\\\d{4}-\\\\d{2}-\\\\d{2}';\nlet hourMinuteSecond = '\\\\d{2}:\\\\d{2}:\\\\d{2}';\nlet zOrOffset = '(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)';\nlet rIsoDateTime = new RegExp(`${yearMonthDay}T${hourMinuteSecond}(\\\\.\\\\d+)?${zOrOffset}$`);\nlet isTrimmed = value => isAbsent(value) || value === value.trim();\nlet objStringTag = {}.toString();\nfunction create$6() {\n  return new StringSchema();\n}\nclass StringSchema extends Schema {\n  constructor() {\n    super({\n      type: 'string',\n      check(value) {\n        if (value instanceof String) value = value.valueOf();\n        return typeof value === 'string';\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw) => {\n        if (!this.spec.coerce || this.isType(value)) return value;\n\n        // don't ever convert arrays\n        if (Array.isArray(value)) return value;\n        const strValue = value != null && value.toString ? value.toString() : value;\n\n        // no one wants plain objects converted to [Object object]\n        if (strValue === objStringTag) return value;\n        return strValue;\n      });\n    });\n  }\n  required(message) {\n    return super.required(message).withMutation(schema => schema.test({\n      message: message || mixed.required,\n      name: 'required',\n      skipAbsent: true,\n      test: value => !!value.length\n    }));\n  }\n  notRequired() {\n    return super.notRequired().withMutation(schema => {\n      schema.tests = schema.tests.filter(t => t.OPTIONS.name !== 'required');\n      return schema;\n    });\n  }\n  length(length, message = string.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message = string.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = string.max) {\n    return this.test({\n      name: 'max',\n      exclusive: true,\n      message,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  matches(regex, options) {\n    let excludeEmptyString = false;\n    let message;\n    let name;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          excludeEmptyString = false,\n          message,\n          name\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.test({\n      name: name || 'matches',\n      message: message || string.matches,\n      params: {\n        regex\n      },\n      skipAbsent: true,\n      test: value => value === '' && excludeEmptyString || value.search(regex) !== -1\n    });\n  }\n  email(message = string.email) {\n    return this.matches(rEmail, {\n      name: 'email',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  url(message = string.url) {\n    return this.matches(rUrl, {\n      name: 'url',\n      message,\n      excludeEmptyString: true\n    });\n  }\n  uuid(message = string.uuid) {\n    return this.matches(rUUID, {\n      name: 'uuid',\n      message,\n      excludeEmptyString: false\n    });\n  }\n  datetime(options) {\n    let message = '';\n    let allowOffset;\n    let precision;\n    if (options) {\n      if (typeof options === 'object') {\n        ({\n          message = '',\n          allowOffset = false,\n          precision = undefined\n        } = options);\n      } else {\n        message = options;\n      }\n    }\n    return this.matches(rIsoDateTime, {\n      name: 'datetime',\n      message: message || string.datetime,\n      excludeEmptyString: true\n    }).test({\n      name: 'datetime_offset',\n      message: message || string.datetime_offset,\n      params: {\n        allowOffset\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || allowOffset) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return !!struct.z;\n      }\n    }).test({\n      name: 'datetime_precision',\n      message: message || string.datetime_precision,\n      params: {\n        precision\n      },\n      skipAbsent: true,\n      test: value => {\n        if (!value || precision == undefined) return true;\n        const struct = parseDateStruct(value);\n        if (!struct) return false;\n        return struct.precision === precision;\n      }\n    });\n  }\n\n  //-- transforms --\n  ensure() {\n    return this.default('').transform(val => val === null ? '' : val);\n  }\n  trim(message = string.trim) {\n    return this.transform(val => val != null ? val.trim() : val).test({\n      message,\n      name: 'trim',\n      test: isTrimmed\n    });\n  }\n  lowercase(message = string.lowercase) {\n    return this.transform(value => !isAbsent(value) ? value.toLowerCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toLowerCase()\n    });\n  }\n  uppercase(message = string.uppercase) {\n    return this.transform(value => !isAbsent(value) ? value.toUpperCase() : value).test({\n      message,\n      name: 'string_case',\n      exclusive: true,\n      skipAbsent: true,\n      test: value => isAbsent(value) || value === value.toUpperCase()\n    });\n  }\n}\ncreate$6.prototype = StringSchema.prototype;\n\n//\n// String Interfaces\n//\n\nlet isNaN$1 = value => value != +value;\nfunction create$5() {\n  return new NumberSchema();\n}\nclass NumberSchema extends Schema {\n  constructor() {\n    super({\n      type: 'number',\n      check(value) {\n        if (value instanceof Number) value = value.valueOf();\n        return typeof value === 'number' && !isNaN$1(value);\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw) => {\n        if (!this.spec.coerce) return value;\n        let parsed = value;\n        if (typeof parsed === 'string') {\n          parsed = parsed.replace(/\\s/g, '');\n          if (parsed === '') return NaN;\n          // don't use parseFloat to avoid positives on alpha-numeric strings\n          parsed = +parsed;\n        }\n\n        // null -> NaN isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (this.isType(parsed) || parsed === null) return parsed;\n        return parseFloat(parsed);\n      });\n    });\n  }\n  min(min, message = number.min) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message = number.max) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(max);\n      }\n    });\n  }\n  lessThan(less, message = number.lessThan) {\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        less\n      },\n      skipAbsent: true,\n      test(value) {\n        return value < this.resolve(less);\n      }\n    });\n  }\n  moreThan(more, message = number.moreThan) {\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        more\n      },\n      skipAbsent: true,\n      test(value) {\n        return value > this.resolve(more);\n      }\n    });\n  }\n  positive(msg = number.positive) {\n    return this.moreThan(0, msg);\n  }\n  negative(msg = number.negative) {\n    return this.lessThan(0, msg);\n  }\n  integer(message = number.integer) {\n    return this.test({\n      name: 'integer',\n      message,\n      skipAbsent: true,\n      test: val => Number.isInteger(val)\n    });\n  }\n  truncate() {\n    return this.transform(value => !isAbsent(value) ? value | 0 : value);\n  }\n  round(method) {\n    var _method;\n    let avail = ['ceil', 'floor', 'round', 'trunc'];\n    method = ((_method = method) == null ? void 0 : _method.toLowerCase()) || 'round';\n\n    // this exists for symemtry with the new Math.trunc\n    if (method === 'trunc') return this.truncate();\n    if (avail.indexOf(method.toLowerCase()) === -1) throw new TypeError('Only valid options for round() are: ' + avail.join(', '));\n    return this.transform(value => !isAbsent(value) ? Math[method](value) : value);\n  }\n}\ncreate$5.prototype = NumberSchema.prototype;\n\n//\n// Number Interfaces\n//\n\nlet invalidDate = new Date('');\nlet isDate = obj => Object.prototype.toString.call(obj) === '[object Date]';\nfunction create$4() {\n  return new DateSchema();\n}\nclass DateSchema extends Schema {\n  constructor() {\n    super({\n      type: 'date',\n      check(v) {\n        return isDate(v) && !isNaN(v.getTime());\n      }\n    });\n    this.withMutation(() => {\n      this.transform((value, _raw) => {\n        // null -> InvalidDate isn't useful; treat all nulls as null and let it fail on\n        // nullability check vs TypeErrors\n        if (!this.spec.coerce || this.isType(value) || value === null) return value;\n        value = parseIsoDate(value);\n\n        // 0 is a valid timestamp equivalent to 1970-01-01T00:00:00Z(unix epoch) or before.\n        return !isNaN(value) ? new Date(value) : DateSchema.INVALID_DATE;\n      });\n    });\n  }\n  prepareParam(ref, name) {\n    let param;\n    if (!Reference.isRef(ref)) {\n      let cast = this.cast(ref);\n      if (!this._typeCheck(cast)) throw new TypeError(`\\`${name}\\` must be a Date or a value that can be \\`cast()\\` to a Date`);\n      param = cast;\n    } else {\n      param = ref;\n    }\n    return param;\n  }\n  min(min, message = date.min) {\n    let limit = this.prepareParam(min, 'min');\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      test(value) {\n        return value >= this.resolve(limit);\n      }\n    });\n  }\n  max(max, message = date.max) {\n    let limit = this.prepareParam(max, 'max');\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value <= this.resolve(limit);\n      }\n    });\n  }\n}\nDateSchema.INVALID_DATE = invalidDate;\ncreate$4.prototype = DateSchema.prototype;\ncreate$4.INVALID_DATE = invalidDate;\n\n// @ts-expect-error\nfunction sortFields(fields, excludedEdges = []) {\n  let edges = [];\n  let nodes = new Set();\n  let excludes = new Set(excludedEdges.map(([a, b]) => `${a}-${b}`));\n  function addNode(depPath, key) {\n    let node = (0,property_expr__WEBPACK_IMPORTED_MODULE_0__.split)(depPath)[0];\n    nodes.add(node);\n    if (!excludes.has(`${key}-${node}`)) edges.push([key, node]);\n  }\n  for (const key of Object.keys(fields)) {\n    let value = fields[key];\n    nodes.add(key);\n    if (Reference.isRef(value) && value.isSibling) addNode(value.path, key);else if (isSchema(value) && 'deps' in value) value.deps.forEach(path => addNode(path, key));\n  }\n  return toposort__WEBPACK_IMPORTED_MODULE_2___default().array(Array.from(nodes), edges).reverse();\n}\n\nfunction findIndex(arr, err) {\n  let idx = Infinity;\n  arr.some((key, ii) => {\n    var _err$path;\n    if ((_err$path = err.path) != null && _err$path.includes(key)) {\n      idx = ii;\n      return true;\n    }\n  });\n  return idx;\n}\nfunction sortByKeyOrder(keys) {\n  return (a, b) => {\n    return findIndex(keys, a) - findIndex(keys, b);\n  };\n}\n\nconst parseJson = (value, _, schema) => {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  let parsed = value;\n  try {\n    parsed = JSON.parse(value);\n  } catch (err) {\n    /* */\n  }\n  return schema.isType(parsed) ? parsed : value;\n};\n\n// @ts-ignore\nfunction deepPartial(schema) {\n  if ('fields' in schema) {\n    const partial = {};\n    for (const [key, fieldSchema] of Object.entries(schema.fields)) {\n      partial[key] = deepPartial(fieldSchema);\n    }\n    return schema.setFields(partial);\n  }\n  if (schema.type === 'array') {\n    const nextArray = schema.optional();\n    if (nextArray.innerType) nextArray.innerType = deepPartial(nextArray.innerType);\n    return nextArray;\n  }\n  if (schema.type === 'tuple') {\n    return schema.optional().clone({\n      types: schema.spec.types.map(deepPartial)\n    });\n  }\n  if ('optional' in schema) {\n    return schema.optional();\n  }\n  return schema;\n}\nconst deepHas = (obj, p) => {\n  const path = [...(0,property_expr__WEBPACK_IMPORTED_MODULE_0__.normalizePath)(p)];\n  if (path.length === 1) return path[0] in obj;\n  let last = path.pop();\n  let parent = (0,property_expr__WEBPACK_IMPORTED_MODULE_0__.getter)((0,property_expr__WEBPACK_IMPORTED_MODULE_0__.join)(path), true)(obj);\n  return !!(parent && last in parent);\n};\nlet isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\nfunction unknown(ctx, value) {\n  let known = Object.keys(ctx.fields);\n  return Object.keys(value).filter(key => known.indexOf(key) === -1);\n}\nconst defaultSort = sortByKeyOrder([]);\nfunction create$3(spec) {\n  return new ObjectSchema(spec);\n}\nclass ObjectSchema extends Schema {\n  constructor(spec) {\n    super({\n      type: 'object',\n      check(value) {\n        return isObject(value) || typeof value === 'function';\n      }\n    });\n    this.fields = Object.create(null);\n    this._sortErrors = defaultSort;\n    this._nodes = [];\n    this._excludedEdges = [];\n    this.withMutation(() => {\n      if (spec) {\n        this.shape(spec);\n      }\n    });\n  }\n  _cast(_value, options = {}) {\n    var _options$stripUnknown;\n    let value = super._cast(_value, options);\n\n    //should ignore nulls here\n    if (value === undefined) return this.getDefault(options);\n    if (!this._typeCheck(value)) return value;\n    let fields = this.fields;\n    let strip = (_options$stripUnknown = options.stripUnknown) != null ? _options$stripUnknown : this.spec.noUnknown;\n    let props = [].concat(this._nodes, Object.keys(value).filter(v => !this._nodes.includes(v)));\n    let intermediateValue = {}; // is filled during the transform below\n    let innerOptions = Object.assign({}, options, {\n      parent: intermediateValue,\n      __validating: options.__validating || false\n    });\n    let isChanged = false;\n    for (const prop of props) {\n      let field = fields[prop];\n      let exists = (prop in value);\n      let inputValue = value[prop];\n      if (field) {\n        let fieldValue;\n\n        // safe to mutate since this is fired in sequence\n        innerOptions.path = (options.path ? `${options.path}.` : '') + prop;\n        field = field.resolve({\n          value: inputValue,\n          context: options.context,\n          parent: intermediateValue\n        });\n        let fieldSpec = field instanceof Schema ? field.spec : undefined;\n        let strict = fieldSpec == null ? void 0 : fieldSpec.strict;\n        if (fieldSpec != null && fieldSpec.strip) {\n          isChanged = isChanged || prop in value;\n          continue;\n        }\n        fieldValue = !options.__validating || !strict ? field.cast(inputValue, innerOptions) : inputValue;\n        if (fieldValue !== undefined) {\n          intermediateValue[prop] = fieldValue;\n        }\n      } else if (exists && !strip) {\n        intermediateValue[prop] = inputValue;\n      }\n      if (exists !== prop in intermediateValue || intermediateValue[prop] !== inputValue) {\n        isChanged = true;\n      }\n    }\n    return isChanged ? intermediateValue : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let {\n      from = [],\n      originalValue = _value,\n      recursive = this.spec.recursive\n    } = options;\n    options.from = [{\n      schema: this,\n      value: originalValue\n    }, ...from];\n    // this flag is needed for handling `strict` correctly in the context of\n    // validation vs just casting. e.g strict() on a field is only used when validating\n    options.__validating = true;\n    options.originalValue = originalValue;\n    super._validate(_value, options, panic, (objectErrors, value) => {\n      if (!recursive || !isObject(value)) {\n        next(objectErrors, value);\n        return;\n      }\n      originalValue = originalValue || value;\n      let tests = [];\n      for (let key of this._nodes) {\n        let field = this.fields[key];\n        if (!field || Reference.isRef(field)) {\n          continue;\n        }\n        tests.push(field.asNestedTest({\n          options,\n          key,\n          parent: value,\n          parentPath: options.path,\n          originalParent: originalValue\n        }));\n      }\n      this.runTests({\n        tests,\n        value,\n        originalValue,\n        options\n      }, panic, fieldErrors => {\n        next(fieldErrors.sort(this._sortErrors).concat(objectErrors), value);\n      });\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    next.fields = Object.assign({}, this.fields);\n    next._nodes = this._nodes;\n    next._excludedEdges = this._excludedEdges;\n    next._sortErrors = this._sortErrors;\n    return next;\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n    let nextFields = next.fields;\n    for (let [field, schemaOrRef] of Object.entries(this.fields)) {\n      const target = nextFields[field];\n      nextFields[field] = target === undefined ? schemaOrRef : target;\n    }\n    return next.withMutation(s =>\n    // XXX: excludes here is wrong\n    s.setFields(nextFields, [...this._excludedEdges, ...schema._excludedEdges]));\n  }\n  _getDefault(options) {\n    if ('default' in this.spec) {\n      return super._getDefault(options);\n    }\n\n    // if there is no default set invent one\n    if (!this._nodes.length) {\n      return undefined;\n    }\n    let dft = {};\n    this._nodes.forEach(key => {\n      var _innerOptions;\n      const field = this.fields[key];\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      dft[key] = field && 'getDefault' in field ? field.getDefault(innerOptions) : undefined;\n    });\n    return dft;\n  }\n  setFields(shape, excludedEdges) {\n    let next = this.clone();\n    next.fields = shape;\n    next._nodes = sortFields(shape, excludedEdges);\n    next._sortErrors = sortByKeyOrder(Object.keys(shape));\n    // XXX: this carries over edges which may not be what you want\n    if (excludedEdges) next._excludedEdges = excludedEdges;\n    return next;\n  }\n  shape(additions, excludes = []) {\n    return this.clone().withMutation(next => {\n      let edges = next._excludedEdges;\n      if (excludes.length) {\n        if (!Array.isArray(excludes[0])) excludes = [excludes];\n        edges = [...next._excludedEdges, ...excludes];\n      }\n\n      // XXX: excludes here is wrong\n      return next.setFields(Object.assign(next.fields, additions), edges);\n    });\n  }\n  partial() {\n    const partial = {};\n    for (const [key, schema] of Object.entries(this.fields)) {\n      partial[key] = 'optional' in schema && schema.optional instanceof Function ? schema.optional() : schema;\n    }\n    return this.setFields(partial);\n  }\n  deepPartial() {\n    const next = deepPartial(this);\n    return next;\n  }\n  pick(keys) {\n    const picked = {};\n    for (const key of keys) {\n      if (this.fields[key]) picked[key] = this.fields[key];\n    }\n    return this.setFields(picked, this._excludedEdges.filter(([a, b]) => keys.includes(a) && keys.includes(b)));\n  }\n  omit(keys) {\n    const remaining = [];\n    for (const key of Object.keys(this.fields)) {\n      if (keys.includes(key)) continue;\n      remaining.push(key);\n    }\n    return this.pick(remaining);\n  }\n  from(from, to, alias) {\n    let fromGetter = (0,property_expr__WEBPACK_IMPORTED_MODULE_0__.getter)(from, true);\n    return this.transform(obj => {\n      if (!obj) return obj;\n      let newObj = obj;\n      if (deepHas(obj, from)) {\n        newObj = Object.assign({}, obj);\n        if (!alias) delete newObj[from];\n        newObj[to] = fromGetter(obj);\n      }\n      return newObj;\n    });\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n\n  /**\n   * Similar to `noUnknown` but only validates that an object is the right shape without stripping the unknown keys\n   */\n  exact(message) {\n    return this.test({\n      name: 'exact',\n      exclusive: true,\n      message: message || object.exact,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return unknownKeys.length === 0 || this.createError({\n          params: {\n            properties: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n  }\n  stripUnknown() {\n    return this.clone({\n      noUnknown: true\n    });\n  }\n  noUnknown(noAllow = true, message = object.noUnknown) {\n    if (typeof noAllow !== 'boolean') {\n      message = noAllow;\n      noAllow = true;\n    }\n    let next = this.test({\n      name: 'noUnknown',\n      exclusive: true,\n      message: message,\n      test(value) {\n        if (value == null) return true;\n        const unknownKeys = unknown(this.schema, value);\n        return !noAllow || unknownKeys.length === 0 || this.createError({\n          params: {\n            unknown: unknownKeys.join(', ')\n          }\n        });\n      }\n    });\n    next.spec.noUnknown = noAllow;\n    return next;\n  }\n  unknown(allow = true, message = object.noUnknown) {\n    return this.noUnknown(!allow, message);\n  }\n  transformKeys(fn) {\n    return this.transform(obj => {\n      if (!obj) return obj;\n      const result = {};\n      for (const key of Object.keys(obj)) result[fn(key)] = obj[key];\n      return result;\n    });\n  }\n  camelCase() {\n    return this.transformKeys(tiny_case__WEBPACK_IMPORTED_MODULE_1__.camelCase);\n  }\n  snakeCase() {\n    return this.transformKeys(tiny_case__WEBPACK_IMPORTED_MODULE_1__.snakeCase);\n  }\n  constantCase() {\n    return this.transformKeys(key => (0,tiny_case__WEBPACK_IMPORTED_MODULE_1__.snakeCase)(key).toUpperCase());\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.fields = {};\n    for (const [key, value] of Object.entries(next.fields)) {\n      var _innerOptions2;\n      let innerOptions = options;\n      if ((_innerOptions2 = innerOptions) != null && _innerOptions2.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[key]\n        });\n      }\n      base.fields[key] = value.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$3.prototype = ObjectSchema.prototype;\n\nfunction create$2(type) {\n  return new ArraySchema(type);\n}\nclass ArraySchema extends Schema {\n  constructor(type) {\n    super({\n      type: 'array',\n      spec: {\n        types: type\n      },\n      check(v) {\n        return Array.isArray(v);\n      }\n    });\n\n    // `undefined` specifically means uninitialized, as opposed to \"no subtype\"\n    this.innerType = void 0;\n    this.innerType = type;\n  }\n  _cast(_value, _opts) {\n    const value = super._cast(_value, _opts);\n\n    // should ignore nulls here\n    if (!this._typeCheck(value) || !this.innerType) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = value.map((v, idx) => {\n      const castElement = this.innerType.cast(v, Object.assign({}, _opts, {\n        path: `${_opts.path || ''}[${idx}]`,\n        parent: value,\n        originalValue: v,\n        value: v,\n        index: idx\n      }));\n      if (castElement !== v) {\n        isChanged = true;\n      }\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    var _options$recursive;\n    // let sync = options.sync;\n    // let path = options.path;\n    let innerType = this.innerType;\n    // let endEarly = options.abortEarly ?? this.spec.abortEarly;\n    let recursive = (_options$recursive = options.recursive) != null ? _options$recursive : this.spec.recursive;\n    options.originalValue != null ? options.originalValue : _value;\n    super._validate(_value, options, panic, (arrayErrors, value) => {\n      var _options$originalValu2;\n      if (!recursive || !innerType || !this._typeCheck(value)) {\n        next(arrayErrors, value);\n        return;\n      }\n\n      // #950 Ensure that sparse array empty slots are validated\n      let tests = new Array(value.length);\n      for (let index = 0; index < value.length; index++) {\n        var _options$originalValu;\n        tests[index] = innerType.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(arrayErrors), value));\n    });\n  }\n  clone(spec) {\n    const next = super.clone(spec);\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    return next;\n  }\n\n  /** Parse an input JSON string to an object */\n  json() {\n    return this.transform(parseJson);\n  }\n  concat(schema) {\n    let next = super.concat(schema);\n\n    // @ts-expect-error readonly\n    next.innerType = this.innerType;\n    if (schema.innerType)\n      // @ts-expect-error readonly\n      next.innerType = next.innerType ?\n      // @ts-expect-error Lazy doesn't have concat and will break\n      next.innerType.concat(schema.innerType) : schema.innerType;\n    return next;\n  }\n  of(schema) {\n    // FIXME: this should return a new instance of array without the default to be\n    let next = this.clone();\n    if (!isSchema(schema)) throw new TypeError('`array.of()` sub-schema must be a valid yup schema not: ' + printValue(schema));\n\n    // @ts-expect-error readonly\n    next.innerType = schema;\n    next.spec = Object.assign({}, next.spec, {\n      types: schema\n    });\n    return next;\n  }\n  length(length, message = array.length) {\n    return this.test({\n      message,\n      name: 'length',\n      exclusive: true,\n      params: {\n        length\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length === this.resolve(length);\n      }\n    });\n  }\n  min(min, message) {\n    message = message || array.min;\n    return this.test({\n      message,\n      name: 'min',\n      exclusive: true,\n      params: {\n        min\n      },\n      skipAbsent: true,\n      // FIXME(ts): Array<typeof T>\n      test(value) {\n        return value.length >= this.resolve(min);\n      }\n    });\n  }\n  max(max, message) {\n    message = message || array.max;\n    return this.test({\n      message,\n      name: 'max',\n      exclusive: true,\n      params: {\n        max\n      },\n      skipAbsent: true,\n      test(value) {\n        return value.length <= this.resolve(max);\n      }\n    });\n  }\n  ensure() {\n    return this.default(() => []).transform((val, original) => {\n      // We don't want to return `null` for nullable schema\n      if (this._typeCheck(val)) return val;\n      return original == null ? [] : [].concat(original);\n    });\n  }\n  compact(rejector) {\n    let reject = !rejector ? v => !!v : (v, i, a) => !rejector(v, i, a);\n    return this.transform(values => values != null ? values.filter(reject) : values);\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    if (next.innerType) {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[0]\n        });\n      }\n      base.innerType = next.innerType.describe(innerOptions);\n    }\n    return base;\n  }\n}\ncreate$2.prototype = ArraySchema.prototype;\n\n// @ts-ignore\nfunction create$1(schemas) {\n  return new TupleSchema(schemas);\n}\nclass TupleSchema extends Schema {\n  constructor(schemas) {\n    super({\n      type: 'tuple',\n      spec: {\n        types: schemas\n      },\n      check(v) {\n        const types = this.spec.types;\n        return Array.isArray(v) && v.length === types.length;\n      }\n    });\n    this.withMutation(() => {\n      this.typeError(tuple.notType);\n    });\n  }\n  _cast(inputValue, options) {\n    const {\n      types\n    } = this.spec;\n    const value = super._cast(inputValue, options);\n    if (!this._typeCheck(value)) {\n      return value;\n    }\n    let isChanged = false;\n    const castArray = types.map((type, idx) => {\n      const castElement = type.cast(value[idx], Object.assign({}, options, {\n        path: `${options.path || ''}[${idx}]`,\n        parent: value,\n        originalValue: value[idx],\n        value: value[idx],\n        index: idx\n      }));\n      if (castElement !== value[idx]) isChanged = true;\n      return castElement;\n    });\n    return isChanged ? castArray : value;\n  }\n  _validate(_value, options = {}, panic, next) {\n    let itemTypes = this.spec.types;\n    super._validate(_value, options, panic, (tupleErrors, value) => {\n      var _options$originalValu2;\n      // intentionally not respecting recursive\n      if (!this._typeCheck(value)) {\n        next(tupleErrors, value);\n        return;\n      }\n      let tests = [];\n      for (let [index, itemSchema] of itemTypes.entries()) {\n        var _options$originalValu;\n        tests[index] = itemSchema.asNestedTest({\n          options,\n          index,\n          parent: value,\n          parentPath: options.path,\n          originalParent: (_options$originalValu = options.originalValue) != null ? _options$originalValu : _value\n        });\n      }\n      this.runTests({\n        value,\n        tests,\n        originalValue: (_options$originalValu2 = options.originalValue) != null ? _options$originalValu2 : _value,\n        options\n      }, panic, innerTypeErrors => next(innerTypeErrors.concat(tupleErrors), value));\n    });\n  }\n  describe(options) {\n    const next = (options ? this.resolve(options) : this).clone();\n    const base = super.describe(options);\n    base.innerType = next.spec.types.map((schema, index) => {\n      var _innerOptions;\n      let innerOptions = options;\n      if ((_innerOptions = innerOptions) != null && _innerOptions.value) {\n        innerOptions = Object.assign({}, innerOptions, {\n          parent: innerOptions.value,\n          value: innerOptions.value[index]\n        });\n      }\n      return schema.describe(innerOptions);\n    });\n    return base;\n  }\n}\ncreate$1.prototype = TupleSchema.prototype;\n\nfunction create(builder) {\n  return new Lazy(builder);\n}\nfunction catchValidationError(fn) {\n  try {\n    return fn();\n  } catch (err) {\n    if (ValidationError.isError(err)) return Promise.reject(err);\n    throw err;\n  }\n}\nclass Lazy {\n  constructor(builder) {\n    this.type = 'lazy';\n    this.__isYupSchema__ = true;\n    this.spec = void 0;\n    this._resolve = (value, options = {}) => {\n      let schema = this.builder(value, options);\n      if (!isSchema(schema)) throw new TypeError('lazy() functions must return a valid schema');\n      if (this.spec.optional) schema = schema.optional();\n      return schema.resolve(options);\n    };\n    this.builder = builder;\n    this.spec = {\n      meta: undefined,\n      optional: false\n    };\n  }\n  clone(spec) {\n    const next = new Lazy(this.builder);\n    next.spec = Object.assign({}, this.spec, spec);\n    return next;\n  }\n  optionality(optional) {\n    const next = this.clone({\n      optional\n    });\n    return next;\n  }\n  optional() {\n    return this.optionality(true);\n  }\n  resolve(options) {\n    return this._resolve(options.value, options);\n  }\n  cast(value, options) {\n    return this._resolve(value, options).cast(value, options);\n  }\n  asNestedTest(config) {\n    let {\n      key,\n      index,\n      parent,\n      options\n    } = config;\n    let value = parent[index != null ? index : key];\n    return this._resolve(value, Object.assign({}, options, {\n      value,\n      parent\n    })).asNestedTest(config);\n  }\n  validate(value, options) {\n    return catchValidationError(() => this._resolve(value, options).validate(value, options));\n  }\n  validateSync(value, options) {\n    return this._resolve(value, options).validateSync(value, options);\n  }\n  validateAt(path, value, options) {\n    return catchValidationError(() => this._resolve(value, options).validateAt(path, value, options));\n  }\n  validateSyncAt(path, value, options) {\n    return this._resolve(value, options).validateSyncAt(path, value, options);\n  }\n  isValid(value, options) {\n    try {\n      return this._resolve(value, options).isValid(value, options);\n    } catch (err) {\n      if (ValidationError.isError(err)) {\n        return Promise.resolve(false);\n      }\n      throw err;\n    }\n  }\n  isValidSync(value, options) {\n    return this._resolve(value, options).isValidSync(value, options);\n  }\n  describe(options) {\n    return options ? this.resolve(options).describe(options) : {\n      type: 'lazy',\n      meta: this.spec.meta,\n      label: undefined\n    };\n  }\n  meta(...args) {\n    if (args.length === 0) return this.spec.meta;\n    let next = this.clone();\n    next.spec.meta = Object.assign(next.spec.meta || {}, args[0]);\n    return next;\n  }\n  get ['~standard']() {\n    const schema = this;\n    const standard = {\n      version: 1,\n      vendor: 'yup',\n      async validate(value) {\n        try {\n          const result = await schema.validate(value, {\n            abortEarly: false\n          });\n          return {\n            value: result\n          };\n        } catch (err) {\n          if (ValidationError.isError(err)) {\n            return {\n              issues: issuesFromValidationError(err)\n            };\n          }\n          throw err;\n        }\n      }\n    };\n    return standard;\n  }\n}\n\nfunction setLocale(custom) {\n  Object.keys(custom).forEach(type => {\n    // @ts-ignore\n    Object.keys(custom[type]).forEach(method => {\n      // @ts-ignore\n      locale[type][method] = custom[type][method];\n    });\n  });\n}\n\nfunction addMethod(schemaType, name, fn) {\n  if (!schemaType || !isSchema(schemaType.prototype)) throw new TypeError('You must provide a yup schema constructor function');\n  if (typeof name !== 'string') throw new TypeError('A Method name must be provided');\n  if (typeof fn !== 'function') throw new TypeError('Method function must be provided');\n  schemaType.prototype[name] = fn;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/yup/index.esm.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/client/components/app-router-headers.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/app-router-headers.js ***!
  \************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    ACTION_HEADER: function() {\n        return ACTION_HEADER;\n    },\n    FLIGHT_HEADERS: function() {\n        return FLIGHT_HEADERS;\n    },\n    NEXT_ACTION_NOT_FOUND_HEADER: function() {\n        return NEXT_ACTION_NOT_FOUND_HEADER;\n    },\n    NEXT_DID_POSTPONE_HEADER: function() {\n        return NEXT_DID_POSTPONE_HEADER;\n    },\n    NEXT_HMR_REFRESH_HASH_COOKIE: function() {\n        return NEXT_HMR_REFRESH_HASH_COOKIE;\n    },\n    NEXT_HMR_REFRESH_HEADER: function() {\n        return NEXT_HMR_REFRESH_HEADER;\n    },\n    NEXT_IS_PRERENDER_HEADER: function() {\n        return NEXT_IS_PRERENDER_HEADER;\n    },\n    NEXT_REWRITTEN_PATH_HEADER: function() {\n        return NEXT_REWRITTEN_PATH_HEADER;\n    },\n    NEXT_REWRITTEN_QUERY_HEADER: function() {\n        return NEXT_REWRITTEN_QUERY_HEADER;\n    },\n    NEXT_ROUTER_PREFETCH_HEADER: function() {\n        return NEXT_ROUTER_PREFETCH_HEADER;\n    },\n    NEXT_ROUTER_SEGMENT_PREFETCH_HEADER: function() {\n        return NEXT_ROUTER_SEGMENT_PREFETCH_HEADER;\n    },\n    NEXT_ROUTER_STALE_TIME_HEADER: function() {\n        return NEXT_ROUTER_STALE_TIME_HEADER;\n    },\n    NEXT_ROUTER_STATE_TREE_HEADER: function() {\n        return NEXT_ROUTER_STATE_TREE_HEADER;\n    },\n    NEXT_RSC_UNION_QUERY: function() {\n        return NEXT_RSC_UNION_QUERY;\n    },\n    NEXT_URL: function() {\n        return NEXT_URL;\n    },\n    RSC_CONTENT_TYPE_HEADER: function() {\n        return RSC_CONTENT_TYPE_HEADER;\n    },\n    RSC_HEADER: function() {\n        return RSC_HEADER;\n    }\n});\nconst RSC_HEADER = 'RSC';\nconst ACTION_HEADER = 'Next-Action';\nconst NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree';\nconst NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch';\nconst NEXT_ROUTER_SEGMENT_PREFETCH_HEADER = 'Next-Router-Segment-Prefetch';\nconst NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh';\nconst NEXT_HMR_REFRESH_HASH_COOKIE = '__next_hmr_refresh_hash__';\nconst NEXT_URL = 'Next-Url';\nconst RSC_CONTENT_TYPE_HEADER = 'text/x-component';\nconst FLIGHT_HEADERS = [\n    RSC_HEADER,\n    NEXT_ROUTER_STATE_TREE_HEADER,\n    NEXT_ROUTER_PREFETCH_HEADER,\n    NEXT_HMR_REFRESH_HEADER,\n    NEXT_ROUTER_SEGMENT_PREFETCH_HEADER\n];\nconst NEXT_RSC_UNION_QUERY = '_rsc';\nconst NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time';\nconst NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed';\nconst NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path';\nconst NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query';\nconst NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender';\nconst NEXT_ACTION_NOT_FOUND_HEADER = 'x-nextjs-action-not-found';\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n    Object.defineProperty(exports.default, '__esModule', {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=app-router-headers.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFDYUEsYUFBYTtlQUFiQTs7SUFpQkFDLGNBQWM7ZUFBZEE7O0lBZUFDLDRCQUE0QjtlQUE1QkE7O0lBSkFDLHdCQUF3QjtlQUF4QkE7O0lBZkFDLDRCQUE0QjtlQUE1QkE7O0lBREFDLHVCQUF1QjtlQUF2QkE7O0lBbUJBQyx3QkFBd0I7ZUFBeEJBOztJQUZBQywwQkFBMEI7ZUFBMUJBOztJQUNBQywyQkFBMkI7ZUFBM0JBOztJQXpCQUMsMkJBQTJCO2VBQTNCQTs7SUFLQUMsbUNBQW1DO2VBQW5DQTs7SUFpQkFDLDZCQUE2QjtlQUE3QkE7O0lBdkJBQyw2QkFBNkI7ZUFBN0JBOztJQXFCQUMsb0JBQW9CO2VBQXBCQTs7SUFYQUMsUUFBUTtlQUFSQTs7SUFDQUMsdUJBQXVCO2VBQXZCQTs7SUFoQkFDLFVBQVU7ZUFBVkE7OztBQUFOLE1BQU1BLGFBQWE7QUFDbkIsTUFBTWhCLGdCQUFnQjtBQUl0QixNQUFNWSxnQ0FBZ0M7QUFDdEMsTUFBTUgsOEJBQThCO0FBS3BDLE1BQU1DLHNDQUNYO0FBQ0ssTUFBTUwsMEJBQTBCO0FBQ2hDLE1BQU1ELCtCQUErQjtBQUNyQyxNQUFNVSxXQUFXO0FBQ2pCLE1BQU1DLDBCQUEwQjtBQUVoQyxNQUFNZCxpQkFBaUI7SUFDNUJlO0lBQ0FKO0lBQ0FIO0lBQ0FKO0lBQ0FLO0NBQ0Q7QUFFTSxNQUFNRyx1QkFBdUI7QUFFN0IsTUFBTUYsZ0NBQWdDO0FBQ3RDLE1BQU1SLDJCQUEyQjtBQUNqQyxNQUFNSSw2QkFBNkI7QUFDbkMsTUFBTUMsOEJBQThCO0FBQ3BDLE1BQU1GLDJCQUEyQjtBQUNqQyxNQUFNSiwrQkFBK0IiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcc3JjXFxjbGllbnRcXGNvbXBvbmVudHNcXGFwcC1yb3V0ZXItaGVhZGVycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUlNDX0hFQURFUiA9ICdSU0MnIGFzIGNvbnN0XG5leHBvcnQgY29uc3QgQUNUSU9OX0hFQURFUiA9ICdOZXh0LUFjdGlvbicgYXMgY29uc3Rcbi8vIFRPRE86IEluc3RlYWQgb2Ygc2VuZGluZyB0aGUgZnVsbCByb3V0ZXIgc3RhdGUsIHdlIG9ubHkgbmVlZCB0byBzZW5kIHRoZVxuLy8gc2VnbWVudCBwYXRoLiBTYXZlcyBieXRlcy4gVGhlbiB3ZSBjb3VsZCBhbHNvIHVzZSB0aGlzIGZpZWxkIGZvciBzZWdtZW50XG4vLyBwcmVmZXRjaGVzLCB3aGljaCBhbHNvIG5lZWQgdG8gc3BlY2lmeSBhIHBhcnRpY3VsYXIgc2VnbWVudC5cbmV4cG9ydCBjb25zdCBORVhUX1JPVVRFUl9TVEFURV9UUkVFX0hFQURFUiA9ICdOZXh0LVJvdXRlci1TdGF0ZS1UcmVlJyBhcyBjb25zdFxuZXhwb3J0IGNvbnN0IE5FWFRfUk9VVEVSX1BSRUZFVENIX0hFQURFUiA9ICdOZXh0LVJvdXRlci1QcmVmZXRjaCcgYXMgY29uc3Rcbi8vIFRoaXMgY29udGFpbnMgdGhlIHBhdGggdG8gdGhlIHNlZ21lbnQgYmVpbmcgcHJlZmV0Y2hlZC5cbi8vIFRPRE86IElmIHdlIGNoYW5nZSBOZXh0LVJvdXRlci1TdGF0ZS1UcmVlIHRvIGJlIGEgc2VnbWVudCBwYXRoLCB3ZSBjYW4gdXNlXG4vLyB0aGF0IGluc3RlYWQuIFRoZW4gTmV4dC1Sb3V0ZXItUHJlZmV0Y2ggYW5kIE5leHQtUm91dGVyLVNlZ21lbnQtUHJlZmV0Y2ggY2FuXG4vLyBiZSBtZXJnZWQgaW50byBhIHNpbmdsZSBlbnVtLlxuZXhwb3J0IGNvbnN0IE5FWFRfUk9VVEVSX1NFR01FTlRfUFJFRkVUQ0hfSEVBREVSID1cbiAgJ05leHQtUm91dGVyLVNlZ21lbnQtUHJlZmV0Y2gnIGFzIGNvbnN0XG5leHBvcnQgY29uc3QgTkVYVF9ITVJfUkVGUkVTSF9IRUFERVIgPSAnTmV4dC1ITVItUmVmcmVzaCcgYXMgY29uc3RcbmV4cG9ydCBjb25zdCBORVhUX0hNUl9SRUZSRVNIX0hBU0hfQ09PS0lFID0gJ19fbmV4dF9obXJfcmVmcmVzaF9oYXNoX18nIGFzIGNvbnN0XG5leHBvcnQgY29uc3QgTkVYVF9VUkwgPSAnTmV4dC1VcmwnIGFzIGNvbnN0XG5leHBvcnQgY29uc3QgUlNDX0NPTlRFTlRfVFlQRV9IRUFERVIgPSAndGV4dC94LWNvbXBvbmVudCcgYXMgY29uc3RcblxuZXhwb3J0IGNvbnN0IEZMSUdIVF9IRUFERVJTID0gW1xuICBSU0NfSEVBREVSLFxuICBORVhUX1JPVVRFUl9TVEFURV9UUkVFX0hFQURFUixcbiAgTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSLFxuICBORVhUX0hNUl9SRUZSRVNIX0hFQURFUixcbiAgTkVYVF9ST1VURVJfU0VHTUVOVF9QUkVGRVRDSF9IRUFERVIsXG5dIGFzIGNvbnN0XG5cbmV4cG9ydCBjb25zdCBORVhUX1JTQ19VTklPTl9RVUVSWSA9ICdfcnNjJyBhcyBjb25zdFxuXG5leHBvcnQgY29uc3QgTkVYVF9ST1VURVJfU1RBTEVfVElNRV9IRUFERVIgPSAneC1uZXh0anMtc3RhbGUtdGltZScgYXMgY29uc3RcbmV4cG9ydCBjb25zdCBORVhUX0RJRF9QT1NUUE9ORV9IRUFERVIgPSAneC1uZXh0anMtcG9zdHBvbmVkJyBhcyBjb25zdFxuZXhwb3J0IGNvbnN0IE5FWFRfUkVXUklUVEVOX1BBVEhfSEVBREVSID0gJ3gtbmV4dGpzLXJld3JpdHRlbi1wYXRoJyBhcyBjb25zdFxuZXhwb3J0IGNvbnN0IE5FWFRfUkVXUklUVEVOX1FVRVJZX0hFQURFUiA9ICd4LW5leHRqcy1yZXdyaXR0ZW4tcXVlcnknIGFzIGNvbnN0XG5leHBvcnQgY29uc3QgTkVYVF9JU19QUkVSRU5ERVJfSEVBREVSID0gJ3gtbmV4dGpzLXByZXJlbmRlcicgYXMgY29uc3RcbmV4cG9ydCBjb25zdCBORVhUX0FDVElPTl9OT1RfRk9VTkRfSEVBREVSID0gJ3gtbmV4dGpzLWFjdGlvbi1ub3QtZm91bmQnIGFzIGNvbnN0XG4iXSwibmFtZXMiOlsiQUNUSU9OX0hFQURFUiIsIkZMSUdIVF9IRUFERVJTIiwiTkVYVF9BQ1RJT05fTk9UX0ZPVU5EX0hFQURFUiIsIk5FWFRfRElEX1BPU1RQT05FX0hFQURFUiIsIk5FWFRfSE1SX1JFRlJFU0hfSEFTSF9DT09LSUUiLCJORVhUX0hNUl9SRUZSRVNIX0hFQURFUiIsIk5FWFRfSVNfUFJFUkVOREVSX0hFQURFUiIsIk5FWFRfUkVXUklUVEVOX1BBVEhfSEVBREVSIiwiTkVYVF9SRVdSSVRURU5fUVVFUllfSEVBREVSIiwiTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSIiwiTkVYVF9ST1VURVJfU0VHTUVOVF9QUkVGRVRDSF9IRUFERVIiLCJORVhUX1JPVVRFUl9TVEFMRV9USU1FX0hFQURFUiIsIk5FWFRfUk9VVEVSX1NUQVRFX1RSRUVfSEVBREVSIiwiTkVYVF9SU0NfVU5JT05fUVVFUlkiLCJORVhUX1VSTCIsIlJTQ19DT05URU5UX1RZUEVfSEVBREVSIiwiUlNDX0hFQURFUiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/client/components/app-router-headers.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/async-local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/async-local-storage.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    bindSnapshot: function() {\n        return bindSnapshot;\n    },\n    createAsyncLocalStorage: function() {\n        return createAsyncLocalStorage;\n    },\n    createSnapshot: function() {\n        return createSnapshot;\n    }\n});\nconst sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nfunction bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nfunction createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL2FzeW5jLWxvY2FsLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixNQUFNLENBSUw7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxzZXJ2ZXJcXGFwcC1yZW5kZXJcXGFzeW5jLWxvY2FsLXN0b3JhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBiaW5kU25hcHNob3Q6IG51bGwsXG4gICAgY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2U6IG51bGwsXG4gICAgY3JlYXRlU25hcHNob3Q6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgYmluZFNuYXBzaG90OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGJpbmRTbmFwc2hvdDtcbiAgICB9LFxuICAgIGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlO1xuICAgIH0sXG4gICAgY3JlYXRlU25hcHNob3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlU25hcHNob3Q7XG4gICAgfVxufSk7XG5jb25zdCBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ldyBFcnJvcignSW52YXJpYW50OiBBc3luY0xvY2FsU3RvcmFnZSBhY2Nlc3NlZCBpbiBydW50aW1lIHdoZXJlIGl0IGlzIG5vdCBhdmFpbGFibGUnKSwgXCJfX05FWFRfRVJST1JfQ09ERVwiLCB7XG4gICAgdmFsdWU6IFwiRTUwNFwiLFxuICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxufSk7XG5jbGFzcyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2Uge1xuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIGdldFN0b3JlKCkge1xuICAgICAgICAvLyBUaGlzIGZha2UgaW1wbGVtZW50YXRpb24gb2YgQXN5bmNMb2NhbFN0b3JhZ2UgYWx3YXlzIHJldHVybnMgYHVuZGVmaW5lZGAuXG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJ1bigpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZXhpdCgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG4gICAgZW50ZXJXaXRoKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBzdGF0aWMgYmluZChmbikge1xuICAgICAgICByZXR1cm4gZm47XG4gICAgfVxufVxuY29uc3QgbWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSA9IHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJyAmJiBnbG9iYWxUaGlzLkFzeW5jTG9jYWxTdG9yYWdlO1xuZnVuY3Rpb24gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UoKSB7XG4gICAgaWYgKG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRmFrZUFzeW5jTG9jYWxTdG9yYWdlKCk7XG59XG5mdW5jdGlvbiBiaW5kU25hcHNob3QoZm4pIHtcbiAgICBpZiAobWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSkge1xuICAgICAgICByZXR1cm4gbWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZS5iaW5kKGZuKTtcbiAgICB9XG4gICAgcmV0dXJuIEZha2VBc3luY0xvY2FsU3RvcmFnZS5iaW5kKGZuKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVNuYXBzaG90KCkge1xuICAgIGlmIChtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlLnNuYXBzaG90KCk7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbihmbiwgLi4uYXJncykge1xuICAgICAgICByZXR1cm4gZm4oLi4uYXJncyk7XG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXN5bmMtbG9jYWwtc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/async-local-storage.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/work-async-storage-instance.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/work-async-storage-instance.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"workAsyncStorageInstance\", ({\n    enumerable: true,\n    get: function() {\n        return workAsyncStorageInstance;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/server/app-render/async-local-storage.js\");\nconst workAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=work-async-storage-instance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL3dvcmstYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLDREQUEyRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLDJCQUEyQixtQkFBTyxDQUFDLHlHQUF1QjtBQUMxRDs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMdWlzXFxEZXNrdG9wXFxDT0xMRUdFXFxDQVBTVE9ORVxcU3VnYXJjYW5lX0FydGlzdF9NYW5hZ2VtZW50XFxub2RlX21vZHVsZXNcXG5leHRcXGRpc3RcXHNlcnZlclxcYXBwLXJlbmRlclxcd29yay1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwid29ya0FzeW5jU3RvcmFnZUluc3RhbmNlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3b3JrQXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfYXN5bmNsb2NhbHN0b3JhZ2UgPSByZXF1aXJlKFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCIpO1xuY29uc3Qgd29ya0FzeW5jU3RvcmFnZUluc3RhbmNlID0gKDAsIF9hc3luY2xvY2Fsc3RvcmFnZS5jcmVhdGVBc3luY0xvY2FsU3RvcmFnZSkoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29yay1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/work-async-storage-instance.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/work-async-storage.external.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"workAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return _workasyncstorageinstance.workAsyncStorageInstance;\n    }\n}));\nconst _workasyncstorageinstance = __webpack_require__(/*! ./work-async-storage-instance */ \"(shared)/./node_modules/next/dist/server/app-render/work-async-storage-instance.js\");\n\n//# sourceMappingURL=work-async-storage.external.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL3dvcmstYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLG9EQUFtRDtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsRUFBQztBQUNGLGtDQUFrQyxtQkFBTyxDQUFDLHlIQUErQjs7QUFFekUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTHVpc1xcRGVza3RvcFxcQ09MTEVHRVxcQ0FQU1RPTkVcXFN1Z2FyY2FuZV9BcnRpc3RfTWFuYWdlbWVudFxcbm9kZV9tb2R1bGVzXFxuZXh0XFxkaXN0XFxzZXJ2ZXJcXGFwcC1yZW5kZXJcXHdvcmstYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIndvcmtBc3luY1N0b3JhZ2VcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF93b3JrYXN5bmNzdG9yYWdlaW5zdGFuY2Uud29ya0FzeW5jU3RvcmFnZUluc3RhbmNlO1xuICAgIH1cbn0pO1xuY29uc3QgX3dvcmthc3luY3N0b3JhZ2VpbnN0YW5jZSA9IHJlcXVpcmUoXCIuL3dvcmstYXN5bmMtc3RvcmFnZS1pbnN0YW5jZVwiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29yay1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/work-async-storage.external.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage-instance.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/work-unit-async-storage-instance.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"workUnitAsyncStorageInstance\", ({\n    enumerable: true,\n    get: function() {\n        return workUnitAsyncStorageInstance;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/server/app-render/async-local-storage.js\");\nconst workUnitAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=work-unit-async-storage-instance.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL3dvcmstdW5pdC1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsZ0VBQStEO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDO0FBQ0YsMkJBQTJCLG1CQUFPLENBQUMseUdBQXVCO0FBQzFEOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXEx1aXNcXERlc2t0b3BcXENPTExFR0VcXENBUFNUT05FXFxTdWdhcmNhbmVfQXJ0aXN0X01hbmFnZW1lbnRcXG5vZGVfbW9kdWxlc1xcbmV4dFxcZGlzdFxcc2VydmVyXFxhcHAtcmVuZGVyXFx3b3JrLXVuaXQtYXN5bmMtc3RvcmFnZS1pbnN0YW5jZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIndvcmtVbml0QXN5bmNTdG9yYWdlSW5zdGFuY2VcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHdvcmtVbml0QXN5bmNTdG9yYWdlSW5zdGFuY2U7XG4gICAgfVxufSk7XG5jb25zdCBfYXN5bmNsb2NhbHN0b3JhZ2UgPSByZXF1aXJlKFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCIpO1xuY29uc3Qgd29ya1VuaXRBc3luY1N0b3JhZ2VJbnN0YW5jZSA9ICgwLCBfYXN5bmNsb2NhbHN0b3JhZ2UuY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UpKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdvcmstdW5pdC1hc3luYy1zdG9yYWdlLWluc3RhbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage-instance.js\n"));

/***/ }),

/***/ "(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getDraftModeProviderForCacheScope: function() {\n        return getDraftModeProviderForCacheScope;\n    },\n    getExpectedRequestStore: function() {\n        return getExpectedRequestStore;\n    },\n    getHmrRefreshHash: function() {\n        return getHmrRefreshHash;\n    },\n    getPrerenderResumeDataCache: function() {\n        return getPrerenderResumeDataCache;\n    },\n    getRenderResumeDataCache: function() {\n        return getRenderResumeDataCache;\n    },\n    throwForMissingRequestStore: function() {\n        return throwForMissingRequestStore;\n    },\n    workUnitAsyncStorage: function() {\n        return _workunitasyncstorageinstance.workUnitAsyncStorageInstance;\n    }\n});\nconst _workunitasyncstorageinstance = __webpack_require__(/*! ./work-unit-async-storage-instance */ \"(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage-instance.js\");\nconst _approuterheaders = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(shared)/./node_modules/next/dist/client/components/app-router-headers.js\");\nfunction getExpectedRequestStore(callingExpression) {\n    const workUnitStore = _workunitasyncstorageinstance.workUnitAsyncStorageInstance.getStore();\n    if (!workUnitStore) {\n        throwForMissingRequestStore(callingExpression);\n    }\n    switch(workUnitStore.type){\n        case 'request':\n            return workUnitStore;\n        case 'prerender':\n        case 'prerender-client':\n        case 'prerender-ppr':\n        case 'prerender-legacy':\n            // This should not happen because we should have checked it already.\n            throw Object.defineProperty(new Error(\"`\".concat(callingExpression, \"` cannot be called inside a prerender. This is a bug in Next.js.\")), \"__NEXT_ERROR_CODE\", {\n                value: \"E401\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'cache':\n            throw Object.defineProperty(new Error(\"`\".concat(callingExpression, '` cannot be called inside \"use cache\". Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/messages/next-request-in-use-cache')), \"__NEXT_ERROR_CODE\", {\n                value: \"E37\",\n                enumerable: false,\n                configurable: true\n            });\n        case 'unstable-cache':\n            throw Object.defineProperty(new Error(\"`\".concat(callingExpression, \"` cannot be called inside unstable_cache. Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/app/api-reference/functions/unstable_cache\")), \"__NEXT_ERROR_CODE\", {\n                value: \"E69\",\n                enumerable: false,\n                configurable: true\n            });\n        default:\n            const _exhaustiveCheck = workUnitStore;\n            return _exhaustiveCheck;\n    }\n}\nfunction throwForMissingRequestStore(callingExpression) {\n    throw Object.defineProperty(new Error(\"`\".concat(callingExpression, \"` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context\")), \"__NEXT_ERROR_CODE\", {\n        value: \"E251\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction getPrerenderResumeDataCache(workUnitStore) {\n    if (workUnitStore.type === 'prerender' || // TODO eliminate fetch caching in client scope and stop exposing this data cache during SSR\n    workUnitStore.type === 'prerender-client' || workUnitStore.type === 'prerender-ppr') {\n        return workUnitStore.prerenderResumeDataCache;\n    }\n    return null;\n}\nfunction getRenderResumeDataCache(workUnitStore) {\n    switch(workUnitStore.type){\n        case 'request':\n            return workUnitStore.renderResumeDataCache;\n        case 'prerender':\n        case 'prerender-client':\n            if (workUnitStore.renderResumeDataCache) {\n                // If we are in a prerender, we might have a render resume data cache\n                // that is used to read from prefilled caches.\n                return workUnitStore.renderResumeDataCache;\n            }\n        // fallthrough\n        case 'prerender-ppr':\n            // Otherwise we return the mutable resume data cache here as an immutable\n            // version of the cache as it can also be used for reading.\n            return workUnitStore.prerenderResumeDataCache;\n        default:\n            return null;\n    }\n}\nfunction getHmrRefreshHash(workStore, workUnitStore) {\n    var _workUnitStore_cookies_get;\n    if (!workStore.dev) {\n        return undefined;\n    }\n    return workUnitStore.type === 'cache' || workUnitStore.type === 'prerender' ? workUnitStore.hmrRefreshHash : workUnitStore.type === 'request' ? (_workUnitStore_cookies_get = workUnitStore.cookies.get(_approuterheaders.NEXT_HMR_REFRESH_HASH_COOKIE)) == null ? void 0 : _workUnitStore_cookies_get.value : undefined;\n}\nfunction getDraftModeProviderForCacheScope(workStore, workUnitStore) {\n    if (workStore.isDraftMode) {\n        switch(workUnitStore.type){\n            case 'cache':\n            case 'unstable-cache':\n            case 'request':\n                return workUnitStore.draftMode;\n            default:\n                return undefined;\n        }\n    }\n    return undefined;\n} //# sourceMappingURL=work-unit-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/server/app-render/work-unit-async-storage.external.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CLuis%5C%5CDesktop%5C%5CCOLLEGE%5C%5CCAPSTONE%5C%5CSugarcane_Artist_Management%5C%5Capp%5C%5Cimport%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);